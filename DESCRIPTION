Package: lintr
Title: A 'Linter' for R Code
Version: 2.0.1.9000
Authors@R: c(
    person("Jim", "Hester", email = "james.f.hester@gmail.com", role = c("aut", "cre")),
    person("Florent", "Angly", role = "aut"),
    person("Russ", "Hyde", role = "aut"),
    person("Michael", "Chirico", role = "aut"),
    person("Kun", "Ren", role = "aut"),
    person("Alexander", "Rosenstock", role = "aut")
    )
URL: https://github.com/r-lib/lintr
BugReports: https://github.com/r-lib/lintr/issues
Description: Checks adherence to a given style, syntax errors and possible semantic issues.
    Supports on the fly checking of R code edited with 'RStudio IDE', 'Emacs', 'Vim', 'Sublime Text',
    'Atom' and 'Visual Studio Code'.
Depends:
    R (>= 3.2)
Imports:
    rex,
    crayon,
    codetools,
    cyclocomp,
    digest,
    glue,
    jsonlite,
    knitr,
    stats,
    utils,
    xml2 (>= 1.0.0),
    xmlparsedata (>= 1.0.3),
    backports
Suggests:
    covr,
    httr (>= 1.2.1),
    mockery,
    patrick,
    rmarkdown,
    rstudioapi (>= 0.2),
    testthat (>= 3.0.0),
    tibble,
    withr
License: MIT + file LICENSE
Encoding: UTF-8
VignetteBuilder: knitr
RoxygenNote: 7.1.2
Config/testthat/edition: 3
Collate:
    'T_and_F_symbol_linter.R'
    'utils.R'
    'aaa.R'
    'actions.R'
    'addins.R'
    'any_duplicated_linter.R'
    'any_is_na_linter.R'
    'assignment_linter.R'
    'backport_linter.R'
    'brace_linter.R'
    'cache.R'
    'class_equals_linter.R'
    'closed_curly_linter.R'
    'commas_linter.R'
    'comment_linters.R'
    'comments.R'
    'condition_message_linter.R'
    'conjunct_test_linter.R'
    'consecutive_stopifnot_linter.R'
    'cyclocomp_linter.R'
    'declared_functions.R'
    'deprecated.R'
    'duplicate_argument_linter.R'
    'equals_na_linter.R'
    'exclude.R'
    'expect_comparison_linter.R'
    'expect_identical_linter.R'
    'expect_length_linter.R'
    'expect_lint.R'
    'expect_named_linter.R'
    'expect_not_linter.R'
    'expect_null_linter.R'
    'expect_s3_class_linter.R'
    'expect_true_false_linter.R'
    'expect_type_linter.R'
    'extract.R'
    'extraction_operator_linter.R'
    'fixed_regex_linter.R'
    'function_left_parentheses.R'
    'get_source_expressions.R'
    'ids_with_token.R'
    'ifelse_censor_linter.R'
    'implicit_integer_linter.R'
    'infix_spaces_linter.R'
    'inner_combine_linter.R'
    'is_lint_level.R'
    'line_length_linter.R'
    'lint.R'
    'linter_tag_docs.R'
    'linter_tags.R'
    'literal_coercion_linter.R'
    'make_linter_from_regex.R'
    'methods.R'
    'missing_argument_linter.R'
    'missing_package_linter.R'
    'namespace.R'
    'namespace_linter.R'
    'nested_ifelse_linter.R'
    'no_tab_linter.R'
    'numeric_leading_zero_linter.R'
    'object_name_linters.R'
    'object_usage_linter.R'
    'open_curly_linter.R'
    'outer_negation_linter.R'
    'package_hooks_linter.R'
    'paren_body_linter.R'
    'paren_brace_linter.R'
    'paste_linter.R'
    'path_linters.R'
    'pipe_call_linter.R'
    'pipe_continuation_linter.R'
    'redundant_ifelse_linter.R'
    'regex_subset_linter.R'
    'semicolon_linter.R'
    'seq_linter.R'
    'settings.R'
    'single_quotes_linter.R'
    'spaces_inside_linter.R'
    'spaces_left_parentheses_linter.R'
    'sprintf_linter.R'
    'strings_as_factors_linter.R'
    'system_file_linter.R'
    'trailing_blank_lines_linter.R'
    'trailing_whitespace_linter.R'
    'tree-utils.R'
    'undesirable_function_linter.R'
    'undesirable_operator_linter.R'
    'unneeded_concatenation_linter.R'
    'unreachable_code_linter.R'
    'unused_import_linter.R'
    'use_lintr.R'
    'vector_logic_linter.R'
    'with.R'
    'with_id.R'
    'xp_utils.R'
    'yoda_test_linter.R'
    'zzz.R'
Roxygen: list(markdown = TRUE)
