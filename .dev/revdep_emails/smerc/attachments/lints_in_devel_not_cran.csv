"filename","line_number","column_number","type","message","line","linter"
"R/arg_check_functions.R",6,27,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!(is.matrix(coords) | is.data.frame(coords))) {","vector_logic_linter"
"R/arg_check_functions.R",195,23,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (min(pvalue) < 0 | max(pvalue) > 1) {","vector_logic_linter"
"R/arg_check_functions.R",204,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (nrow(d) != N | ncol(d) != N) {","vector_logic_linter"
"R/arg_check_functions.R",280,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (min(angle_all) < 0 | max(angle_all) >= 360) {","vector_logic_linter"
"R/arg_check_functions.R",312,21,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.matrix(w) & !is.data.frame(w)) {","vector_logic_linter"
"R/arg_check_functions.R",315,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (nrow(w) != N | ncol(w) != N) {","vector_logic_linter"
"R/arg_check_functions.R",530,21,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.matrix(w) & !is.data.frame(w)) {","vector_logic_linter"
"R/arg_check_functions.R",533,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (nrow(w) != N | ncol(w) != N) {","vector_logic_linter"
"R/arg_check_functions.R",606,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (is.null(ein) | is.null(eout)) {","vector_logic_linter"
"R/arg_check_functions.R",630,22,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (is.null(popin) | is.null(popout) | is.null(tpop)) {","vector_logic_linter"
"R/arg_check_functions.R",630,40,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (is.null(popin) | is.null(popout) | is.null(tpop)) {","vector_logic_linter"
"R/arg_check_functions.R",669,16,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (ubd <= 0 | ubd > 1) {","vector_logic_linter"
"R/clusters-smerc_cluster.R",4,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (min(idx) < 1 | max(idx) > length(x$clusters)) {","vector_logic_linter"
"R/color.clusters.R",36,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (class(x) != ""scan"" & class(x) != ""smerc_cluster"") {","vector_logic_linter"
"R/color.clusters.R",39,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (min(idx) < 1 | max(idx) > length(x$clusters)) {","vector_logic_linter"
"R/combine.zones.R",18,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.list(z1) | !is.list(z2)) {","vector_logic_linter"
"R/dist.ellipse.R",61,18,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (angle < 00 | angle >= 360) {","vector_logic_linter"
"R/dmst.zones.R",102,29,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(progress) != 1 | !is.logical(progress)) {","vector_logic_linter"
"R/elliptic.nn.R",31,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(ubpop) != 1 | ubpop <= 0 | ubpop > 1) {","vector_logic_linter"
"R/elliptic.nn.R",31,39,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(ubpop) != 1 | ubpop <= 0 | ubpop > 1) {","vector_logic_linter"
"R/elliptic.sim.R",50,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(nsim) != 1 | !is.numeric(nsim) | nsim < 1) {","vector_logic_linter"
"R/elliptic.sim.R",50,45,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(nsim) != 1 | !is.numeric(nsim) | nsim < 1) {","vector_logic_linter"
"R/elliptic.test.R",57,22,"style","Variable and function name style should be snake_case or symbols.","                     min.cases = 2) {","object_name_linter"
"R/fast.zones.R",41,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(ubpop) != 1 | !is.numeric(ubpop)) {","vector_logic_linter"
"R/fast.zones.R",44,18,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (ubpop <= 0 | ubpop > 1) {","vector_logic_linter"
"R/fast.zones.R",47,27,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(simple) != 1 | !is.logical(simple)) {","vector_logic_linter"
"R/flex.sim.R",57,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(nsim) != 1 | !is.numeric(nsim) | nsim < 1) {","vector_logic_linter"
"R/flex.sim.R",57,45,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(nsim) != 1 | !is.numeric(nsim) | nsim < 1) {","vector_logic_linter"
"R/flex.sim.R",63,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(type) != 1 | !is.element(type, c(""poisson"", ""binomial""))) {","vector_logic_linter"
"R/flex.sim.R",67,22,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (is.null(ein) | is.null(eout)) {","vector_logic_linter"
"R/flex.sim.R",78,24,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (is.null(popin) | is.null(popout) | is.null(tpop)) {","vector_logic_linter"
"R/flex.sim.R",78,42,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (is.null(popin) | is.null(popout) | is.null(tpop)) {","vector_logic_linter"
"R/knn.R",33,28,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(longlat) != 1 | !is.logical(longlat)) {","vector_logic_linter"
"R/knn.R",37,13,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (k < 1 | k > n) {","vector_logic_linter"
"R/knn.R",41,22,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (nrow(d) != n | ncol(d) != n) {","vector_logic_linter"
"R/morancr.stat.R",62,21,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.matrix(w) & !is.data.frame(w)) {","vector_logic_linter"
"R/morancr.stat.R",65,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (nrow(w) != N | ncol(w) != N) {","vector_logic_linter"
"R/mst.seq.R",120,16,"warning","Conditional expressions require scalar logical operators (&& and ||)","  while (!stop & i < length(neighbors)) {","vector_logic_linter"
"R/mst.seq.R",133,16,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (i == 1 | nlinks == ""one"") {","vector_logic_linter"
"R/mst.seq.R",164,17,"warning","Conditional expressions require scalar logical operators (&& and ||)","      if (early & (stat_cand[max_idx] <= loglikrat[i])) {","vector_logic_linter"
"R/nndist.R",29,24,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(ubd) != 1 | !is.numeric(ubd) | ubd <= 0) {","vector_logic_linter"
"R/nndist.R",29,43,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(ubd) != 1 | !is.numeric(ubd) | ubd <= 0) {","vector_logic_linter"
"R/noz.R",40,5,"style","`else` should come on the same line as the previous `}`.","    else {","brace_linter"
"R/optimal_ubpop.R",43,22,"style","Variable and function name style should be snake_case or symbols.","                     min.cases = 0,","object_name_linter"
"R/optimal_ubpop.R",195,36,"style","Variable and function name style should be snake_case or symbols.","                                   min.cases) {","object_name_linter"
"R/rflex_zones.R",142,27,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(alpha1) != 1 | alpha1 <= 0) {","vector_logic_linter"
"R/rflex_zones.R",153,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(loop) != 1 | !is.logical(loop)) {","vector_logic_linter"
"R/rflex_zones.R",156,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(pfreq) != 1 | pfreq < 1) {","vector_logic_linter"
"R/rflex_zones.R",159,28,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(verbose) != 1 | !is.logical(verbose)) {","vector_logic_linter"
"R/rflex.midp.R",43,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.numeric(cases) | !is.numeric(ex)) {","vector_logic_linter"
"R/rflex.midp.R",46,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(type) != 1 |","vector_logic_linter"
"R/rflex.midp.R",50,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (type == ""binomial"" & is.null(pop)) {","vector_logic_linter"
"R/rflex.sim.R",32,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(nsim) != 1 | !is.numeric(nsim) | nsim < 1) {","vector_logic_linter"
"R/rflex.sim.R",32,45,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(nsim) != 1 | !is.numeric(nsim) | nsim < 1) {","vector_logic_linter"
"R/rflex.zones.R",149,27,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(alpha1) != 1 | alpha1 <= 0) {","vector_logic_linter"
"R/rflex.zones.R",160,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(loop) != 1 | !is.logical(loop)) {","vector_logic_linter"
"R/rflex.zones.R",163,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(pfreq) != 1 | pfreq < 1) {","vector_logic_linter"
"R/rflex.zones.R",166,28,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(verbose) != 1 | !is.logical(verbose)) {","vector_logic_linter"
"R/scan_stat.R",90,15,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (a > 0 & length(shape) == 1) {","vector_logic_linter"
"R/scan_stat.R",120,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (is.null(ein) & is.null(popin)) {","vector_logic_linter"
"R/scan_stat.R",133,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(type) != 1 | !is.element(type, c(""poisson"", ""binomial""))) {","vector_logic_linter"
"R/scan_stat.R",136,22,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(a) != 1 | a < 0 | a > 1) {","vector_logic_linter"
"R/scan_stat.R",136,30,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(a) != 1 | a < 0 | a > 1) {","vector_logic_linter"
"R/scan_stat.R",139,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(shape) != 1 & length(shape) != length(yin)) {","vector_logic_linter"
"R/scan_stat.R",142,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (type == ""binomial"" & is.null(tpop)) {","vector_logic_linter"
"R/scan.sim.R",121,29,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (simdist == ""binomial"" & is.null(pop)) {","vector_logic_linter"
"R/scan.stat.R",140,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (is.null(ein) & is.null(popin)) {","vector_logic_linter"
"R/scan.stat.R",153,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(type) != 1 | !is.element(type, c(""poisson"", ""binomial""))) {","vector_logic_linter"
"R/scan.stat.R",156,22,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(a) != 1 | a < 0 | a > 1) {","vector_logic_linter"
"R/scan.stat.R",156,30,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(a) != 1 | a < 0 | a > 1) {","vector_logic_linter"
"R/scan.stat.R",159,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(shape) != 1 & length(shape) != length(yin)) {","vector_logic_linter"
"R/scan.stat.R",162,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (type == ""binomial"" & is.null(tpop)) {","vector_logic_linter"
"R/scan.test.R",96,22,"style","Variable and function name style should be snake_case or symbols.","                     min.cases = 2,","object_name_linter"
"R/scan.test.R",215,28,"style","Variable and function name style should be snake_case or symbols.","           simdist = NULL, min.cases = NULL) {","object_name_linter"
"R/seq_scan_sim.R",25,21,"style","Variable and function name style should be snake_case or symbols.","                    min.cases = 0,","object_name_linter"
"R/seq_scan_sim.R",132,29,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (simdist == ""binomial"" & is.null(pop)) {","vector_logic_linter"
"R/seq_scan_test.R",21,22,"style","Variable and function name style should be snake_case or symbols.","                     min.cases = 0,","object_name_linter"
"R/seq_scan_test.R",140,36,"style","Variable and function name style should be snake_case or symbols.","                                   min.cases) {","object_name_linter"
"R/smerc_cluster-plot.R",53,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (min(idx) < 1 | max(idx) > length(x$clusters)) {","vector_logic_linter"
"R/smerc_cluster-print.R",19,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(extra) != 1 | !is.logical(extra)) {","vector_logic_linter"
"R/smerc_cluster-summary.R",37,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (min(idx) < 1 | max(idx) > length(object$clusters)) {","vector_logic_linter"
"R/tango.weights.R",83,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (type == ""rogerson"" & is.null(pop)) {","vector_logic_linter"
"vignettes/smerc_demo.Rmd",43,8,"style","Use <-, not =, for assignment.","coords = nydf[,c(""x"", ""y"")] # extract coordinates","assignment_linter"
"vignettes/smerc_demo.Rmd",43,16,"style","Commas should always have a space after.","coords = nydf[,c(""x"", ""y"")] # extract coordinates","commas_linter"
"vignettes/smerc_demo.Rmd",44,7,"style","Use <-, not =, for assignment.","cases = nydf$cases # extract cases","assignment_linter"
"vignettes/smerc_demo.Rmd",45,5,"style","Use <-, not =, for assignment.","pop = nydf$population # extract population","assignment_linter"
"vignettes/smerc_demo.Rmd",46,10,"style","Use <-, not =, for assignment.","scan_out = scan.test(coords, cases, pop, nsim = 99) # perform scan test","assignment_linter"
"vignettes/smerc_demo.Rmd",106,8,"style","Use <-, not =, for assignment.","bn_out = bn.test(coords = coords, cases = cases, pop = pop, cstar = 20,","assignment_linter"
"vignettes/smerc_demo.Rmd",117,10,"style","Use <-, not =, for assignment.","cepp_out = cepp.test(coords = coords, cases = cases, pop = pop,","assignment_linter"
"vignettes/smerc_demo.Rmd",129,3,"style","Use <-, not =, for assignment.","w = dweights(coords, kappa = 1) # construct weights matrix","assignment_linter"
"vignettes/smerc_demo.Rmd",130,11,"style","Use <-, not =, for assignment.","tango_out = tango.test(cases, pop, w, nsim = 49) # perform tango's test","assignment_linter"
"vignettes/smerc_demo.Rmd",143,8,"style","Use <-, not =, for assignment.","ezones = elliptic.zones(coords, pop, ubpop = 0.1)","assignment_linter"
