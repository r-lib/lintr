"filename","line_number","column_number","type","message","line","linter"
"inst/doc/toc/vignettetoc.Rmd",16,3,"style","Commented code should be removed.","# path = names(knitr::opts_knit$get(""encoding""))[1]","commented_code_linter"
"inst/doc/toc/vignettetoc.Rmd",16,3,"style","Commented code should be removed.","# path = names(knitr::opts_knit$get(""encoding""))[1]","commented_code_linter"
"inst/doc/toc/vignettetoc.Rmd",17,6,"style","Use <-, not =, for assignment.","base = knitr::opts_knit$get(""output.dir"")","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",17,6,"style","Use <-, not =, for assignment.","base = knitr::opts_knit$get(""output.dir"")","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",18,6,"style","Use <-, not =, for assignment.","file = sys.frame(min(grep(""^knitr::knit$|^knit$"", sapply(sys.calls(), function(x) as.character(x)[1]))))$input","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",18,6,"style","Use <-, not =, for assignment.","file = sys.frame(min(grep(""^knitr::knit$|^knit$"", sapply(sys.calls(), function(x) as.character(x)[1]))))$input","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",18,81,"style","Lines should not be more than 80 characters.","file = sys.frame(min(grep(""^knitr::knit$|^knit$"", sapply(sys.calls(), function(x) as.character(x)[1]))))$input","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",18,81,"style","Lines should not be more than 80 characters.","file = sys.frame(min(grep(""^knitr::knit$|^knit$"", sapply(sys.calls(), function(x) as.character(x)[1]))))$input","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",19,6,"style","Use <-, not =, for assignment.","file = basename(file)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",19,6,"style","Use <-, not =, for assignment.","file = basename(file)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",20,6,"style","Use <-, not =, for assignment.","path = file.path(base, file)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",20,6,"style","Use <-, not =, for assignment.","path = file.path(base, file)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",21,7,"style","Use <-, not =, for assignment.","rpath = gsub(""\\.[^.]*$"", "".R"", path)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",21,7,"style","Use <-, not =, for assignment.","rpath = gsub(""\\.[^.]*$"", "".R"", path)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",26,11,"style","Use <-, not =, for assignment.","    lines = readLines(rpath)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",26,11,"style","Use <-, not =, for assignment.","    lines = readLines(rpath)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",27,11,"style","Use <-, not =, for assignment.","    lines = gsub("" *(\n|$)"", ""\\1"", lines)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",27,11,"style","Use <-, not =, for assignment.","    lines = gsub("" *(\n|$)"", ""\\1"", lines)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",36,10,"style","Use <-, not =, for assignment.","fullfile = file","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",36,10,"style","Use <-, not =, for assignment.","fullfile = file","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",38,10,"style","Use <-, not =, for assignment.","allfiles = list.files(path = base, pattern = "".*\\.Rmd$"")","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",38,10,"style","Use <-, not =, for assignment.","allfiles = list.files(path = base, pattern = "".*\\.Rmd$"")","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",42,14,"style","Use <-, not =, for assignment.","fileinfolist = list()","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",42,14,"style","Use <-, not =, for assignment.","fileinfolist = list()","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",44,10,"style","Use <-, not =, for assignment.","  ismain = TRUE","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",44,10,"style","Use <-, not =, for assignment.","  ismain = TRUE","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",46,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""^z_"", """", cf)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",46,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""^z_"", """", cf)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",47,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""_terse\\.Rmd$"", """", infoslot)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",47,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""_terse\\.Rmd$"", """", infoslot)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",48,13,"style","Use <-, not =, for assignment.","    subslot = ""compact""","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",48,13,"style","Use <-, not =, for assignment.","    subslot = ""compact""","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",50,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""^a_"", """", cf)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",50,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""^a_"", """", cf)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",51,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""\\.Rmd$"", """", infoslot)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",51,14,"style","Use <-, not =, for assignment.","    infoslot = gsub(""\\.Rmd$"", """", infoslot)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",52,13,"style","Use <-, not =, for assignment.","    subslot = ""main""","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",52,13,"style","Use <-, not =, for assignment.","    subslot = ""main""","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",55,11,"style","Use <-, not =, for assignment.","  content = scan(paste(base, cf, sep = ""/""), what = ""character"", quiet = TRUE)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",55,11,"style","Use <-, not =, for assignment.","  content = scan(paste(base, cf, sep = ""/""), what = ""character"", quiet = TRUE)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",56,7,"style","Use <-, not =, for assignment.","  pos = min(c(which(content == ""title:""), Inf))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",56,7,"style","Use <-, not =, for assignment.","  pos = min(c(which(content == ""title:""), Inf))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",60,12,"style","Use <-, not =, for assignment.","  infolist = list(title = content[pos + 1], url = cf, iscurrent = cf == file)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",60,12,"style","Use <-, not =, for assignment.","  infolist = list(title = content[pos + 1], url = cf, iscurrent = cf == file)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",62,11,"style","Use <-, not =, for assignment.","  applist = list(infolist)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",62,11,"style","Use <-, not =, for assignment.","  applist = list(infolist)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",63,18,"style","Use <-, not =, for assignment.","  names(applist) = subslot","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",63,18,"style","Use <-, not =, for assignment.","  names(applist) = subslot","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",64,28,"style","Use <-, not =, for assignment.","  fileinfolist[[infoslot]] = c(fileinfolist[[infoslot]], applist)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",64,28,"style","Use <-, not =, for assignment.","  fileinfolist[[infoslot]] = c(fileinfolist[[infoslot]], applist)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",68,9,"style","Use <-, not =, for assignment.","linkify = function(info, title) {","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",68,9,"style","Use <-, not =, for assignment.","linkify = function(info, title) {","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",78,11,"style","Use <-, not =, for assignment.","  content = fileinfolist[[sort(names(fileinfolist))[idx]]]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",78,11,"style","Use <-, not =, for assignment.","  content = fileinfolist[[sort(names(fileinfolist))[idx]]]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",80,81,"style","Lines should not be more than 80 characters.","    if (paste(sub(""[0-9]\\. "", """", content$main$title), ""(No Output)"") != sub(""^z "", """", content$compact$title)) {","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",80,81,"style","Lines should not be more than 80 characters.","    if (paste(sub(""[0-9]\\. "", """", content$main$title), ""(No Output)"") != sub(""^z "", """", content$compact$title)) {","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",81,81,"style","Lines should not be more than 80 characters.","      stop(sprintf(""File %s and its compact version %s have incompatible titles\nThe compact version must be paste(main_title, \""(No Output)\""). Is: '%s', expected: '%s'"",","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",81,81,"style","Lines should not be more than 80 characters.","      stop(sprintf(""File %s and its compact version %s have incompatible titles\nThe compact version must be paste(main_title, \""(No Output)\""). Is: '%s', expected: '%s'"",","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",82,81,"style","Lines should not be more than 80 characters.","        content$main$url, content$compact$url, content$compact$title, paste(content$main$title, ""(No Output)"")))","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",82,81,"style","Lines should not be more than 80 characters.","        content$main$url, content$compact$url, content$compact$title, paste(content$main$title, ""(No Output)"")))","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",84,10,"style","Use <-, not =, for assignment.","    line = sprintf(""%s (%s)"", linkify(content$main, content$main$title), linkify(content$compact, ""compact version""))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",84,10,"style","Use <-, not =, for assignment.","    line = sprintf(""%s (%s)"", linkify(content$main, content$main$title), linkify(content$compact, ""compact version""))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",84,81,"style","Lines should not be more than 80 characters.","    line = sprintf(""%s (%s)"", linkify(content$main, content$main$title), linkify(content$compact, ""compact version""))","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",84,81,"style","Lines should not be more than 80 characters.","    line = sprintf(""%s (%s)"", linkify(content$main, content$main$title), linkify(content$compact, ""compact version""))","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",86,10,"style","Use <-, not =, for assignment.","    line = linkify(content$main, content$main$title)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",86,10,"style","Use <-, not =, for assignment.","    line = linkify(content$main, content$main$title)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",90,14,"style","Use <-, not =, for assignment.","    fullfile = content$main$url","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",90,14,"style","Use <-, not =, for assignment.","    fullfile = content$main$url","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",94,10,"style","Use <-, not =, for assignment.","fullpath = file.path(base, fullfile)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",94,10,"style","Use <-, not =, for assignment.","fullpath = file.path(base, fullfile)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",102,1,"style","Variable and function name style should be snake_case or symbols.","printToc = function(print.level = 3) {","object_name_linter"
"inst/doc/toc/vignettetoc.Rmd",102,1,"style","Variable and function name style should be snake_case or symbols.","printToc = function(print.level = 3) {","object_name_linter"
"inst/doc/toc/vignettetoc.Rmd",102,10,"style","Use <-, not =, for assignment.","printToc = function(print.level = 3) {","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",102,10,"style","Use <-, not =, for assignment.","printToc = function(print.level = 3) {","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",103,14,"style","Use <-, not =, for assignment.","  owncontent = readLines(fullpath)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",103,14,"style","Use <-, not =, for assignment.","  owncontent = readLines(fullpath)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",103,26,"warning","no visible binding for global variable ‘fullpath’","  owncontent = readLines(fullpath)","object_usage_linter"
"inst/doc/toc/vignettetoc.Rmd",103,26,"warning","no visible binding for global variable ‘fullpath’","  owncontent = readLines(fullpath)","object_usage_linter"
"inst/doc/toc/vignettetoc.Rmd",104,13,"style","Use <-, not =, for assignment.","  tripletic = grepl(""^```"", owncontent)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",104,13,"style","Use <-, not =, for assignment.","  tripletic = grepl(""^```"", owncontent)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",105,14,"style","Use <-, not =, for assignment.","  owncontent = owncontent[cumsum(tripletic) %% 2 == 0]  # exclude ```-delimited code","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",105,14,"style","Use <-, not =, for assignment.","  owncontent = owncontent[cumsum(tripletic) %% 2 == 0]  # exclude ```-delimited code","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",105,81,"style","Lines should not be more than 80 characters.","  owncontent = owncontent[cumsum(tripletic) %% 2 == 0]  # exclude ```-delimited code","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",105,81,"style","Lines should not be more than 80 characters.","  owncontent = owncontent[cumsum(tripletic) %% 2 == 0]  # exclude ```-delimited code","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",106,13,"style","Use <-, not =, for assignment.","  headlines = grep(""^#+ +"", owncontent, value = TRUE)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",106,13,"style","Use <-, not =, for assignment.","  headlines = grep(""^#+ +"", owncontent, value = TRUE)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",107,14,"style","Use <-, not =, for assignment.","  headlevels = nchar(gsub("" .*"", """", headlines))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",107,14,"style","Use <-, not =, for assignment.","  headlevels = nchar(gsub("" .*"", """", headlines))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",108,13,"style","Use <-, not =, for assignment.","  headlines = gsub(""^[#]+ +"", """", headlines)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",108,13,"style","Use <-, not =, for assignment.","  headlines = gsub(""^[#]+ +"", """", headlines)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",109,1,"style","Trailing whitespace is superfluous.","  ","trailing_whitespace_linter"
"inst/doc/toc/vignettetoc.Rmd",109,1,"style","Trailing whitespace is superfluous.","  ","trailing_whitespace_linter"
"inst/doc/toc/vignettetoc.Rmd",110,9,"style","Use <-, not =, for assignment.","  links = gsub(""[^-a-z. ]"", """", tolower(headlines))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",110,9,"style","Use <-, not =, for assignment.","  links = gsub(""[^-a-z. ]"", """", tolower(headlines))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",111,9,"style","Use <-, not =, for assignment.","  links = gsub("" +"", ""-"", links)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",111,9,"style","Use <-, not =, for assignment.","  links = gsub("" +"", ""-"", links)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",112,9,"style","Use <-, not =, for assignment.","  links = gsub(""-$"", """", links)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",112,9,"style","Use <-, not =, for assignment.","  links = gsub(""-$"", """", links)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",117,1,"style","Trailing whitespace is superfluous.","  ","trailing_whitespace_linter"
"inst/doc/toc/vignettetoc.Rmd",117,1,"style","Trailing whitespace is superfluous.","  ","trailing_whitespace_linter"
"inst/doc/toc/vignettetoc.Rmd",118,81,"style","Lines should not be more than 80 characters.","  cat(""<h"", headlevels[1], "">Table of Contents</h"", headlevels[1], "">\n<div id=\""TOC\"">\n"", sep = """")","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",118,81,"style","Lines should not be more than 80 characters.","  cat(""<h"", headlevels[1], "">Table of Contents</h"", headlevels[1], "">\n<div id=\""TOC\"">\n"", sep = """")","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",120,13,"style","Use <-, not =, for assignment.","  lastlevel = headlevels[1] - 1","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",120,13,"style","Use <-, not =, for assignment.","  lastlevel = headlevels[1] - 1","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",122,10,"style","Use <-, not =, for assignment.","    line = headlines[idx]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",122,10,"style","Use <-, not =, for assignment.","    line = headlines[idx]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",123,11,"style","Use <-, not =, for assignment.","    level = headlevels[idx]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",123,11,"style","Use <-, not =, for assignment.","    level = headlevels[idx]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",124,10,"style","Use <-, not =, for assignment.","    link = links[idx]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",124,10,"style","Use <-, not =, for assignment.","    link = links[idx]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",129,81,"style","Lines should not be more than 80 characters.","      stop(""First headline level must be the lowest one used, but '"", line, ""' is lower."")","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",129,81,"style","Lines should not be more than 80 characters.","      stop(""First headline level must be the lowest one used, but '"", line, ""' is lower."")","line_length_linter"
"inst/doc/toc/vignettetoc.Rmd",131,13,"style","Use <-, not =, for assignment.","    lvldiff = level - lastlevel","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",131,13,"style","Use <-, not =, for assignment.","    lvldiff = level - lastlevel","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",148,15,"style","Use <-, not =, for assignment.","    lastlevel = level","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",148,15,"style","Use <-, not =, for assignment.","    lastlevel = level","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",151,11,"style","Use <-, not =, for assignment.","  lvldiff = lastlevel - headlevels[1]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",151,11,"style","Use <-, not =, for assignment.","  lvldiff = lastlevel - headlevels[1]","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",165,14,"style","Use <-, not =, for assignment.","replaceprint = function(ofunc) {","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",165,14,"style","Use <-, not =, for assignment.","replaceprint = function(ofunc) {","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",168,8,"style","Use <-, not =, for assignment.","    cu = capture.output({ret = ofunc(x, ...)})","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",168,8,"style","Use <-, not =, for assignment.","    cu = capture.output({ret = ofunc(x, ...)})","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",168,25,"style","Opening curly braces should never go on their own line and should always be followed by a new line.","    cu = capture.output({ret = ofunc(x, ...)})","brace_linter"
"inst/doc/toc/vignettetoc.Rmd",168,25,"style","Opening curly braces should never go on their own line and should always be followed by a new line.","    cu = capture.output({ret = ofunc(x, ...)})","brace_linter"
"inst/doc/toc/vignettetoc.Rmd",168,30,"style","Use <-, not =, for assignment.","    cu = capture.output({ret = ofunc(x, ...)})","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",168,30,"style","Use <-, not =, for assignment.","    cu = capture.output({ret = ofunc(x, ...)})","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",169,8,"style","Use <-, not =, for assignment.","    cu = grep(""time: [-+e0-9.]{1,6}"", cu, value = TRUE, invert = TRUE)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",169,8,"style","Use <-, not =, for assignment.","    cu = grep(""time: [-+e0-9.]{1,6}"", cu, value = TRUE, invert = TRUE)","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",179,9,"style","Use <-, not =, for assignment.","  ofunc = get(pfunc, asNamespace(""mlr""))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",179,9,"style","Use <-, not =, for assignment.","  ofunc = get(pfunc, asNamespace(""mlr""))","assignment_linter"
"inst/doc/toc/vignettetoc.Rmd",182,1,"style","Trailing blank lines are superfluous.","","trailing_blank_lines_linter"
"inst/doc/toc/vignettetoc.Rmd",182,1,"style","Trailing blank lines are superfluous.","","trailing_blank_lines_linter"
"inst/doc/toc/vignettetoc.Rmd",183,1,"style","Trailing blank lines are superfluous.","","trailing_blank_lines_linter"
"inst/doc/toc/vignettetoc.Rmd",183,1,"style","Trailing blank lines are superfluous.","","trailing_blank_lines_linter"
"R/CPO_encode.R",25,18,"style","Any function spanning multiple lines should use curly braces.","    lapply(data, function(col)","brace_linter"
"R/CPO_encode.R",26,35,"style","Any function spanning multiple lines should use curly braces.","      sapply(levels(target[[1]]), function(tl)","brace_linter"
"R/CPO_encode.R",27,37,"style","Any function spanning multiple lines should use curly braces.","        vnapply(c(levels(col), NA), function(cl)","brace_linter"
"R/CPO_encode.R",79,18,"style","Any function spanning multiple lines should use curly braces.","    lapply(data, function(col)","brace_linter"
"R/CPO_encode.R",137,18,"style","Any function spanning multiple lines should use curly braces.","    lapply(data, function(col)","brace_linter"
"R/CPO_quantileBinNumerics.R",17,18,"style","Any function spanning multiple lines should use curly braces.","    lapply(data, function(d)","brace_linter"
"tests/testthat/helper_cpo.R",408,5,"warning","no visible global function definition for ‘pss’","    pss(numrows: integer[0, ],","object_usage_linter"
"tests/testthat/helper_cpo.R",408,9,"warning","no visible binding for global variable ‘numrows’","    pss(numrows: integer[0, ],","object_usage_linter"
"tests/testthat/helper_cpo.R",409,7,"warning","no visible binding for global variable ‘numtarget’","      numtarget: integer[0, ],","object_usage_linter"
"tests/testthat/helper_cpo.R",410,7,"warning","no visible binding for global variable ‘numnumeric’","      numnumeric: integer[0, ] [[requires = quote(!isdf && !istask)]],","object_usage_linter"
"tests/testthat/helper_cpo.R",411,7,"warning","no visible binding for global variable ‘numfactor’","      numfactor: integer[0, ] [[requires = quote(!isdf && !istask)]],","object_usage_linter"
"tests/testthat/helper_cpo.R",412,7,"warning","no visible binding for global variable ‘numother’","      numother: integer[0, ] [[requires = quote(!isdf && !istask)]],","object_usage_linter"
"tests/testthat/helper_makecpo.R",333,57,"warning","no visible binding for global variable ‘param’","          retrafo(data = data, target = target, param = param,","object_usage_linter"
"tests/testthat/helper_makecpo.R",333,57,"warning","no visible binding for global variable ‘param’","          retrafo(data = data, target = target, param = param,","object_usage_linter"
"tests/testthat/helper_makecpo.R",342,44,"warning","no visible binding for global variable ‘param’","              retrafo(data = data, param = param,","object_usage_linter"
"tests/testthat/helper_makecpo.R",342,44,"warning","no visible binding for global variable ‘param’","              retrafo(data = data, param = param,","object_usage_linter"
"tests/testthat/helper_makecpo.R",350,46,"warning","no visible binding for global variable ‘param’","                retrafo(data = data, param = param, control = control)","object_usage_linter"
"tests/testthat/helper_makecpo.R",356,59,"warning","no visible binding for global variable ‘param’","              train(data = data, target = target, param = param)","object_usage_linter"
"tests/testthat/helper_makecpo.R",359,44,"warning","no visible binding for global variable ‘param’","              retrafo(data = data, param = param, control = control)","object_usage_linter"
"tests/testthat/helper_makecpo.R",369,46,"warning","no visible binding for global variable ‘param’","                retrafo(data = data, param = param, control = control)","object_usage_linter"
"tests/testthat/helper_makecpo.R",381,44,"warning","no visible binding for global variable ‘param’","              retrafo(data = data, param = param, control = control)","object_usage_linter"
"tests/testthat/helper_makecpo.R",410,61,"warning","no visible binding for global variable ‘param’","                train(data = data, target = target, param = param)","object_usage_linter"
"tests/testthat/helper_makecpo.R",449,73,"warning","no visible binding for global variable ‘param’","                    traininvert(data = data, control = control, param = param)","object_usage_linter"
"tests/testthat/helper_makecpo.R",492,63,"warning","no visible binding for global variable ‘param’","                  train(data = data, target = target, param = param)","object_usage_linter"
"tests/testthat/helper_makecpo.R",495,71,"warning","no visible binding for global variable ‘param’","                  traininvert(data = data, control = control, param = param)","object_usage_linter"
"tests/testthat/helper_makecpo.R",642,33,"warning","no visible binding for global variable ‘allowedGMC’","    for (lineno in seq_len(nrow(allowedGMC))) {","object_usage_linter"
"tests/testthat/test_core_properties.R",34,33,"style","Any function spanning multiple lines should use curly braces.","    lapply(getCPOProperties(x), function(y)","brace_linter"
"tests/testthat/test_meta_multiplex.R",158,38,"style","Variable and function name style should be snake_case or symbols.","  cpo.build = function(data, target, logical.param, a, b) {","object_name_linter"
"vignettes/a_1_getting_started.Rmd",55,81,"style","Lines should not be more than 80 characters.","cpoScale(center = FALSE)  # create a CPO object that scales, but does not center, data","line_length_linter"
"vignettes/a_1_getting_started.Rmd",66,1,"style","Variable and function name style should be snake_case or symbols.","iris.demo = iris[c(1, 2, 3, 51, 52, 102, 103), ]","object_name_linter"
"vignettes/a_1_getting_started.Rmd",66,11,"style","Use <-, not =, for assignment.","iris.demo = iris[c(1, 2, 3, 51, 52, 102, 103), ]","assignment_linter"
"vignettes/a_1_getting_started.Rmd",67,81,"style","Lines should not be more than 80 characters.","tail(iris.demo %>>% cpoQuantileBinNumerics())  # bin the data in below & above median","line_length_linter"
"vignettes/a_1_getting_started.Rmd",78,13,"style","Use <-, not =, for assignment.","quantilenum = cpoQuantileBinNumerics(numsplits = 3) %>>% cpoAsNumeric()","assignment_linter"
"vignettes/a_1_getting_started.Rmd",88,1,"style","Variable and function name style should be snake_case or symbols.","quantilenum.restricted = cpoQuantileBinNumerics(numsplits = 3) %>>%","object_name_linter"
"vignettes/a_1_getting_started.Rmd",88,24,"style","Use <-, not =, for assignment.","quantilenum.restricted = cpoQuantileBinNumerics(numsplits = 3) %>>%","assignment_linter"
"vignettes/a_1_getting_started.Rmd",97,1,"style","Variable and function name style should be snake_case or symbols.","demo.task = makeClassifTask(data = iris.demo, target = ""Species"")","object_name_linter"
"vignettes/a_1_getting_started.Rmd",97,11,"style","Use <-, not =, for assignment.","demo.task = makeClassifTask(data = iris.demo, target = ""Species"")","assignment_linter"
"vignettes/a_1_getting_started.Rmd",98,8,"style","Use <-, not =, for assignment.","result = demo.task %>>% quantilenum","assignment_linter"
"vignettes/a_1_getting_started.Rmd",114,5,"style","Use <-, not =, for assignment.","cpo = cpoScale()","assignment_linter"
"vignettes/a_1_getting_started.Rmd",129,6,"style","Use <-, not =, for assignment.","cpo2 = setHyperPars(cpo, scale.scale = FALSE)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",147,5,"style","Use <-, not =, for assignment.","cpo = cpoScale(id = ""a"") %>>% cpoScale(id = ""b"")  # not very useful example","assignment_linter"
"vignettes/a_1_getting_started.Rmd",160,5,"style","Use <-, not =, for assignment.","cpo = cpoPca(export = c(""center"", ""rank""))","assignment_linter"
"vignettes/a_1_getting_started.Rmd",176,13,"style","Use <-, not =, for assignment.","transformed = iris.demo %>>% cpoPca(rank = 3)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",180,5,"style","Use <-, not =, for assignment.","ret = retrafo(transformed)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",198,4,"style","Use <-, not =, for assignment.","t2 = transformed %>>% cpoScale()","assignment_linter"
"vignettes/a_1_getting_started.Rmd",202,4,"style","Use <-, not =, for assignment.","t3 = clearRI(transformed) %>>% cpoScale()","assignment_linter"
"vignettes/a_1_getting_started.Rmd",222,1,"style","Variable and function name style should be snake_case or symbols.","iris.regr = makeRegrTask(data = iris.demo, target = ""Petal.Width"")","object_name_linter"
"vignettes/a_1_getting_started.Rmd",222,11,"style","Use <-, not =, for assignment.","iris.regr = makeRegrTask(data = iris.demo, target = ""Petal.Width"")","assignment_linter"
"vignettes/a_1_getting_started.Rmd",223,1,"style","Variable and function name style should be snake_case or symbols.","iris.logd = iris.regr %>>% cpoLogTrafoRegr()","object_name_linter"
"vignettes/a_1_getting_started.Rmd",223,11,"style","Use <-, not =, for assignment.","iris.logd = iris.regr %>>% cpoLogTrafoRegr()","assignment_linter"
"vignettes/a_1_getting_started.Rmd",229,5,"style","Use <-, not =, for assignment.","inv = inverter(iris.logd)  # inverter object","assignment_linter"
"vignettes/a_1_getting_started.Rmd",235,10,"style","Use <-, not =, for assignment.","logmodel = train(""regr.lm"", iris.logd)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",236,6,"style","Use <-, not =, for assignment.","pred = predict(logmodel, iris.logd)  # prediction on the task itself","assignment_linter"
"vignettes/a_1_getting_started.Rmd",246,9,"style","Use <-, not =, for assignment.","newdata = makeRegrTask(""newiris"", iris[7:9, ], target = ""Petal.Width"",","assignment_linter"
"vignettes/a_1_getting_started.Rmd",253,1,"style","Variable and function name style should be snake_case or symbols.","newdata.transformed = newdata %>>% retrafo(iris.logd)","object_name_linter"
"vignettes/a_1_getting_started.Rmd",253,21,"style","Use <-, not =, for assignment.","newdata.transformed = newdata %>>% retrafo(iris.logd)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",257,6,"style","Use <-, not =, for assignment.","pred = predict(logmodel, newdata.transformed)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",264,1,"style","Variable and function name style should be snake_case or symbols.","inv.newdata = inverter(newdata.transformed)","object_name_linter"
"vignettes/a_1_getting_started.Rmd",264,13,"style","Use <-, not =, for assignment.","inv.newdata = inverter(newdata.transformed)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",290,1,"style","Variable and function name style should be snake_case or symbols.","iris.resid = iris.regr %>>% cpoRegrResiduals(""regr.lm"")","object_name_linter"
"vignettes/a_1_getting_started.Rmd",290,12,"style","Use <-, not =, for assignment.","iris.resid = iris.regr %>>% cpoRegrResiduals(""regr.lm"")","assignment_linter"
"vignettes/a_1_getting_started.Rmd",295,1,"style","Variable and function name style should be snake_case or symbols.","model.resid = train(""regr.randomForest"", iris.resid)","object_name_linter"
"vignettes/a_1_getting_started.Rmd",295,13,"style","Use <-, not =, for assignment.","model.resid = train(""regr.randomForest"", iris.resid)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",297,1,"style","Variable and function name style should be snake_case or symbols.","newdata.resid = newdata %>>% retrafo(iris.resid)","object_name_linter"
"vignettes/a_1_getting_started.Rmd",297,15,"style","Use <-, not =, for assignment.","newdata.resid = newdata %>>% retrafo(iris.resid)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",298,81,"style","Lines should not be more than 80 characters.","getTaskData(newdata.resid)  # Petal.Width are now the residuals of lm model predictions","line_length_linter"
"vignettes/a_1_getting_started.Rmd",302,6,"style","Use <-, not =, for assignment.","pred = predict(model.resid, newdata.resid)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",308,1,"style","Variable and function name style should be snake_case or symbols.","inv.newdata = inverter(newdata.resid)","object_name_linter"
"vignettes/a_1_getting_started.Rmd",308,13,"style","Use <-, not =, for assignment.","inv.newdata = inverter(newdata.resid)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",317,9,"style","Use <-, not =, for assignment.","sampled = iris %>>% cpoSample(size = 3)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",334,5,"style","Use <-, not =, for assignment.","lrn = cpoRegrResiduals(""regr.lm"") %>>% makeLearner(""regr.randomForest"")","assignment_linter"
"vignettes/a_1_getting_started.Rmd",338,7,"style","Use <-, not =, for assignment.","model = train(lrn, iris.regr)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",340,6,"style","Use <-, not =, for assignment.","pred = predict(model, newdata)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",353,8,"style","Use <-, not =, for assignment.","icalrn = cpoIca() %>>% makeLearner(""classif.logreg"")","assignment_linter"
"vignettes/a_1_getting_started.Rmd",358,4,"style","Use <-, not =, for assignment.","ps = makeParamSet(","assignment_linter"
"vignettes/a_1_getting_started.Rmd",362,3,"style","Commented code should be removed.","# ps = pSS(ica.n.comp: integer[1, 8], ica.alg.typ: discrete[parallel, deflation])","commented_code_linter"
"vignettes/a_1_getting_started.Rmd",362,81,"style","Lines should not be more than 80 characters.","# ps = pSS(ica.n.comp: integer[1, 8], ica.alg.typ: discrete[parallel, deflation])","line_length_linter"
"vignettes/a_1_getting_started.Rmd",405,7,"style","Use <-, not =, for assignment.","repca = retrafo(iris.demo %>>% cpoPca())","assignment_linter"
"vignettes/a_1_getting_started.Rmd",406,7,"style","Use <-, not =, for assignment.","state = getCPOTrainedState(repca)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",412,22,"style","Use <-, not =, for assignment.","state$control$center = FALSE","assignment_linter"
"vignettes/a_1_getting_started.Rmd",413,21,"style","Use <-, not =, for assignment.","state$control$scale = FALSE","assignment_linter"
"vignettes/a_1_getting_started.Rmd",414,1,"style","Variable and function name style should be snake_case or symbols.","nosc.repca = makeCPOTrainedFromState(cpoPca, state)","object_name_linter"
"vignettes/a_1_getting_started.Rmd",414,12,"style","Use <-, not =, for assignment.","nosc.repca = makeCPOTrainedFromState(cpoPca, state)","assignment_linter"
"vignettes/a_1_getting_started.Rmd",442,5,"style","Use <-, not =, for assignment.","cpm = cpoMultiplex(list(cpoIca, cpoPca(export = ""export.all"")))","assignment_linter"
"vignettes/a_1_getting_started.Rmd",456,5,"style","Use <-, not =, for assignment.","cpa = cpoWrap()","assignment_linter"
"vignettes/a_1_getting_started.Rmd",474,7,"style","Use <-, not =, for assignment.","scale = cpoSelect(pattern = ""Sepal"", id = ""first"") %>>% cpoScale(id = ""scale"")","assignment_linter"
"vignettes/a_1_getting_started.Rmd",475,11,"style","Use <-, not =, for assignment.","scale.pca = scale %>>% cpoPca()","assignment_linter"
"vignettes/a_1_getting_started.Rmd",476,9,"style","Use <-, not =, for assignment.","cbinder = cpoCbind(scale, scale.pca, cpoSelect(pattern = ""Petal"", id = ""second""))","assignment_linter"
"vignettes/a_1_getting_started.Rmd",476,81,"style","Lines should not be more than 80 characters.","cbinder = cpoCbind(scale, scale.pca, cpoSelect(pattern = ""Petal"", id = ""second""))","line_length_linter"
"vignettes/a_2_mlrCPO_core.Rmd",41,40,"style","Commented code should be removed.","print(cpoAsNumeric, verbose = TRUE)  # alternative: !cpoAsNumeric","commented_code_linter"
"vignettes/a_2_mlrCPO_core.Rmd",61,6,"style","Use <-, not =, for assignment.","(cpo = cpoScale()) # construct CPO with default Hyperparameter values","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",107,6,"style","Use <-, not =, for assignment.","task = applyCPO(cpoPca(), iris.task)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",118,7,"style","Use <-, not =, for assignment.","scale = cpoScale()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",119,5,"style","Use <-, not =, for assignment.","pca = cpoPca()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",122,10,"style","Use <-, not =, for assignment.","compound = scale %>>% pca","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",157,5,"style","Use <-, not =, for assignment.","lrn = makeLearner(""classif.logreg"")","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",158,9,"style","Use <-, not =, for assignment.","(cpolrn = cpo %>>% lrn)  # the new learner has the CPO hyperparameters","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",168,5,"style","Use <-, not =, for assignment.","lrn = cpoLogTrafoRegr() %>>% makeLearner(""regr.lm"")","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",169,7,"style","Use <-, not =, for assignment.","model = train(lrn, subsetTask(bh.task, 1:300))","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",174,7,"style","Use <-, not =, for assignment.","trafo = subsetTask(bh.task, 1:300) %>>% cpoLogTrafoRegr()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",175,7,"style","Use <-, not =, for assignment.","model = train(""regr.lm"", trafo)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",177,9,"style","Use <-, not =, for assignment.","newdata = subsetTask(bh.task, 301:500) %>>% retrafo(trafo)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",178,6,"style","Use <-, not =, for assignment.","pred = predict(model, newdata)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",198,13,"style","Use <-, not =, for assignment.","transformed = iris %>>% cpoScale()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",200,6,"style","Use <-, not =, for assignment.","(ret = retrafo(transformed))","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",205,13,"style","Use <-, not =, for assignment.","transformed = bh.task %>>% cpoLogTrafoRegr()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",207,6,"style","Use <-, not =, for assignment.","(inv = inverter(transformed))","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",219,5,"style","Use <-, not =, for assignment.","bh2 = bh.task","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",220,14,"style","Use <-, not =, for assignment.","retrafo(bh2) = ret","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",224,14,"style","Use <-, not =, for assignment.","retrafo(bh2) = NULLCPO","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",226,3,"style","Commented code should be removed.","# retrafo(bh2) = NULL","commented_code_linter"
"vignettes/a_2_mlrCPO_core.Rmd",232,5,"style","Use <-, not =, for assignment.","bh3 = clearRI(transformed)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",275,8,"style","Use <-, not =, for assignment.","(state = getCPOTrainedState(retrafo(iris %>>% cpoScale())))","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",276,25,"style","Use <-, not =, for assignment.","state$control$center[1] = 1000  # will now subtract 1000 from the first column","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",277,1,"style","Variable and function name style should be snake_case or symbols.","new.retrafo = makeCPOTrainedFromState(cpoScale, state)","object_name_linter"
"vignettes/a_2_mlrCPO_core.Rmd",277,13,"style","Use <-, not =, for assignment.","new.retrafo = makeCPOTrainedFromState(cpoScale, state)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",286,6,"style","Use <-, not =, for assignment.","data = head(iris) %>>% cpoPca()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",288,7,"style","Use <-, not =, for assignment.","data2 = data %>>% cpoScale()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",296,6,"style","Use <-, not =, for assignment.","data = clearRI(data)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",297,7,"style","Use <-, not =, for assignment.","data2 = data %>>% cpoScale()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",302,15,"style","Use <-, not =, for assignment.","retrafo(data) = NULL","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",303,16,"style","Use <-, not =, for assignment.","inverter(data) = NULL","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",304,7,"style","Use <-, not =, for assignment.","data3 = data %>>% cpoScale()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",312,1,"style","Variable and function name style should be snake_case or symbols.","compound.retrafo = retrafo(head(iris) %>>% compound)","object_name_linter"
"vignettes/a_2_mlrCPO_core.Rmd",312,18,"style","Use <-, not =, for assignment.","compound.retrafo = retrafo(head(iris) %>>% compound)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",316,14,"style","Use <-, not =, for assignment.","(retrafolist = as.list(compound.retrafo))","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",328,13,"style","Use <-, not =, for assignment.","transformed = iris %>>% cpoScale()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",346,13,"style","Use <-, not =, for assignment.","transformed = bh.task %>>% cpoLogTrafoRegr()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",347,12,"style","Use <-, not =, for assignment.","prediction = predict(train(""regr.lm"", transformed), transformed)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",348,5,"style","Use <-, not =, for assignment.","inv = inverter(transformed)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",352,5,"style","Use <-, not =, for assignment.","ret = retrafo(transformed)","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",381,81,"style","Lines should not be more than 80 characters.","# applying NULLCPO leads to a retrafo() of NULLCPO, so it is its own CPOTrainedCPO","line_length_linter"
"vignettes/a_2_mlrCPO_core.Rmd",401,5,"style","Use <-, not =, for assignment.","cpo = cpoPca()","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",436,81,"style","Lines should not be more than 80 characters.","train(cpoDummyEncode(reference.cat = TRUE) %>>% makeLearner(""classif.geoDA""), bc.task)","line_length_linter"
"vignettes/a_2_mlrCPO_core.Rmd",469,5,"style","Use <-, not =, for assignment.","cpo = cpoPca(affect.pattern = "".Length"")","assignment_linter"
"vignettes/a_2_mlrCPO_core.Rmd",473,8,"style","Use <-, not =, for assignment.","triris = iris %>>% cpo","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",27,5,"style","Use <-, not =, for assignment.","tab = listCPO()[, c(""name"", ""category"", ""subcategory"")]","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",28,12,"style","Use <-, not =, for assignment.","owncontent = readLines(path)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",29,11,"style","Use <-, not =, for assignment.","headlines = grep(""^#+ +"", owncontent, value = TRUE)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",30,11,"style","Use <-, not =, for assignment.","headlines = gsub(""^#+ +"", """", headlines)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",31,10,"style","Use <-, not =, for assignment.","tab[[1]] = sapply(tab[[1]], function(x)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",31,29,"style","Any function spanning multiple lines should use curly braces.","tab[[1]] = sapply(tab[[1]], function(x)","brace_linter"
"vignettes/a_3_all_CPOs.Rmd",54,5,"style","Use <-, not =, for assignment.","cpa = cpoWrap()","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",58,81,"style","Lines should not be more than 80 characters.","# attaching the cpo applicator to a learner gives this learner a ""cpo"" hyperparameter","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",67,5,"style","Use <-, not =, for assignment.","cpm = cpoMultiplex(list(cpoScale, cpoPca))","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",79,1,"style","Variable and function name style should be snake_case or symbols.","s.and.p = cpoCase(pSS(logical.param: logical),","object_name_linter"
"vignettes/a_3_all_CPOs.Rmd",79,9,"style","Use <-, not =, for assignment.","s.and.p = cpoCase(pSS(logical.param: logical),","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",80,33,"style","Trailing whitespace is superfluous.","  export.cpos = list(cpoScale(), ","trailing_whitespace_linter"
"vignettes/a_3_all_CPOs.Rmd",82,38,"style","Variable and function name style should be snake_case or symbols.","  cpo.build = function(data, target, logical.param, scale, pca) {","object_name_linter"
"vignettes/a_3_all_CPOs.Rmd",99,7,"style","Use <-, not =, for assignment.","scale = cpoScale(id = ""scale"")","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",100,11,"style","Use <-, not =, for assignment.","scale.pca = scale %>>% cpoPca()","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",101,9,"style","Use <-, not =, for assignment.","cbinder = cpoCbind(scaled = scale, pcad = scale.pca, original = NULLCPO)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",104,81,"style","Lines should not be more than 80 characters.","# cpoCbind recognises that ""scale.scale"" happens before ""pca.pca"" but is also fed to the","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",110,81,"style","Lines should not be more than 80 characters.","# the unnecessary copies of ""Species"" are unfortunate. Remove them with cpoSelect:","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",111,10,"style","Use <-, not =, for assignment.","selector = cpoSelect(type = ""numeric"")","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",112,1,"style","Variable and function name style should be snake_case or symbols.","cbinder.select = cpoCbind(scaled = selector %>>% scale, pcad = selector %>>% scale.pca, original = NULLCPO)","object_name_linter"
"vignettes/a_3_all_CPOs.Rmd",112,16,"style","Use <-, not =, for assignment.","cbinder.select = cpoCbind(scaled = selector %>>% scale, pcad = selector %>>% scale.pca, original = NULLCPO)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",112,81,"style","Lines should not be more than 80 characters.","cbinder.select = cpoCbind(scaled = selector %>>% scale, pcad = selector %>>% scale.pca, original = NULLCPO)","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",126,5,"style","Use <-, not =, for assignment.","cpo = cpoTransformParams(cpoPca(), alist(pca.scale = pca.center))","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",127,6,"style","Use <-, not =, for assignment.","retr = pid.task %>|% setHyperPars(cpo, pca.center = FALSE)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",132,6,"style","Use <-, not =, for assignment.","mplx = cpoMultiplex(list(cpoIca(export = ""n.comp""), cpoPca(export = ""rank"")))","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",134,5,"style","Use <-, not =, for assignment.","mtx = cpoTransformParams(mplx, alist(ica.n.comp = comp, pca.rank = comp),","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",146,4,"style","Use <-, not =, for assignment.","df = data.frame(a = 1:3, b = -(1:3) * 10)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",148,36,"style","Commented code should be removed.","df %>>% cpoScale(scale = FALSE)  # center = TRUE","commented_code_linter"
"vignettes/a_3_all_CPOs.Rmd",190,9,"style","Use <-, not =, for assignment.","irisfix = head(iris) %>>% cpoFixFactors()  # Species only has level 'setosa' in train","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",190,81,"style","Lines should not be more than 80 characters.","irisfix = head(iris) %>>% cpoFixFactors()  # Species only has level 'setosa' in train","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",194,4,"style","Use <-, not =, for assignment.","rf = retrafo(irisfix)","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",203,9,"style","Use <-, not =, for assignment.","impdata = df","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",204,17,"style","Use <-, not =, for assignment.","impdata[[1]][1] = NA","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",233,7,"style","Use <-, not =, for assignment.","iris2 = iris","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",234,15,"style","Use <-, not =, for assignment.","iris2$Species = factor(c(""a"", ""b"", ""c"", ""b"", ""b"", ""c"", ""b"", ""c"",","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",281,81,"style","Lines should not be more than 80 characters.","impdata %>>% cpoImputeAll(cols = list(b = imputeMedian()))  # error, since NAs remain","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",285,1,"style","Variable and function name style should be snake_case or symbols.","missing.task = makeRegrTask(""missing.task"", impdata, target = ""b"")","object_name_linter"
"vignettes/a_3_all_CPOs.Rmd",285,14,"style","Use <-, not =, for assignment.","missing.task = makeRegrTask(""missing.task"", impdata, target = ""b"")","assignment_linter"
"vignettes/a_3_all_CPOs.Rmd",286,81,"style","Lines should not be more than 80 characters.","# the following gives an error, since 'cpoImpute' does not make sure all missings are removed","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",288,81,"style","Lines should not be more than 80 characters.","train(cpoImpute(cols = list(a = imputeMedian())) %>>% makeLearner(""regr.lm""), missing.task)","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",292,81,"style","Lines should not be more than 80 characters.","train(cpoImputeAll(cols = list(a = imputeMedian())) %>>% makeLearner(""regr.lm""), missing.task)","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",302,81,"style","Lines should not be more than 80 characters.","listCPO()[listCPO()$category == ""imputation"" & listCPO()$subcategory == ""specialised"",","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",315,81,"style","Lines should not be more than 80 characters.","head(getTaskData(iris.task %>>% cpoFilterFeatures(method = ""variance"", perc = 0.5)))","line_length_linter"
"vignettes/a_3_all_CPOs.Rmd",318,81,"style","Lines should not be more than 80 characters.","listCPO()[listCPO()$category == ""featurefilter"" & listCPO()$subcategory == ""specialised"",","line_length_linter"
"vignettes/a_4_custom_CPOs.Rmd",109,13,"style","Use <-, not =, for assignment.","    newsize = round(nrow(data) * fraction)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",110,5,"style","Variable and function name style should be snake_case or symbols.","    row.indices = sample(nrow(data), newsize)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",110,17,"style","Use <-, not =, for assignment.","    row.indices = sample(nrow(data), newsize)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",114,5,"style","Use <-, not =, for assignment.","cpo = xmpSample(0.01)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",126,13,"style","Use <-, not =, for assignment.","    newsize = round(nrow(data) * fraction)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",127,5,"style","Variable and function name style should be snake_case or symbols.","    row.indices = sample(nrow(data), newsize)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",127,17,"style","Use <-, not =, for assignment.","    row.indices = sample(nrow(data), newsize)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",153,38,"style","Variable and function name style should be snake_case or symbols.","  cpo.train = function(data, target, n.col) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",157,41,"style","Variable and function name style should be snake_case or symbols.","  cpo.retrafo = function(data, control, n.col) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",162,14,"style","Use <-, not =, for assignment.","    greatest = order(-control)  # columns, ordered greatest to smallest var","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",166,5,"style","Use <-, not =, for assignment.","cpo = xmpFilterVar(2)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",172,8,"style","Use <-, not =, for assignment.","(trafd = head(iris) %>>% cpo)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",201,38,"style","Variable and function name style should be snake_case or symbols.","  cpo.train = function(data, target, n.col) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",203,10,"style","Use <-, not =, for assignment.","    ctrl = sapply(data, var, na.rm = TRUE)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",212,16,"style","Use <-, not =, for assignment.","      greatest = order(-ctrl)  # columns, ordered greatest to smallest var","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",217,5,"style","Use <-, not =, for assignment.","cpo = xmpFilterVarFunc(2)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",222,8,"style","Use <-, not =, for assignment.","(trafd = head(iris) %>>% cpo)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",241,5,"style","Use <-, not =, for assignment.","cpo = xmpAsNum()","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",246,8,"style","Use <-, not =, for assignment.","(trafd = head(iris) %>>% cpo)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",264,38,"style","Variable and function name style should be snake_case or symbols.","  cpo.trafo = function(data, target, n.col) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",266,9,"style","Use <-, not =, for assignment.","    pcr = prcomp(as.matrix(data), center = FALSE, scale. = FALSE, rank = n.col)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",268,13,"style","Use <-, not =, for assignment.","    control = pcr$rotation","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",271,41,"style","Variable and function name style should be snake_case or symbols.","  cpo.retrafo = function(data, control, n.col) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",277,5,"style","Use <-, not =, for assignment.","cpo = xmpPca(2)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",282,8,"style","Use <-, not =, for assignment.","(trafd = head(iris) %>>% cpo)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",302,38,"style","Variable and function name style should be snake_case or symbols.","  cpo.trafo = function(data, target, n.col) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",304,9,"style","Use <-, not =, for assignment.","    pcr = prcomp(as.matrix(data), center = FALSE, scale. = FALSE, rank = n.col)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",306,5,"style","Variable and function name style should be snake_case or symbols.","    cpo.retrafo = function(data) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",306,17,"style","Use <-, not =, for assignment.","    cpo.retrafo = function(data) {","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",314,5,"style","Use <-, not =, for assignment.","cpo = xmpPcaFunc(2)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",318,8,"style","Use <-, not =, for assignment.","(trafd = head(iris) %>>% cpo)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",368,9,"style","Use <-, not =, for assignment.","    lrn = setPredictType(lrn, ""prob"")","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",373,16,"style","Use <-, not =, for assignment.","    prediction = predict(control, target)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",374,11,"style","Use <-, not =, for assignment.","    tname = getTaskTargetNames(target)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",375,11,"style","Use <-, not =, for assignment.","    tdata = getTaskData(target)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",376,20,"style","Use <-, not =, for assignment.","    tdata[[tname]] = factor(prediction$data$response == prediction$data$truth)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",384,33,"style","Variable and function name style should be snake_case or symbols.","  cpo.invert = function(target, control.invert, predict.type, lrn) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",387,14,"style","Use <-, not =, for assignment.","      outmat = as.matrix(control.invert[grep(""^prob\\."", names(control.invert))])","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",387,81,"style","Lines should not be more than 80 characters.","      outmat = as.matrix(control.invert[grep(""^prob\\."", names(control.invert))])","line_length_linter"
"vignettes/a_4_custom_CPOs.Rmd",388,14,"style","Use <-, not =, for assignment.","      revmat = outmat[, c(2, 1)]","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",393,7,"style","Variable and function name style should be snake_case or symbols.","      numeric.prediction = as.numeric(control.invert$response)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",393,26,"style","Use <-, not =, for assignment.","      numeric.prediction = as.numeric(control.invert$response)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",394,7,"style","Variable and function name style should be snake_case or symbols.","      numeric.res = ifelse(target == ""TRUE"",","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",394,19,"style","Use <-, not =, for assignment.","      numeric.res = ifelse(target == ""TRUE"",","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",402,5,"style","Use <-, not =, for assignment.","cpo = xmpMetaLearn(makeLearner(""classif.logreg""))","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",409,7,"style","Use <-, not =, for assignment.","split = makeResampleInstance(hout, pid.task)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",410,1,"style","Variable and function name style should be snake_case or symbols.","train.task = subsetTask(pid.task, split$train.inds[[1]])","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",410,12,"style","Use <-, not =, for assignment.","train.task = subsetTask(pid.task, split$train.inds[[1]])","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",411,1,"style","Variable and function name style should be snake_case or symbols.","test.task = subsetTask(pid.task, split$predict.inds[[1]])","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",411,11,"style","Use <-, not =, for assignment.","test.task = subsetTask(pid.task, split$predict.inds[[1]])","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",417,7,"style","Use <-, not =, for assignment.","trafd = train.task %>>% cpo","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",426,7,"style","Use <-, not =, for assignment.","model = train(makeLearner(""classif.logreg"", predict.type = ""prob""), train.task)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",433,6,"style","Use <-, not =, for assignment.","retr = test.task %>>% retrafo(trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",439,1,"style","Variable and function name style should be snake_case or symbols.","retr.df = getTaskData(test.task, target.extra = TRUE)$data %>>% retrafo(trafd)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",439,9,"style","Use <-, not =, for assignment.","retr.df = getTaskData(test.task, target.extra = TRUE)$data %>>% retrafo(trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",446,1,"style","Variable and function name style should be snake_case or symbols.","ext.model = train(""classif.svm"", trafd)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",446,11,"style","Use <-, not =, for assignment.","ext.model = train(""classif.svm"", trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",447,1,"style","Variable and function name style should be snake_case or symbols.","ext.pred = predict(ext.model, retr)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",447,10,"style","Use <-, not =, for assignment.","ext.pred = predict(ext.model, retr)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",448,9,"style","Use <-, not =, for assignment.","newpred = invert(inverter(retr), ext.pred)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",455,1,"style","Variable and function name style should be snake_case or symbols.","cpo.learner = cpo %>>% makeLearner(""classif.svm"")","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",455,13,"style","Use <-, not =, for assignment.","cpo.learner = cpo %>>% makeLearner(""classif.svm"")","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",456,1,"style","Variable and function name style should be snake_case or symbols.","cpo.model = train(cpo.learner, train.task)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",456,11,"style","Use <-, not =, for assignment.","cpo.model = train(cpo.learner, train.task)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",459,9,"style","Use <-, not =, for assignment.","lrnpred = predict(cpo.model, test.task)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",488,9,"style","Use <-, not =, for assignment.","    lrn = setPredictType(lrn, ""prob"")","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",489,11,"style","Use <-, not =, for assignment.","    model = train(lrn, data)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",490,5,"style","Variable and function name style should be snake_case or symbols.","    cpo.retrafo = function(data, target) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",490,17,"style","Use <-, not =, for assignment.","    cpo.retrafo = function(data, target) {","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",492,18,"style","Use <-, not =, for assignment.","      prediction = predict(model, target)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",493,13,"style","Use <-, not =, for assignment.","      tname = getTaskTargetNames(target)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",494,13,"style","Use <-, not =, for assignment.","      tdata = getTaskData(target)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",495,22,"style","Use <-, not =, for assignment.","      tdata[[tname]] = factor(prediction$data$response == prediction$data$truth)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",499,5,"style","Variable and function name style should be snake_case or symbols.","    cpo.train.invert = function(data) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",499,22,"style","Use <-, not =, for assignment.","    cpo.train.invert = function(data) {","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",501,18,"style","Use <-, not =, for assignment.","      prediction = predict(model, newdata = data)$data","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",505,18,"style","Use <-, not =, for assignment.","          outmat = as.matrix(prediction[grep(""^prob\\."", names(prediction))])","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",506,18,"style","Use <-, not =, for assignment.","          revmat = outmat[, c(2, 1)]","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",511,11,"style","Variable and function name style should be snake_case or symbols.","          numeric.prediction = as.numeric(prediction$response)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",511,30,"style","Use <-, not =, for assignment.","          numeric.prediction = as.numeric(prediction$response)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",512,11,"style","Variable and function name style should be snake_case or symbols.","          numeric.res = ifelse(target == ""TRUE"",","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",512,23,"style","Use <-, not =, for assignment.","          numeric.res = ifelse(target == ""TRUE"",","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",517,10,"style","Trailing whitespace is superfluous.","        }        ","trailing_whitespace_linter"
"vignettes/a_4_custom_CPOs.Rmd",543,17,"style","Use <-, not =, for assignment.","    target[[1]] = target[[1]] - control","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",546,47,"style","Variable and function name style should be snake_case or symbols.","  cpo.invert = function(target, predict.type, control.invert) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",550,5,"style","Use <-, not =, for assignment.","cpo = xmpRegCenter()","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",555,1,"style","Variable and function name style should be snake_case or symbols.","train.task = subsetTask(bh.task, 150:155)","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",555,12,"style","Use <-, not =, for assignment.","train.task = subsetTask(bh.task, 150:155)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",559,14,"style","Use <-, not =, for assignment.","predict.task = subsetTask(bh.task, 156:160)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",565,7,"style","Use <-, not =, for assignment.","trafd = train.task %>>% cpo","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",574,6,"style","Use <-, not =, for assignment.","retr = retrafo(trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",575,14,"style","Use <-, not =, for assignment.","predict.traf = predict.task %>>% retr","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",581,7,"style","Use <-, not =, for assignment.","model = train(""regr.lm"", trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",582,6,"style","Use <-, not =, for assignment.","pred = predict(model, predict.traf)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",591,7,"style","Use <-, not =, for assignment.","model = train(""regr.lm"", train.task)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",618,17,"style","Use <-, not =, for assignment.","    target[[1]] = log(target[[1]])","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",625,5,"style","Use <-, not =, for assignment.","cpo = xmpLogRegr()","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",630,7,"style","Use <-, not =, for assignment.","trafd = train.task %>>% cpo","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",635,6,"style","Use <-, not =, for assignment.","retr = retrafo(trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",636,14,"style","Use <-, not =, for assignment.","predict.traf = predict.task %>>% retr","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",641,7,"style","Use <-, not =, for assignment.","model = train(""regr.lm"", trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",642,6,"style","Use <-, not =, for assignment.","pred = predict(model, predict.traf)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",670,17,"style","Use <-, not =, for assignment.","    target[[1]] = target[[1]] + 1","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",671,13,"style","Use <-, not =, for assignment.","    control = ""control created in cpo.trafo""","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",672,5,"style","Variable and function name style should be snake_case or symbols.","    control.invert = ""control.invert created in cpo.trafo""","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",672,20,"style","Use <-, not =, for assignment.","    control.invert = ""control.invert created in cpo.trafo""","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",677,5,"style","Variable and function name style should be snake_case or symbols.","    control.invert = ""control.invert created in cpo.retrafo""","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",677,20,"style","Use <-, not =, for assignment.","    control.invert = ""control.invert created in cpo.retrafo""","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",680,19,"style","Use <-, not =, for assignment.","      target[[1]] = target[[1]] - 1","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",683,81,"style","Lines should not be more than 80 characters.","      cat(""target is NULL, no transformation (but control.invert was created)\n"")","line_length_linter"
"vignettes/a_4_custom_CPOs.Rmd",687,33,"style","Variable and function name style should be snake_case or symbols.","  cpo.invert = function(target, control.invert, predict.type) {","object_name_linter"
"vignettes/a_4_custom_CPOs.Rmd",693,5,"style","Use <-, not =, for assignment.","cpo = xmpSynCPO()","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",698,7,"style","Use <-, not =, for assignment.","trafd = train.task %>>% cpo","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",703,9,"style","Use <-, not =, for assignment.","retrafd = train.task %>>% retrafo(trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",711,9,"style","Use <-, not =, for assignment.","retrafd = getTaskData(train.task, target.extra = TRUE)$data %>>% retrafo(trafd)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",717,5,"style","Use <-, not =, for assignment.","inv = invert(inverter(trafd), 1:6)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",720,5,"style","Use <-, not =, for assignment.","inv = invert(inverter(retrafd), 1:6)","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",727,9,"style","Use <-, not =, for assignment.","oscipen = options(""scipen"")","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",731,10,"style","Use <-, not =, for assignment.","learners = list(","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",741,7,"style","Use <-, not =, for assignment.","perfs = sapply(learners, function(lrn) {","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",753,7,"style","Use <-, not =, for assignment.","pvals = c(","assignment_linter"
"vignettes/a_4_custom_CPOs.Rmd",754,75,"style","Trailing whitespace is superfluous.","    logreg = t.test(perfs[, ""logreg""], perfs[, ""cpo""], ""greater"")$p.value, ","trailing_whitespace_linter"
"vignettes/z_1_getting_started_terse.Rmd",13,81,"style","Lines should not be more than 80 characters.","cat(knitr::knit_child(""a_1_getting_started.Rmd"", options = list(eval = FALSE)), sep = ""\n"")","line_length_linter"
"vignettes/z_2_mlrCPO_core_terse.Rmd",13,81,"style","Lines should not be more than 80 characters.","cat(knitr::knit_child(""a_2_mlrCPO_core.Rmd"", options = list(eval = FALSE)), sep = ""\n"")","line_length_linter"
"vignettes/z_3_all_CPOs_terse.Rmd",13,81,"style","Lines should not be more than 80 characters.","cat(knitr::knit_child(""a_3_all_CPOs.Rmd"", options = list(eval = FALSE)), sep = ""\n"")","line_length_linter"
"vignettes/z_4_custom_CPOs_terse.Rmd",13,81,"style","Lines should not be more than 80 characters.","cat(knitr::knit_child(""a_4_custom_CPOs.Rmd"", options = list(eval = FALSE)), sep = ""\n"")","line_length_linter"
