"filename","line_number","column_number","type","message","line","linter"
"demo/cdnow.R",3,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog <- read.csv(system.file(""data/cdnowElog.csv"", package = ""BTYD""),","object_name_linter"
"demo/cdnow.R",6,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog$date <- as.Date(as.character(cdnowElog$date), format = ""%Y%m%d"")","object_name_linter"
"demo/cdnow.R",22,2,"style","Variable and function name style should be snake_case or symbols.","(params.nbd <- nbd.EstimateParameters(cbs))","object_name_linter"
"demo/cdnow.R",38,2,"style","Variable and function name style should be snake_case or symbols.","(params.mbgcnbd <- mbgcnbd.EstimateParameters(cbs))","object_name_linter"
"demo/cdnow.R",65,1,"style","Variable and function name style should be snake_case or symbols.","params.pnbd <- BTYD::pnbd.EstimateParameters(cbs) # estimate Pareto/NBD","object_name_linter"
"demo/cdnow.R",66,1,"style","Variable and function name style should be snake_case or symbols.","params.bgcnbd <- bgcnbd.EstimateParameters(cbs)  # estimate BG/CNBD-k","object_name_linter"
"demo/cdnow.R",111,33,"style","Put spaces around all infix operators.","  ""BIAS"" = function(a, f) sum(f)/sum(a) - 1)","infix_spaces_linter"
"demo/cdnow.R",137,1,"style","Variable and function name style should be snake_case or symbols.","spend.params <- BTYD::spend.EstimateParameters(cbs$sales.avg, cbs$x + 1)","object_name_linter"
"demo/mbg-cnbd-k.R",14,2,"style","Variable and function name style should be snake_case or symbols.","(k.est <- estimateRegularity(groceryElog))","object_name_linter"
"demo/mbg-cnbd-k.R",24,2,"style","Variable and function name style should be snake_case or symbols.","(params.mbgcnbd <- mbgcnbd.EstimateParameters(cbs))","object_name_linter"
"demo/mbg-cnbd-k.R",51,1,"style","Variable and function name style should be snake_case or symbols.","params.nbd <- nbd.EstimateParameters(cbs)            # estimate NBD","object_name_linter"
"demo/mbg-cnbd-k.R",52,1,"style","Variable and function name style should be snake_case or symbols.","params.pnbd <- BTYD::pnbd.EstimateParameters(cbs)    # estimate Pareto/NBD","object_name_linter"
"demo/mbg-cnbd-k.R",53,1,"style","Variable and function name style should be snake_case or symbols.","params.bgnbd <- BTYD::bgnbd.EstimateParameters(cbs)  # estimate BG/NBD","object_name_linter"
"demo/mbg-cnbd-k.R",54,1,"style","Variable and function name style should be snake_case or symbols.","params.mbgnbd <- mbgnbd.EstimateParameters(cbs)      # estimate MBG/NBD","object_name_linter"
"demo/mbg-cnbd-k.R",79,33,"style","Put spaces around all infix operators.","  ""BIAS"" = function(a, f) sum(f)/sum(a) - 1)","infix_spaces_linter"
"demo/mbg-cnbd-k.R",107,1,"style","Variable and function name style should be snake_case or symbols.","T.tot <- max(cbs$T.cal+cbs$T.star)","object_name_linter"
"demo/mbg-cnbd-k.R",107,23,"style","Put spaces around all infix operators.","T.tot <- max(cbs$T.cal+cbs$T.star)","infix_spaces_linter"
"demo/pareto-abe.R",3,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog <- read.csv(system.file(""data/cdnowElog.csv"", package = ""BTYD""),","object_name_linter"
"demo/pareto-abe.R",6,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog$date <- as.Date(as.character(cdnowElog$date), format = ""%Y%m%d"")","object_name_linter"
"demo/pareto-abe.R",18,1,"style","Variable and function name style should be snake_case or symbols.","draws.m1 <- abe.mcmc.DrawParameters(","object_name_linter"
"demo/pareto-abe.R",34,1,"style","Variable and function name style should be snake_case or symbols.","draws.m2 <- abe.mcmc.DrawParameters(","object_name_linter"
"demo/pareto-abe.R",52,1,"style","Variable and function name style should be snake_case or symbols.","xstar.m1.draws <- mcmc.DrawFutureTransactions(cbs, draws.m1, T.star = cbs$T.star)","object_name_linter"
"demo/pareto-abe.R",53,1,"style","Variable and function name style should be snake_case or symbols.","xstar.m2.draws <- mcmc.DrawFutureTransactions(cbs, draws.m2, T.star = cbs$T.star)","object_name_linter"
"demo/pareto-ggg.R",16,1,"style","Variable and function name style should be snake_case or symbols.","pnbd.draws <- pnbd.mcmc.DrawParameters(cal.cbs = cbs, mc.cores = 1)","object_name_linter"
"demo/pareto-ggg.R",20,1,"style","Variable and function name style should be snake_case or symbols.","pggg.draws <- pggg.mcmc.DrawParameters(cal.cbs = cbs,","object_name_linter"
"demo/pareto-ggg.R",24,25,"style","Put spaces around all infix operators.","round(rbind(`Pareto/GGG`= summary(pggg.draws$level_2)$quantiles[, ""50%""],","infix_spaces_linter"
"demo/pareto-ggg.R",41,1,"style","Variable and function name style should be snake_case or symbols.","xstar.pnbd.draws <- mcmc.DrawFutureTransactions(cbs, pnbd.draws, T.star = cbs$T.star, sample_size = 400)","object_name_linter"
"demo/pareto-ggg.R",42,1,"style","Variable and function name style should be snake_case or symbols.","xstar.pggg.draws <- mcmc.DrawFutureTransactions(cbs, pggg.draws, T.star = cbs$T.star, sample_size = 400)","object_name_linter"
"demo/pareto-ggg.R",59,20,"style","Put spaces around all infix operators.","(lift <- 1 - mae[1]/mae[2])","infix_spaces_linter"
"R/helpers.R",58,32,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!""date"" %in% names(elog) & !""t"" %in% names(elog))","vector_logic_linter"
"R/helpers.R",179,3,"style","Variable and function name style should be snake_case or symbols.","  T.0 <- min(elog_dt$t)","object_name_linter"
"R/helpers.R",181,5,"style","Variable and function name style should be snake_case or symbols.","    T.cal <- max(elog_dt$t)","object_name_linter"
"R/helpers.R",183,5,"style","Variable and function name style should be snake_case or symbols.","    T.cal <- as.numeric(as.Date(T.cal))","object_name_linter"
"R/helpers.R",186,5,"style","Variable and function name style should be snake_case or symbols.","    T.tot <- max(elog_dt$t)","object_name_linter"
"R/helpers.R",188,5,"style","Variable and function name style should be snake_case or symbols.","    T.tot <- as.numeric(as.Date(T.tot))","object_name_linter"
"R/helpers.R",293,32,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (""sales"" %in% names(elog) & !is.numeric(elog$sales)) stop(""`sales` field must be numeric"")","vector_logic_linter"
"R/helpers.R",295,23,"style","Variable and function name style should be snake_case or symbols.","  if (is.null(T.cal)) T.cal <- max(elog$date)","object_name_linter"
"R/helpers.R",296,23,"style","Variable and function name style should be snake_case or symbols.","  if (is.null(T.tot)) T.tot <- max(elog$date)","object_name_linter"
"R/helpers.R",297,28,"style","Variable and function name style should be snake_case or symbols.","  if (is.character(T.cal)) T.cal <- if (class(elog$date)[1] == ""Date"") as.Date(T.cal) else as.POSIXct(T.cal)","object_name_linter"
"R/helpers.R",298,28,"style","Variable and function name style should be snake_case or symbols.","  if (is.character(T.tot)) T.tot <- if (class(elog$date)[1] == ""Date"") as.Date(T.tot) else as.POSIXct(T.tot)","object_name_linter"
"R/helpers.R",299,22,"style","Variable and function name style should be snake_case or symbols.","  if (T.tot < T.cal) T.tot <- T.cal","object_name_linter"
"R/helpers.R",460,24,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.null(legend) & length(legend) == 2) {","vector_logic_linter"
"R/helpers.R",475,35,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(x) != length(actual) | length(x) != length(expected) |","vector_logic_linter"
"R/helpers.R",475,67,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(x) != length(actual) | length(x) != length(expected) |","vector_logic_linter"
"R/helpers.R",476,22,"warning","Conditional expressions require scalar logical operators (&& and ||)","      !is.numeric(x) | !is.numeric(actual) | !is.numeric(expected) |","vector_logic_linter"
"R/helpers.R",476,44,"warning","Conditional expressions require scalar logical operators (&& and ||)","      !is.numeric(x) | !is.numeric(actual) | !is.numeric(expected) |","vector_logic_linter"
"R/helpers.R",476,68,"warning","Conditional expressions require scalar logical operators (&& and ||)","      !is.numeric(x) | !is.numeric(actual) | !is.numeric(expected) |","vector_logic_linter"
"R/helpers.R",477,18,"warning","Conditional expressions require scalar logical operators (&& and ||)","      any(x < 0) | any(actual < 0) | any(expected < 0))","vector_logic_linter"
"R/helpers.R",477,36,"warning","Conditional expressions require scalar logical operators (&& and ||)","      any(x < 0) | any(actual < 0) | any(expected < 0))","vector_logic_linter"
"R/helpers.R",488,3,"style","Variable and function name style should be snake_case or symbols.","  col.names <- paste(rep(""freq"", length(censor + 1)), (0:censor), sep = ""."")","object_name_linter"
"R/helpers.R",489,3,"style","Variable and function name style should be snake_case or symbols.","  col.names[censor + 1] <- paste0(col.names[censor + 1], ""+"")","object_name_linter"
"R/helpers.R",496,7,"style","Variable and function name style should be snake_case or symbols.","      x.labels[censor + 1] <- paste0(censor, ""+"")","object_name_linter"
"R/helpers.R",518,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(t.x) != length(actual) | length(t.x) != length(expected) |","vector_logic_linter"
"R/helpers.R",518,71,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (length(t.x) != length(actual) | length(t.x) != length(expected) |","vector_logic_linter"
"R/helpers.R",519,24,"warning","Conditional expressions require scalar logical operators (&& and ||)","      !is.numeric(t.x) | !is.numeric(actual) | !is.numeric(expected) |","vector_logic_linter"
"R/helpers.R",519,46,"warning","Conditional expressions require scalar logical operators (&& and ||)","      !is.numeric(t.x) | !is.numeric(actual) | !is.numeric(expected) |","vector_logic_linter"
"R/helpers.R",519,70,"warning","Conditional expressions require scalar logical operators (&& and ||)","      !is.numeric(t.x) | !is.numeric(actual) | !is.numeric(expected) |","vector_logic_linter"
"R/helpers.R",520,20,"warning","Conditional expressions require scalar logical operators (&& and ||)","      any(t.x < 0) | any(actual < 0) | any(expected < 0))","vector_logic_linter"
"R/helpers.R",520,38,"warning","Conditional expressions require scalar logical operators (&& and ||)","      any(t.x < 0) | any(actual < 0) | any(expected < 0))","vector_logic_linter"
"R/mbg-cnbd-k.R",78,18,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (is.null(k) & !""litt"" %in% colnames(cal.cbs))","vector_logic_linter"
"R/mbg-cnbd-k.R",96,7,"style","Variable and function name style should be snake_case or symbols.","      LL[k] <- xbgcnbd.cbs.LL(params = params[[k]], cal.cbs = cal.cbs, dropout_at_zero = dropout_at_zero)","object_name_linter"
"R/mbg-cnbd-k.R",107,5,"style","Variable and function name style should be snake_case or symbols.","    cal.cbs[, ""litt""] <- 0","object_name_linter"
"R/mbg-cnbd-k.R",116,19,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (trace > 0 & count %% trace == 0) {","vector_logic_linter"
"R/mbg-cnbd-k.R",129,3,"style","Variable and function name style should be snake_case or symbols.","  estimated.params[estimated.params > max.param.value] <- max.param.value","object_name_linter"
"R/mbg-cnbd-k.R",131,9,"style","Variable and function name style should be snake_case or symbols.","  names(estimated.params) <- c(""k"", ""r"", ""alpha"", ""a"", ""b"")","object_name_linter"
"R/mbg-cnbd-k.R",191,12,"style","Variable and function name style should be snake_case or symbols.","  tryCatch(T.cal <- cal.cbs$T.cal,","object_name_linter"
"R/mbg-cnbd-k.R",194,13,"style","Any function spanning multiple lines should use curly braces.","    error = function(e) stop(""cal.cbs must have a column for "",","brace_linter"
"R/mbg-cnbd-k.R",204,3,"style","Variable and function name style should be snake_case or symbols.","  max.length <- max(length(x), length(t.x), length(T.cal))","object_name_linter"
"R/mbg-cnbd-k.R",214,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (params[1] != floor(params[1]) | params[1] < 1)","vector_logic_linter"
"R/mbg-cnbd-k.R",224,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = max.length)","object_name_linter"
"R/mbg-cnbd-k.R",293,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (params[1] != floor(params[1]) | params[1] < 1)","vector_logic_linter"
"R/mbg-cnbd-k.R",412,3,"style","Variable and function name style should be snake_case or symbols.","  max.length <- max(length(x), length(t.x), length(T.cal))","object_name_linter"
"R/mbg-cnbd-k.R",420,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (params[1] != floor(params[1]) | params[1] < 1)","vector_logic_linter"
"R/mbg-cnbd-k.R",430,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = max.length)","object_name_linter"
"R/mbg-cnbd-k.R",501,3,"style","Variable and function name style should be snake_case or symbols.","  max.length <- max(length(T.star), length(x), length(t.x), length(T.cal))","object_name_linter"
"R/mbg-cnbd-k.R",511,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (params[1] != floor(params[1]) | params[1] < 1)","vector_logic_linter"
"R/mbg-cnbd-k.R",523,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = max.length)","object_name_linter"
"R/mbg-cnbd-k.R",524,3,"style","Variable and function name style should be snake_case or symbols.","  T.star <- rep(T.star, length.out = max.length)","object_name_linter"
"R/mbg-cnbd-k.R",565,5,"style","Variable and function name style should be snake_case or symbols.","    sum.cal <- sum(xbgcnbd.Expectation(params = params, t = T.cal, dropout_at_zero = dropout_at_zero))","object_name_linter"
"R/mbg-cnbd-k.R",566,5,"style","Variable and function name style should be snake_case or symbols.","    sum.tot <- sum(xbgcnbd.Expectation(params = params, t = T.cal + T.star, dropout_at_zero = dropout_at_zero))","object_name_linter"
"R/mbg-cnbd-k.R",628,12,"style","Variable and function name style should be snake_case or symbols.","  tryCatch(T.cal <- cal.cbs$T.cal,","object_name_linter"
"R/mbg-cnbd-k.R",1016,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (params[1] != floor(params[1]) | params[1] < 1)","vector_logic_linter"
"R/mbg-cnbd-k.R",1027,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = n)","object_name_linter"
"R/mbg-cnbd-k.R",1028,3,"style","Variable and function name style should be snake_case or symbols.","  T.zero <- T.cal.fix - T.cal","object_name_linter"
"R/mbg-cnbd-k.R",1029,3,"style","Variable and function name style should be snake_case or symbols.","  date.zero <- as.POSIXct(date.zero)","object_name_linter"
"R/mbg-cnbd-k.R",1058,3,"style","Variable and function name style should be snake_case or symbols.","  date.cal <- date.zero + T.cal.fix * 3600 * 24 * 7","object_name_linter"
"R/mbg-cnbd-k.R",1059,3,"style","Variable and function name style should be snake_case or symbols.","  date.tot <- date.cal + T.star * 3600 * 24 * 7","object_name_linter"
"R/mcmc.R",67,5,"style","Variable and function name style should be snake_case or symbols.","    T.star <- rep(T.star, nr_of_cust)","object_name_linter"
"R/mcmc.R",109,7,"style","Variable and function name style should be snake_case or symbols.","      x.stars[draw, cust] <- sum(cumsum(itts) < minT)","object_name_linter"
"R/mcmc.R",114,7,"style","Variable and function name style should be snake_case or symbols.","      x.stars[!alive, cust] <- 0","object_name_linter"
"R/mcmc.R",154,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (burnin < start(draws$level_2) | burnin > end(draws$level_2))","vector_logic_linter"
"R/mcmc.R",183,86,"style","Use FALSE instead of the symbol F.","  plot(spls.x, spls.y, typ = ""b"", xlim = c(0, 1), ylim = c(0, 1), frame = 0, axes = F,","T_and_F_symbol_linter"
"R/mcmc.R",364,11,"style","Variable and function name style should be snake_case or symbols.","    names(uEs) <- unique(t)","object_name_linter"
"R/nbd.R",30,3,"style","Variable and function name style should be snake_case or symbols.","  estimated.params[estimated.params > max.param.value] <- max.param.value","object_name_linter"
"R/nbd.R",31,9,"style","Variable and function name style should be snake_case or symbols.","  names(estimated.params) <- c(""r"", ""alpha"")","object_name_linter"
"R/nbd.R",53,12,"style","Variable and function name style should be snake_case or symbols.","  tryCatch(T.cal <- cal.cbs$T.cal,","object_name_linter"
"R/nbd.R",70,3,"style","Variable and function name style should be snake_case or symbols.","  max.length <- max(length(x), length(T.cal))","object_name_linter"
"R/nbd.R",81,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = max.length)","object_name_linter"
"R/nbd.R",116,3,"style","Variable and function name style should be snake_case or symbols.","  max.length <- max(length(T.star), length(x), length(T.cal))","object_name_linter"
"R/nbd.R",130,3,"style","Variable and function name style should be snake_case or symbols.","  T.star <- rep(T.star, length.out = max.length)","object_name_linter"
"R/nbd.R",132,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = max.length)","object_name_linter"
"R/nbd.R",164,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = n)","object_name_linter"
"R/nbd.R",165,3,"style","Variable and function name style should be snake_case or symbols.","  T.zero <- T.cal.fix - T.cal","object_name_linter"
"R/nbd.R",166,3,"style","Variable and function name style should be snake_case or symbols.","  date.zero <- as.POSIXct(date.zero)","object_name_linter"
"R/nbd.R",188,3,"style","Variable and function name style should be snake_case or symbols.","  date.cal <- date.zero + T.cal.fix * 3600 * 24 * 7","object_name_linter"
"R/nbd.R",189,3,"style","Variable and function name style should be snake_case or symbols.","  date.tot <- date.cal + T.star * 3600 * 24 * 7","object_name_linter"
"R/pareto-ggg-mcmc.R",300,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = n)","object_name_linter"
"R/pareto-ggg-mcmc.R",301,3,"style","Variable and function name style should be snake_case or symbols.","  T.zero <- T.cal.fix - T.cal","object_name_linter"
"R/pareto-ggg-mcmc.R",302,3,"style","Variable and function name style should be snake_case or symbols.","  date.zero <- as.POSIXct(date.zero)","object_name_linter"
"R/pareto-ggg-mcmc.R",348,3,"style","Variable and function name style should be snake_case or symbols.","  date.cal <- date.zero + T.cal.fix * 3600 * 24 * 7","object_name_linter"
"R/pareto-ggg-mcmc.R",349,3,"style","Variable and function name style should be snake_case or symbols.","  date.tot <- date.cal + T.star * 3600 * 24 * 7","object_name_linter"
"R/pareto-nbd-abe.R",228,3,"style","Variable and function name style should be snake_case or symbols.","  cal.cbs[, ""intercept""] <- 1","object_name_linter"
"R/pareto-nbd-abe.R",283,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(T.cal, length.out = n)","object_name_linter"
"R/pareto-nbd-abe.R",284,3,"style","Variable and function name style should be snake_case or symbols.","  T.zero <- T.cal.fix - T.cal","object_name_linter"
"R/pareto-nbd-abe.R",285,3,"style","Variable and function name style should be snake_case or symbols.","  date.zero <- as.POSIXct(date.zero)","object_name_linter"
"R/pareto-nbd-abe.R",297,35,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (is.null(colnames(covars)) & ncol(covars) > 1)","vector_logic_linter"
"R/pareto-nbd-abe.R",340,3,"style","Variable and function name style should be snake_case or symbols.","  date.cal <- date.zero + T.cal.fix * 3600 * 24 * 7","object_name_linter"
"R/pareto-nbd-abe.R",341,3,"style","Variable and function name style should be snake_case or symbols.","  date.tot <- date.cal + T.star * 3600 * 24 * 7","object_name_linter"
"R/pareto-nbd-mcmc.R",74,5,"style","Variable and function name style should be snake_case or symbols.","    T.cal <- data$T.cal","object_name_linter"
"tests/testthat/test-bg-cnbd-k.R",9,3,"style","Variable and function name style should be snake_case or symbols.","  date.zero <- ""2010-01-01""","object_name_linter"
"tests/testthat/test-elog2cbs.R",11,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- Sys.Date() + 21","object_name_linter"
"tests/testthat/test-elog2cbs.R",12,3,"style","Variable and function name style should be snake_case or symbols.","  T.tot <- Sys.Date() + 30","object_name_linter"
"tests/testthat/test-pareto-nbd-abe.R",67,52,"style","Use TRUE instead of the symbol T.","  expect_equal(matrix(est[1:6], ncol = 2, byrow = T), params$beta, tolerance = 0.05)","T_and_F_symbol_linter"
"tests/testthat/test-pareto-nbd-mcmc.R",8,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- c(26, 26, 28.5, 52, 52)","object_name_linter"
"tests/testthat/test-pareto-nbd-mcmc.R",9,3,"style","Variable and function name style should be snake_case or symbols.","  T.star <- 52","object_name_linter"
"tests/testthat/test-pareto-nbd-mcmc.R",10,3,"style","Variable and function name style should be snake_case or symbols.","  date.zero <- ""2010-01-01""","object_name_linter"
"tests/testthat/test-pareto-nbd-mcmc.R",24,3,"style","Variable and function name style should be snake_case or symbols.","  date.zero <- min(sim_elog$date)","object_name_linter"
"tests/testthat/test-pareto-nbd-mcmc.R",40,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal <- rep(52, n)","object_name_linter"
"tests/testthat/test-pareto-nbd-mcmc.R",43,3,"style","Variable and function name style should be snake_case or symbols.","  T.cal[n] <- 52","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",76,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog <- read.csv(system.file(""data/cdnowElog.csv"", package = ""BTYD""),","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",79,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog$date <- as.Date(as.character(cdnowElog$date), format = ""%Y%m%d"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",132,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS <- elog2cbs(groceryElog, T.cal = ""2006-12-31"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",145,2,"style","Variable and function name style should be snake_case or symbols.","(k.wheat <- estimateRegularity(groceryElog, method = ""wheat"", ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",145,62,"style","Trailing whitespace is superfluous.","(k.wheat <- estimateRegularity(groceryElog, method = ""wheat"", ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",147,2,"style","Variable and function name style should be snake_case or symbols.","(k.mle <- estimateRegularity(groceryElog, method = ""mle"", ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",147,58,"style","Trailing whitespace is superfluous.","(k.mle <- estimateRegularity(groceryElog, method = ""mle"", ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",168,3,"style","Variable and function name style should be snake_case or symbols.","  groceryCBS <- elog2cbs(groceryElog, T.cal = ""2006-12-31"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",171,7,"style","Variable and function name style should be snake_case or symbols.","round(params.nbd <- nbd.EstimateParameters(groceryCBS), 3)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",181,62,"style","Trailing whitespace is superfluous.","# calculate expected future transactions for customers who've ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",183,1,"style","Variable and function name style should be snake_case or symbols.","est5.nbd <- nbd.ConditionalExpectedTransactions(params.nbd, ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",183,60,"style","Trailing whitespace is superfluous.","est5.nbd <- nbd.ConditionalExpectedTransactions(params.nbd, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",192,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$xstar.nbd <- nbd.ConditionalExpectedTransactions(","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",193,54,"style","Trailing whitespace is superfluous.","                    params = params.nbd, T.star = 52, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",196,57,"style","Trailing whitespace is superfluous.","rbind(`Actuals` = c(`Holdout` = sum(groceryCBS$x.star)), ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",212,3,"style","Variable and function name style should be snake_case or symbols.","  groceryCBS <- elog2cbs(groceryElog, T.cal = ""2006-12-31"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",215,1,"style","Variable and function name style should be snake_case or symbols.","params.pnbd <- BTYD::pnbd.EstimateParameters(groceryCBS[, c(""x"", ""t.x"", ""T.cal"")])","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",216,7,"style","Variable and function name style should be snake_case or symbols.","names(params.pnbd) <- c(""r"", ""alpha"", ""s"", ""beta"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",227,62,"style","Trailing whitespace is superfluous.","# calculate expected future transactions for customers who've ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",230,1,"style","Variable and function name style should be snake_case or symbols.","est5.pnbd <- BTYD::pnbd.ConditionalExpectedTransactions(params.pnbd, ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",230,69,"style","Trailing whitespace is superfluous.","est5.pnbd <- BTYD::pnbd.ConditionalExpectedTransactions(params.pnbd, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",239,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$xstar.pnbd <- BTYD::pnbd.ConditionalExpectedTransactions(","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",240,56,"style","Trailing whitespace is superfluous.","                     params = params.pnbd, T.star = 52, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",244,60,"style","Trailing whitespace is superfluous.","rbind(`Actuals`    = c(`Holdout` = sum(groceryCBS$x.star)), ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",251,65,"style","Trailing whitespace is superfluous.","# P(alive) for customers who've had 1 to 5 transactions in first ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",253,1,"style","Variable and function name style should be snake_case or symbols.","palive.pnbd <- BTYD::pnbd.PAlive(params.pnbd, ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",253,46,"style","Trailing whitespace is superfluous.","palive.pnbd <- BTYD::pnbd.PAlive(params.pnbd, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",256,45,"style","Put spaces around all infix operators.","  cat(""x ="", i, "":"", sprintf(""%5.2f %%"", 100*palive.pnbd[i]), ""\n"")","infix_spaces_linter"
"vignettes/BTYDplus-HowTo.Rmd",270,3,"style","Variable and function name style should be snake_case or symbols.","  groceryCBS <- elog2cbs(groceryElog, T.cal = ""2006-12-31"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",273,1,"style","Variable and function name style should be snake_case or symbols.","params.bgnbd   <- BTYD::bgnbd.EstimateParameters(groceryCBS) # BG/NBD","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",273,64,"style","Commented code should be removed.","params.bgnbd   <- BTYD::bgnbd.EstimateParameters(groceryCBS) # BG/NBD","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",274,1,"style","Variable and function name style should be snake_case or symbols.","params.bgcnbd  <- bgcnbd.EstimateParameters(groceryCBS)      # BG/CNBD-k","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",274,64,"style","Commented code should be removed.","params.bgcnbd  <- bgcnbd.EstimateParameters(groceryCBS)      # BG/CNBD-k","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",275,1,"style","Variable and function name style should be snake_case or symbols.","params.mbgnbd  <- mbgnbd.EstimateParameters(groceryCBS)      # MBG/NBD","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",275,64,"style","Commented code should be removed.","params.mbgnbd  <- mbgnbd.EstimateParameters(groceryCBS)      # MBG/NBD","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",276,1,"style","Variable and function name style should be snake_case or symbols.","params.mbgcnbd <- mbgcnbd.EstimateParameters(groceryCBS)     # MBG/CNBD-k","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",276,64,"style","Commented code should be removed.","params.mbgcnbd <- mbgcnbd.EstimateParameters(groceryCBS)     # MBG/CNBD-k","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",277,25,"style","Variable and function name style should be snake_case or symbols.","row <- function(params, LL) { ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",277,30,"style","Trailing whitespace is superfluous.","row <- function(params, LL) { ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",281,45,"style","Trailing whitespace is superfluous.","rbind(`BG/NBD`     = row(c(1, params.bgnbd), ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",283,40,"style","Trailing whitespace is superfluous.","      `BG/CNBD-k`  = row(params.bgcnbd, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",285,40,"style","Trailing whitespace is superfluous.","      `MBG/NBD`    = row(params.mbgnbd, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",287,41,"style","Trailing whitespace is superfluous.","      `MBG/CNBD-k` = row(params.mbgcnbd, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",294,62,"style","Trailing whitespace is superfluous.","# calculate expected future transactions for customers who've ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",297,1,"style","Variable and function name style should be snake_case or symbols.","est5.mbgcnbd <- mbgcnbd.ConditionalExpectedTransactions(params.mbgcnbd,","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",305,65,"style","Trailing whitespace is superfluous.","# P(alive) for customers who've had 1 to 5 transactions in first ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",307,1,"style","Variable and function name style should be snake_case or symbols.","palive.mbgcnbd <- mbgcnbd.PAlive(params.mbgcnbd, ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",307,49,"style","Trailing whitespace is superfluous.","palive.mbgcnbd <- mbgcnbd.PAlive(params.mbgcnbd, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",310,45,"style","Put spaces around all infix operators.","  cat(""x ="", i, "":"", sprintf(""%5.2f %%"", 100*palive.mbgcnbd[i]), ""\n"")","infix_spaces_linter"
"vignettes/BTYDplus-HowTo.Rmd",318,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$xstar.mbgcnbd <- mbgcnbd.ConditionalExpectedTransactions(","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",320,64,"style","Trailing whitespace is superfluous.","                        x = groceryCBS$x, t.x = groceryCBS$t.x, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",342,24,"style","Put spaces around all infix operators.","  stopifnot(length(act)==length(est))","infix_spaces_linter"
"vignettes/BTYDplus-HowTo.Rmd",343,14,"style","Put spaces around all infix operators.","  sum(abs(act-est)) / length(act)","infix_spaces_linter"
"vignettes/BTYDplus-HowTo.Rmd",345,1,"style","Variable and function name style should be snake_case or symbols.","mae.nbd <- mae(groceryCBS$x.star, groceryCBS$xstar.nbd)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",346,1,"style","Variable and function name style should be snake_case or symbols.","mae.pnbd <- mae(groceryCBS$x.star, groceryCBS$xstar.pnbd)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",347,1,"style","Variable and function name style should be snake_case or symbols.","mae.mbgcnbd <- mae(groceryCBS$x.star, groceryCBS$xstar.mbgcnbd)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",352,60,"style","Put spaces around all infix operators.","cat(""Lift in MAE for MBG/CNBD-k vs. Pareto/NBD:"", round(100*lift, 1), ""%"")","infix_spaces_linter"
"vignettes/BTYDplus-HowTo.Rmd",372,3,"style","Variable and function name style should be snake_case or symbols.","  groceryCBS <- elog2cbs(groceryElog, T.cal = ""2006-12-31"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",375,1,"style","Variable and function name style should be snake_case or symbols.","pnbd.draws <- pnbd.mcmc.DrawParameters(groceryCBS)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",377,1,"style","Variable and function name style should be snake_case or symbols.","pnbd.xstar.draws <- mcmc.DrawFutureTransactions(groceryCBS, pnbd.draws)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",379,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$xstar.pnbd.hb   <- apply(pnbd.xstar.draws, 2, mean)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",380,3,"style","Commented code should be removed.","# P(active)","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",381,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$pactive.pnbd.hb <- mcmc.PActive(pnbd.xstar.draws)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",382,3,"style","Commented code should be removed.","# P(alive)","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",383,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$palive.pnbd.hb  <- mcmc.PAlive(pnbd.draws)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",397,68,"style","Trailing whitespace is superfluous.","# convert cohort-level draws from coda::mcmc.list to a matrix, with ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",399,1,"style","Variable and function name style should be snake_case or symbols.","cohort.draws <- pnbd.draws$level_2","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",428,1,"style","Variable and function name style should be snake_case or symbols.","customer4.draws <- pnbd.draws$level_1[[customer4]]","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",463,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog <- read.csv(","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",467,1,"style","Variable and function name style should be snake_case or symbols.","cdnowElog$date <- as.Date(as.character(cdnowElog$date), ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",467,56,"style","Trailing whitespace is superfluous.","cdnowElog$date <- as.Date(as.character(cdnowElog$date), ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",470,1,"style","Variable and function name style should be snake_case or symbols.","cdnowCbs <- elog2cbs(cdnowElog, ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",470,32,"style","Trailing whitespace is superfluous.","cdnowCbs <- elog2cbs(cdnowElog, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",474,1,"style","Variable and function name style should be snake_case or symbols.","draws.m1 <- abe.mcmc.DrawParameters(cdnowCbs, ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",474,46,"style","Trailing whitespace is superfluous.","draws.m1 <- abe.mcmc.DrawParameters(cdnowCbs, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",488,1,"style","Variable and function name style should be snake_case or symbols.","cdnowCbs <- merge(cdnowCbs, first, by = ""cust"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",491,1,"style","Variable and function name style should be snake_case or symbols.","draws.m2 <- abe.mcmc.DrawParameters(cdnowCbs, ","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",491,46,"style","Trailing whitespace is superfluous.","draws.m2 <- abe.mcmc.DrawParameters(cdnowCbs, ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",518,3,"style","Variable and function name style should be snake_case or symbols.","  groceryCBS <- elog2cbs(groceryElog, T.cal = ""2006-12-31"")","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",521,1,"style","Variable and function name style should be snake_case or symbols.","pggg.draws <- pggg.mcmc.DrawParameters(groceryCBS) # ~2mins on 2015 MacBook Pro","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",523,1,"style","Variable and function name style should be snake_case or symbols.","pggg.xstar.draws <- mcmc.DrawFutureTransactions(groceryCBS, pggg.draws)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",525,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$xstar.pggg  <- apply(pggg.xstar.draws, 2, mean)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",526,3,"style","Commented code should be removed.","# P(active)","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",527,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$pactive.pggg <- mcmc.PActive(pggg.xstar.draws)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",528,3,"style","Commented code should be removed.","# P(alive)","commented_code_linter"
"vignettes/BTYDplus-HowTo.Rmd",529,1,"style","Variable and function name style should be snake_case or symbols.","groceryCBS$palive.pggg  <- mcmc.PAlive(pggg.draws)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",531,42,"style","Trailing whitespace is superfluous.","head(groceryCBS[, c(""x"", ""t.x"", ""x.star"", ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",543,39,"style","Trailing whitespace is superfluous.","#>     t gamma     r alpha     s  beta ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",544,39,"style","Trailing whitespace is superfluous.","#> 1.695 0.373 0.948 5.243 0.432 4.348 ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",550,36,"style","Trailing whitespace is superfluous.","#>    k lambda     mu    tau      z ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",551,37,"style","Trailing whitespace is superfluous.","#> 3.892  0.160  0.065 69.546  0.316 ","trailing_whitespace_linter"
"vignettes/BTYDplus-HowTo.Rmd",572,24,"style","Put spaces around all infix operators.","  stopifnot(length(act)==length(est))","infix_spaces_linter"
"vignettes/BTYDplus-HowTo.Rmd",573,14,"style","Put spaces around all infix operators.","  sum(abs(act-est)) / length(act)","infix_spaces_linter"
"vignettes/BTYDplus-HowTo.Rmd",575,1,"style","Variable and function name style should be snake_case or symbols.","mae.pggg <- mae(groceryCBS$x.star, groceryCBS$xstar.pggg)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",576,1,"style","Variable and function name style should be snake_case or symbols.","mae.mbgcnbd <- mae(groceryCBS$x.star, groceryCBS$xstar.mbgcnbd)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",577,1,"style","Variable and function name style should be snake_case or symbols.","mae.pnbd.hb <- mae(groceryCBS$x.star, groceryCBS$xstar.pnbd.hb)","object_name_linter"
"vignettes/BTYDplus-HowTo.Rmd",587,30,"style","Put spaces around all infix operators.","cat(""Lift in MAE:"", round(100*lift, 1), ""%"")","infix_spaces_linter"
