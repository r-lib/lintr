"filename","line_number","column_number","type","message","line","linter"
"inst/doc/article.R",478,3,"style","Variable and function name style should be snake_case or symbols.","  Diags[[i]] <- ripsDiag(subX, maxdimension = 1, maxscale = 5)","object_name_linter"
"inst/doc/article.R",479,3,"style","Variable and function name style should be snake_case or symbols.","  Lands[i, ] <- landscape(Diags[[i]][[""diagram""]], dimension = 1,","object_name_linter"
"inst/doc/article.Rnw",222,1,"style","Variable and function name style should be snake_case or symbols.","X <- circleUnif(400)","object_name_linter"
"inst/doc/article.Rnw",224,1,"style","Variable and function name style should be snake_case or symbols.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","object_name_linter"
"inst/doc/article.Rnw",224,21,"style","Compound semicolons are discouraged. Replace them by a newline.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","semicolon_linter"
"inst/doc/article.Rnw",224,24,"style","Variable and function name style should be snake_case or symbols.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","object_name_linter"
"inst/doc/article.Rnw",224,44,"style","Compound semicolons are discouraged. Replace them by a newline.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","semicolon_linter"
"inst/doc/article.Rnw",226,1,"style","Variable and function name style should be snake_case or symbols.","Xseq <- seq(Xlim[1], Xlim[2], by = by)","object_name_linter"
"inst/doc/article.Rnw",227,1,"style","Variable and function name style should be snake_case or symbols.","Yseq <- seq(Ylim[1], Ylim[2], by = by)","object_name_linter"
"inst/doc/article.Rnw",228,1,"style","Variable and function name style should be snake_case or symbols.","Grid <- expand.grid(Xseq, Yseq)","object_name_linter"
"inst/doc/article.Rnw",265,1,"style","Variable and function name style should be snake_case or symbols.","DTM <- dtm(X = X, Grid = Grid, m0 = m0)","object_name_linter"
"inst/doc/article.Rnw",276,1,"style","Variable and function name style should be snake_case or symbols.","kNN <- knnDE(X = X, Grid = Grid, k = k)","object_name_linter"
"inst/doc/article.Rnw",287,1,"style","Variable and function name style should be snake_case or symbols.","KDE <- kde(X = X, Grid = Grid, h = h)","object_name_linter"
"inst/doc/article.Rnw",298,1,"style","Variable and function name style should be snake_case or symbols.","Kdist <- kernelDist(X = X, Grid = Grid, h = h)","object_name_linter"
"inst/doc/article.Rnw",394,1,"style","Variable and function name style should be snake_case or symbols.","posYgrid <- which(Grid[, 2] > 0)","object_name_linter"
"inst/doc/article.Rnw",395,1,"style","Variable and function name style should be snake_case or symbols.","posYseq <- which(Yseq > 0)","object_name_linter"
"inst/doc/article.Rnw",465,1,"style","Variable and function name style should be snake_case or symbols.","DiagGrid <- gridDiag(","object_name_linter"
"inst/doc/article.Rnw",501,81,"style","Lines should not be more than 80 characters.","    lines(DiagGrid[[""cycleLocation""]][[one[i]]][j, , ], pch = 19, cex = 1, col = i)","line_length_linter"
"inst/doc/article.Rnw",556,1,"style","Variable and function name style should be snake_case or symbols.","Circle1 <- circleUnif(60)","object_name_linter"
"inst/doc/article.Rnw",557,1,"style","Variable and function name style should be snake_case or symbols.","Circle2 <- circleUnif(60, r = 2) + 3","object_name_linter"
"inst/doc/article.Rnw",558,1,"style","Variable and function name style should be snake_case or symbols.","Circles <- rbind(Circle1, Circle2)","object_name_linter"
"inst/doc/article.Rnw",571,1,"style","Variable and function name style should be snake_case or symbols.","DiagRips <- ripsDiag(X = Circles, maxdimension, maxscale,","object_name_linter"
"inst/doc/article.Rnw",584,25,"style","Put spaces around all infix operators.","par(mfrow = c(1, 3), mai=c(0.8, 0.8, 0.3, 0.3))","infix_spaces_linter"
"inst/doc/article.Rnw",585,35,"style","Commas should always have a space after.","plot(Circles, pch = 16, xlab = """",ylab = """", main = ""Two Circles"")","commas_linter"
"inst/doc/article.Rnw",592,81,"style","Lines should not be more than 80 characters.","    lines(DiagRips[[""cycleLocation""]][[one[i]]][j, , ], pch = 19, cex = 1, col = i)","line_length_linter"
"inst/doc/article.Rnw",617,1,"style","Variable and function name style should be snake_case or symbols.","X <- circleUnif(n = 30)","object_name_linter"
"inst/doc/article.Rnw",624,1,"style","Variable and function name style should be snake_case or symbols.","DiagAlphaCmplx <- alphaComplexDiag(","object_name_linter"
"inst/doc/article.Rnw",646,1,"style","Use spaces to indent, not tabs.","	    cex = 1, col = i + 1)","no_tab_linter"
"inst/doc/article.Rnw",668,1,"style","Variable and function name style should be snake_case or symbols.","X <- cbind(circleUnif(n = n), runif(n = n, min = -0.1, max = 0.1))","object_name_linter"
"inst/doc/article.Rnw",674,1,"style","Variable and function name style should be snake_case or symbols.","DiagAlphaShape <- alphaShapeDiag(","object_name_linter"
"inst/doc/article.Rnw",716,1,"style","Variable and function name style should be snake_case or symbols.","X <- circleUnif(n = 100)","object_name_linter"
"inst/doc/article.Rnw",724,1,"style","Variable and function name style should be snake_case or symbols.","FltRips <- ripsFiltration(X = X, maxdimension = maxdimension,","object_name_linter"
"inst/doc/article.Rnw",726,1,"style","Use spaces to indent, not tabs.","	printProgress = TRUE)","no_tab_linter"
"inst/doc/article.Rnw",735,1,"style","Variable and function name style should be snake_case or symbols.","dtmValues <- dtm(X = X, Grid = X, m0 = m0)","object_name_linter"
"inst/doc/article.Rnw",736,1,"style","Variable and function name style should be snake_case or symbols.","FltFun <- funFiltration(FUNvalues = dtmValues, cmplx = FltRips[[""cmplx""]])","object_name_linter"
"inst/doc/article.Rnw",742,1,"style","Variable and function name style should be snake_case or symbols.","DiagFltFun <- filtrationDiag(filtration = FltFun, maxdimension = maxdimension,","object_name_linter"
"inst/doc/article.Rnw",752,25,"style","Put spaces around all infix operators.","par(mfrow = c(1, 2), mai=c(0.8, 0.8, 0.3, 0.3))","infix_spaces_linter"
"inst/doc/article.Rnw",753,29,"style","Commas should always have a space after.","plot(X, pch = 16, xlab = """",ylab = """")","commas_linter"
"inst/doc/article.Rnw",775,1,"style","Variable and function name style should be snake_case or symbols.","Diag1 <- ripsDiag(Circle1, maxdimension = 1, maxscale = 5)","object_name_linter"
"inst/doc/article.Rnw",776,1,"style","Variable and function name style should be snake_case or symbols.","Diag2 <- ripsDiag(Circle2, maxdimension = 1, maxscale = 5)","object_name_linter"
"inst/doc/article.Rnw",854,1,"style","Variable and function name style should be snake_case or symbols.","PlotTriangles <- function(left, right) {","object_name_linter"
"inst/doc/article.Rnw",856,3,"style","Variable and function name style should be snake_case or symbols.","  X <- (left + right) / 2","object_name_linter"
"inst/doc/article.Rnw",857,3,"style","Variable and function name style should be snake_case or symbols.","  Y <- (right - left) / 2","object_name_linter"
"inst/doc/article.Rnw",865,1,"style","Use spaces to indent, not tabs.","	mtext(""(Birth + Death) / 2"", side = 1, line = 2.5, cex = 1)","no_tab_linter"
"inst/doc/article.Rnw",866,1,"style","Use spaces to indent, not tabs.","	mtext(""(Death - Birth) / 2"", side = 2, line = 2.5, cex = 1)","no_tab_linter"
"inst/doc/article.Rnw",867,1,"style","Use spaces to indent, not tabs.","	#polygon(c(0, 0, ylimit[2]), c(0, ylimit[2], ylimit[2]),","no_tab_linter"
"inst/doc/article.Rnw",874,3,"style","Variable and function name style should be snake_case or symbols.","  B <- max(X + Y)","object_name_linter"
"inst/doc/article.Rnw",876,3,"warning","local variable ‘maxfun’ assigned but may not be used","  maxfun <- rep(0, length(grid))","object_usage_linter"
"inst/doc/article.Rnw",878,6,"style","Place a space before left parenthesis, except in a function call.","  for(i in seq_len(n)) {","spaces_left_parentheses_linter"
"inst/doc/article.Rnw",881,3,"warning","local variable ‘land’ assigned but may not be used","  land <- apply(tmp, 2, max)","object_usage_linter"
"inst/doc/article.Rnw",882,4,"style","Commented code should be removed.","  #lines(grid, land, lwd = 2, col = 4)","commented_code_linter"
"inst/doc/article.Rnw",883,1,"style","Use spaces to indent, not tabs.","	points(X, Y, type = ""p"", cex = 1, pch = 19, col = ""pink"")","no_tab_linter"
"inst/doc/article.Rnw",892,27,"style","Trailing whitespace is superfluous.","PlotTriangles(left, right)    ","trailing_whitespace_linter"
"inst/doc/article.Rnw",894,1,"style","Variable and function name style should be snake_case or symbols.","Diag1 <- cbind(rep(0, length(left)), left, right)","object_name_linter"
"inst/doc/article.Rnw",896,1,"style","Variable and function name style should be snake_case or symbols.","Land1 <- landscape(Diag1, dimension = 0, KK = 1, tseq)","object_name_linter"
"inst/doc/article.Rnw",897,1,"style","Variable and function name style should be snake_case or symbols.","Sil1 <- silhouette(Diag1, p = 1, dimension = 0, tseq)","object_name_linter"
"inst/doc/article.Rnw",899,1,"style","Variable and function name style should be snake_case or symbols.","X <- (left + right) / 2","object_name_linter"
"inst/doc/article.Rnw",900,1,"style","Variable and function name style should be snake_case or symbols.","Y <- (right - left) / 2","object_name_linter"
"inst/doc/article.Rnw",939,1,"style","Variable and function name style should be snake_case or symbols.","Land <- landscape(DiagRips[[""diagram""]], dimension = 1, KK = 1, tseq)","object_name_linter"
"inst/doc/article.Rnw",940,1,"style","Variable and function name style should be snake_case or symbols.","Sil <- silhouette(DiagRips[[""diagram""]], p = 1, dimension = 1, tseq)","object_name_linter"
"inst/doc/article.Rnw",975,1,"style","Variable and function name style should be snake_case or symbols.","N <- 4000","object_name_linter"
"inst/doc/article.Rnw",976,1,"style","Variable and function name style should be snake_case or symbols.","XX1 <- circleUnif(N / 2)","object_name_linter"
"inst/doc/article.Rnw",977,1,"style","Variable and function name style should be snake_case or symbols.","XX2 <- circleUnif(N / 2, r = 2) + 3","object_name_linter"
"inst/doc/article.Rnw",978,1,"style","Variable and function name style should be snake_case or symbols.","X <- rbind(XX1, XX2)","object_name_linter"
"inst/doc/article.Rnw",990,1,"style","Variable and function name style should be snake_case or symbols.","Diags <- list()","object_name_linter"
"inst/doc/article.Rnw",992,1,"style","Variable and function name style should be snake_case or symbols.","Lands <- matrix(0, nrow = n, ncol = length(tseq))","object_name_linter"
"inst/doc/article.Rnw",1000,3,"style","Variable and function name style should be snake_case or symbols.","  subX <- X[sample(seq_len(N), m), ]","object_name_linter"
"inst/doc/article.Rnw",1001,3,"style","Variable and function name style should be snake_case or symbols.","  Diags[[i]] <- ripsDiag(subX, maxdimension = 1, maxscale = 5)","object_name_linter"
"inst/doc/article.Rnw",1002,3,"style","Variable and function name style should be snake_case or symbols.","  Lands[i, ] <- landscape(Diags[[i]][[""diagram""]], dimension = 1,","object_name_linter"
"inst/doc/article.Rnw",1010,1,"style","Variable and function name style should be snake_case or symbols.","bootLand <- multipBootstrap(Lands, B = 100, alpha = 0.05,","object_name_linter"
"inst/doc/article.Rnw",1080,1,"style","Variable and function name style should be snake_case or symbols.","XX1 <- circleUnif(600)","object_name_linter"
"inst/doc/article.Rnw",1081,1,"style","Variable and function name style should be snake_case or symbols.","XX2 <- circleUnif(1000, r = 1.5) + 2.5","object_name_linter"
"inst/doc/article.Rnw",1083,1,"style","Variable and function name style should be snake_case or symbols.","X <- rbind(XX1, XX2, noise)","object_name_linter"
"inst/doc/article.Rnw",1086,1,"style","Variable and function name style should be snake_case or symbols.","Xlim <- c(-2, 5)","object_name_linter"
"inst/doc/article.Rnw",1087,1,"style","Variable and function name style should be snake_case or symbols.","Ylim <- c(-2, 5)","object_name_linter"
"inst/doc/article.Rnw",1094,1,"style","Variable and function name style should be snake_case or symbols.","parametersKDE <- seq(0.1, 0.6, by = 0.05)","object_name_linter"
"inst/doc/article.Rnw",1096,1,"style","Variable and function name style should be snake_case or symbols.","B <- 50       # number of bootstrap iterations. Should be large.","object_name_linter"
"inst/doc/article.Rnw",1103,1,"style","Variable and function name style should be snake_case or symbols.","maxKDE <- maxPersistence(kde, parametersKDE, X,","object_name_linter"
"inst/doc/article.Rnw",1149,1,"style","Variable and function name style should be snake_case or symbols.","X1 <- cbind(rnorm(300, 1, .8), rnorm(300, 5, 0.8))","object_name_linter"
"inst/doc/article.Rnw",1150,1,"style","Variable and function name style should be snake_case or symbols.","X2 <- cbind(rnorm(300, 3.5, .8), rnorm(300, 5, 0.8))","object_name_linter"
"inst/doc/article.Rnw",1151,1,"style","Variable and function name style should be snake_case or symbols.","X3 <- cbind(rnorm(300, 6, 1), rnorm(300, 1, 1))","object_name_linter"
"inst/doc/article.Rnw",1152,1,"style","Variable and function name style should be snake_case or symbols.","XX <- rbind(X1, X2, X3)","object_name_linter"
"inst/doc/article.Rnw",1158,1,"style","Variable and function name style should be snake_case or symbols.","Tree <- clusterTree(XX, k = 100, density = ""knn"",","object_name_linter"
"inst/doc/article.Rnw",1160,1,"style","Variable and function name style should be snake_case or symbols.","TreeKDE <- clusterTree(XX, k = 100, h = 0.3, density = ""kde"",","object_name_linter"
"inst/doc/article.Rnw",1183,17,"style","Commas should always have a space after.","par(mfrow = c(2,3))","commas_linter"
"inst/doc/article.Rnw",1184,18,"style","Commas should always have a space after.","par(mai = c(0.25,0.35,0.3,0.3))","commas_linter"
"inst/doc/article.Rnw",1184,23,"style","Commas should always have a space after.","par(mai = c(0.25,0.35,0.3,0.3))","commas_linter"
"inst/doc/article.Rnw",1184,27,"style","Commas should always have a space after.","par(mai = c(0.25,0.35,0.3,0.3))","commas_linter"
"inst/doc/article.Rnw",1195,1,"style","Use spaces to indent, not tabs.","	points(matrix(XX[Tree[[""DataPoints""]][[i]], ], ncol = 2), col = i,","no_tab_linter"
"R/alphaComplexDiag.R",66,12,"style","Variable and function name style should be snake_case or symbols.","  colnames(Diag) <- c(""dimension"", ""Birth"", ""Death"")","object_name_linter"
"R/alphaComplexDiag.R",67,9,"style","Variable and function name style should be snake_case or symbols.","  class(Diag) <- ""diagram""","object_name_linter"
"R/alphaComplexDiag.R",68,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""maxdimension""]] <- max(Diag[, 1])","object_name_linter"
"R/alphaComplexDiag.R",70,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""scale""]] <-","object_name_linter"
"R/alphaComplexDiag.R",72,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""call""]] <- match.call()","object_name_linter"
"R/alphaShapeDiag.R",58,12,"style","Variable and function name style should be snake_case or symbols.","  colnames(Diag) <- c(""dimension"", ""Birth"", ""Death"")","object_name_linter"
"R/alphaShapeDiag.R",59,9,"style","Variable and function name style should be snake_case or symbols.","  class(Diag) <- ""diagram""","object_name_linter"
"R/alphaShapeDiag.R",60,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""maxdimension""]] <- max(Diag[, 1])","object_name_linter"
"R/alphaShapeDiag.R",62,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""scale""]] <-","object_name_linter"
"R/alphaShapeDiag.R",64,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""call""]] <- match.call()","object_name_linter"
"R/bootstrapBand.R",79,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/bootstrapDiagram.R",159,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/bottleneck.R",39,5,"style","Variable and function name style should be snake_case or symbols.","    bottleDistance[dimIdx] <- Bottleneck(Diag1Dim, Diag2Dim)","object_name_linter"
"R/clusterTree.R",52,7,"style","Variable and function name style should be snake_case or symbols.","      adjMat[i, knnInfo[[""nn.index""]][i, ]] <- 1","object_name_linter"
"R/clusterTree.R",68,7,"style","Variable and function name style should be snake_case or symbols.","      adjMat[i, knnInfo[[""nn.index""]][i, ]] <- 1","object_name_linter"
"R/clusterTree.R",104,5,"style","Variable and function name style should be snake_case or symbols.","    G[NewExcluded, present] <- FALSE  # remove edges of the new excluded point","object_name_linter"
"R/clusterTree.R",106,5,"style","Variable and function name style should be snake_case or symbols.","    CLUSTERS[[j]] <- list(""no"" = clust[[""no""]], ""mem"" = clust[[""membership""]],","object_name_linter"
"R/clusterTree.R",166,5,"style","Variable and function name style should be snake_case or symbols.","    compBranch[[bb]] <- seq_len(n)","object_name_linter"
"R/clusterTree.R",216,9,"style","Variable and function name style should be snake_case or symbols.","        compBranch[[bb]] <- components[[i]]","object_name_linter"
"R/clusterTree.R",245,5,"style","Variable and function name style should be snake_case or symbols.","    alphaBottom[i] <- sum(hat.f > bottom[i]) / n","object_name_linter"
"R/clusterTree.R",246,5,"style","Variable and function name style should be snake_case or symbols.","    alphaTop[i] <- sum(hat.f > top[i]) / n","object_name_linter"
"R/clusterTree.R",262,9,"style","Variable and function name style should be snake_case or symbols.","        rBottom[i] <- max(r.k)","object_name_linter"
"R/clusterTree.R",265,9,"style","Variable and function name style should be snake_case or symbols.","        rTop[i] <- max(r.k)","object_name_linter"
"R/dtm.R",52,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/filtrationDiag.R",50,14,"style","Variable and function name style should be snake_case or symbols.","    colnames(Diag) <- c(""dimension"", ""Death"", ""Birth"")","object_name_linter"
"R/filtrationDiag.R",51,5,"style","Variable and function name style should be snake_case or symbols.","    Diag[, 2:3] <- -Diag[, 3:2]","object_name_linter"
"R/filtrationDiag.R",53,14,"style","Variable and function name style should be snake_case or symbols.","    colnames(Diag) <- c(""dimension"", ""Birth"", ""Death"")","object_name_linter"
"R/filtrationDiag.R",56,9,"style","Variable and function name style should be snake_case or symbols.","  class(Diag) <- ""diagram""","object_name_linter"
"R/filtrationDiag.R",57,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""maxdimension""]] <- max(Diag[, 1])","object_name_linter"
"R/filtrationDiag.R",59,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""scale""]] <-","object_name_linter"
"R/filtrationDiag.R",61,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""call""]] <- match.call()","object_name_linter"
"R/filtrationDiag.R",74,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/findKtree.R",9,7,"style","Variable and function name style should be snake_case or symbols.","      kappaBottom[i] <- NA","object_name_linter"
"R/findKtree.R",10,7,"style","Variable and function name style should be snake_case or symbols.","      kappaTop[i] <- NA","object_name_linter"
"R/findKtree.R",18,11,"style","Variable and function name style should be snake_case or symbols.","          kappaTop[i] <-","object_name_linter"
"R/findKtree.R",21,13,"style","Variable and function name style should be snake_case or symbols.","            kappaTop[i] <- length(compBranch[[i]]) / n","object_name_linter"
"R/findKtree.R",24,11,"style","Variable and function name style should be snake_case or symbols.","          kappaTop[i] <- length(compBranch[[i]]) / n","object_name_linter"
"R/findKtree.R",27,9,"style","Variable and function name style should be snake_case or symbols.","        kappaBottom[i] <- kappaTop[parent[i]]","object_name_linter"
"R/findKtree.R",34,13,"style","Variable and function name style should be snake_case or symbols.","            kappaTop[i] <- kappaBottom[i] + (length(compBranch[[i]]) -","object_name_linter"
"R/findKtree.R",37,13,"style","Variable and function name style should be snake_case or symbols.","            kappaTop[i] <- kappaBottom[i] + length(compBranch[[i]]) / n","object_name_linter"
"R/findKtree.R",40,11,"style","Variable and function name style should be snake_case or symbols.","          kappaTop[i] <- kappaBottom[i] + length(compBranch[[i]]) / n","object_name_linter"
"R/funFiltration.R",34,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/gridBy.R",16,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/gridDiag.R",130,14,"style","Variable and function name style should be snake_case or symbols.","    colnames(Diag) <- c(""dimension"", ""Death"", ""Birth"")","object_name_linter"
"R/gridDiag.R",131,5,"style","Variable and function name style should be snake_case or symbols.","    Diag[, 2:3] <- -Diag[, 3:2]","object_name_linter"
"R/gridDiag.R",133,14,"style","Variable and function name style should be snake_case or symbols.","    colnames(Diag) <- c(""dimension"", ""Birth"", ""Death"")","object_name_linter"
"R/gridDiag.R",136,9,"style","Variable and function name style should be snake_case or symbols.","  class(Diag) <- ""diagram""","object_name_linter"
"R/gridDiag.R",137,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""maxdimension""]] <- max(Diag[, 1])","object_name_linter"
"R/gridDiag.R",139,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""scale""]] <-","object_name_linter"
"R/gridDiag.R",141,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""call""]] <- match.call()","object_name_linter"
"R/gridFiltration.R",94,5,"style","Variable and function name style should be snake_case or symbols.","    gridOut[[2]] <- -gridOut[[2]]","object_name_linter"
"R/gridFiltration.R",108,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/hausdInterval.R",53,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/knnDE.R",20,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/landscape.R",53,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/maxPersistence.R",109,14,"style","Variable and function name style should be snake_case or symbols.","    colnames(Pers[[i]]) <- c(""dimension"", ""Persistence"")","object_name_linter"
"R/maxPersistence.R",121,7,"style","Variable and function name style should be snake_case or symbols.","      numberSignificant[i] <- sum(Pers[[i]][selctDim, 2] > (2 * eps[i]))","object_name_linter"
"R/maxPersistence.R",122,7,"style","Variable and function name style should be snake_case or symbols.","      significantPers[i] <- sum(pmax(0, Pers[[i]][selctDim, 2] - (2 * eps[i])))","object_name_linter"
"R/maxPersistence.R",128,7,"style","Variable and function name style should be snake_case or symbols.","      numberSignificant[i] <- sum(Pers[[i]][, 2] > (2 * eps[i]))","object_name_linter"
"R/maxPersistence.R",129,7,"style","Variable and function name style should be snake_case or symbols.","      significantPers[i] <- sum(pmax(0, Pers[[i]][, 2] - (2 * eps[i])))","object_name_linter"
"R/multipBootstrap.R",55,3,"style","Variable and function name style should be snake_case or symbols.","  LOWband1[which(LOWband1 < 0)] <- 0  #set negative values of lower band =0","object_name_linter"
"R/plot.diagram.R",121,11,"style","Variable and function name style should be snake_case or symbols.","          sortedDiag[(oldlD + 1):(lD), ] <- x[posD, ]","object_name_linter"
"R/plot.diagram.R",122,11,"style","Variable and function name style should be snake_case or symbols.","          sortedCol[(oldlD + 1):(lD)] <- col[posD]","object_name_linter"
"R/plot.diagram.R",157,9,"style","There should be a space before an opening curly brace.","  } else{  ### diagram plot","brace_linter"
"R/plot.diagram.R",173,11,"style","There should be a space before an opening curly brace.","    } else{","brace_linter"
"R/plotRule.R",12,9,"style","Variable and function name style should be snake_case or symbols.","        Tops[j] <- max(Tree[[""density""]][Tree[[""DataPoints""]][[j]]])","object_name_linter"
"R/plotRule.R",41,13,"style","Variable and function name style should be snake_case or symbols.","            NewTree[[""parent""]][which(Tree[[""parent""]] == bros[j])] <- newID[j]","object_name_linter"
"R/plotRule.R",48,15,"style","Variable and function name style should be snake_case or symbols.","              NewTree[[""children""]][[newID[j]]] <- NA","object_name_linter"
"R/plotRule.R",62,13,"style","Variable and function name style should be snake_case or symbols.","            NewTree[[""Xbase""]][s] <- sum(NewTree[[""silo""]][[s]]) / 2","object_name_linter"
"R/plotRule.R",66,13,"style","Variable and function name style should be snake_case or symbols.","            NewTree[[""silo""]][[s]] <- siloF(NewTree[[""silo""]]","object_name_linter"
"R/print.clusterTree.R",5,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/print.diagram.R",5,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/print.maxPersistence.R",4,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/print.summary.diagram.R",11,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/print.summary.maxPersistence.R",9,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/ripsDiag.R",102,12,"style","Variable and function name style should be snake_case or symbols.","  colnames(Diag) <- c(""dimension"", ""Birth"", ""Death"")","object_name_linter"
"R/ripsDiag.R",103,9,"style","Variable and function name style should be snake_case or symbols.","  class(Diag) <- ""diagram""","object_name_linter"
"R/ripsDiag.R",104,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""maxdimension""]] <- max(Diag[, 1])","object_name_linter"
"R/ripsDiag.R",105,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""scale""]] <- c(0, maxscale)","object_name_linter"
"R/ripsDiag.R",106,14,"style","Variable and function name style should be snake_case or symbols.","  attributes(Diag)[[""call""]] <- match.call()","object_name_linter"
"R/rMultinom.R",5,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/sphereUnif.R",18,7,"style","Variable and function name style should be snake_case or symbols.","      X[i, ] <- stats::rnorm(d + 1)","object_name_linter"
"R/summary.diagram.R",10,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/summary.maxPersistence.R",14,2,"style","Missing terminal newline.","}","trailing_blank_lines_linter"
"R/wasserstein.R",40,5,"style","Variable and function name style should be snake_case or symbols.","    wassersteinDistance[dimIdx] <- Wasserstein(Diag1Dim, Diag2Dim, p)","object_name_linter"
"vignettes/article.Rnw",222,1,"style","Variable and function name style should be snake_case or symbols.","X <- circleUnif(400)","object_name_linter"
"vignettes/article.Rnw",224,1,"style","Variable and function name style should be snake_case or symbols.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","object_name_linter"
"vignettes/article.Rnw",224,21,"style","Compound semicolons are discouraged. Replace them by a newline.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","semicolon_linter"
"vignettes/article.Rnw",224,24,"style","Variable and function name style should be snake_case or symbols.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","object_name_linter"
"vignettes/article.Rnw",224,44,"style","Compound semicolons are discouraged. Replace them by a newline.","Xlim <- c(-1.6, 1.6);  Ylim <- c(-1.7, 1.7);  by <- 0.065","semicolon_linter"
"vignettes/article.Rnw",226,1,"style","Variable and function name style should be snake_case or symbols.","Xseq <- seq(Xlim[1], Xlim[2], by = by)","object_name_linter"
"vignettes/article.Rnw",227,1,"style","Variable and function name style should be snake_case or symbols.","Yseq <- seq(Ylim[1], Ylim[2], by = by)","object_name_linter"
"vignettes/article.Rnw",228,1,"style","Variable and function name style should be snake_case or symbols.","Grid <- expand.grid(Xseq, Yseq)","object_name_linter"
"vignettes/article.Rnw",265,1,"style","Variable and function name style should be snake_case or symbols.","DTM <- dtm(X = X, Grid = Grid, m0 = m0)","object_name_linter"
"vignettes/article.Rnw",276,1,"style","Variable and function name style should be snake_case or symbols.","kNN <- knnDE(X = X, Grid = Grid, k = k)","object_name_linter"
"vignettes/article.Rnw",287,1,"style","Variable and function name style should be snake_case or symbols.","KDE <- kde(X = X, Grid = Grid, h = h)","object_name_linter"
"vignettes/article.Rnw",298,1,"style","Variable and function name style should be snake_case or symbols.","Kdist <- kernelDist(X = X, Grid = Grid, h = h)","object_name_linter"
"vignettes/article.Rnw",394,1,"style","Variable and function name style should be snake_case or symbols.","posYgrid <- which(Grid[, 2] > 0)","object_name_linter"
"vignettes/article.Rnw",395,1,"style","Variable and function name style should be snake_case or symbols.","posYseq <- which(Yseq > 0)","object_name_linter"
"vignettes/article.Rnw",465,1,"style","Variable and function name style should be snake_case or symbols.","DiagGrid <- gridDiag(","object_name_linter"
"vignettes/article.Rnw",501,81,"style","Lines should not be more than 80 characters.","    lines(DiagGrid[[""cycleLocation""]][[one[i]]][j, , ], pch = 19, cex = 1, col = i)","line_length_linter"
"vignettes/article.Rnw",556,1,"style","Variable and function name style should be snake_case or symbols.","Circle1 <- circleUnif(60)","object_name_linter"
"vignettes/article.Rnw",557,1,"style","Variable and function name style should be snake_case or symbols.","Circle2 <- circleUnif(60, r = 2) + 3","object_name_linter"
"vignettes/article.Rnw",558,1,"style","Variable and function name style should be snake_case or symbols.","Circles <- rbind(Circle1, Circle2)","object_name_linter"
"vignettes/article.Rnw",571,1,"style","Variable and function name style should be snake_case or symbols.","DiagRips <- ripsDiag(X = Circles, maxdimension, maxscale,","object_name_linter"
"vignettes/article.Rnw",584,25,"style","Put spaces around all infix operators.","par(mfrow = c(1, 3), mai=c(0.8, 0.8, 0.3, 0.3))","infix_spaces_linter"
"vignettes/article.Rnw",585,35,"style","Commas should always have a space after.","plot(Circles, pch = 16, xlab = """",ylab = """", main = ""Two Circles"")","commas_linter"
"vignettes/article.Rnw",592,81,"style","Lines should not be more than 80 characters.","    lines(DiagRips[[""cycleLocation""]][[one[i]]][j, , ], pch = 19, cex = 1, col = i)","line_length_linter"
"vignettes/article.Rnw",617,1,"style","Variable and function name style should be snake_case or symbols.","X <- circleUnif(n = 30)","object_name_linter"
"vignettes/article.Rnw",624,1,"style","Variable and function name style should be snake_case or symbols.","DiagAlphaCmplx <- alphaComplexDiag(","object_name_linter"
"vignettes/article.Rnw",646,1,"style","Use spaces to indent, not tabs.","	    cex = 1, col = i + 1)","no_tab_linter"
"vignettes/article.Rnw",668,1,"style","Variable and function name style should be snake_case or symbols.","X <- cbind(circleUnif(n = n), runif(n = n, min = -0.1, max = 0.1))","object_name_linter"
"vignettes/article.Rnw",674,1,"style","Variable and function name style should be snake_case or symbols.","DiagAlphaShape <- alphaShapeDiag(","object_name_linter"
"vignettes/article.Rnw",716,1,"style","Variable and function name style should be snake_case or symbols.","X <- circleUnif(n = 100)","object_name_linter"
"vignettes/article.Rnw",724,1,"style","Variable and function name style should be snake_case or symbols.","FltRips <- ripsFiltration(X = X, maxdimension = maxdimension,","object_name_linter"
"vignettes/article.Rnw",726,1,"style","Use spaces to indent, not tabs.","	printProgress = TRUE)","no_tab_linter"
"vignettes/article.Rnw",735,1,"style","Variable and function name style should be snake_case or symbols.","dtmValues <- dtm(X = X, Grid = X, m0 = m0)","object_name_linter"
"vignettes/article.Rnw",736,1,"style","Variable and function name style should be snake_case or symbols.","FltFun <- funFiltration(FUNvalues = dtmValues, cmplx = FltRips[[""cmplx""]])","object_name_linter"
"vignettes/article.Rnw",742,1,"style","Variable and function name style should be snake_case or symbols.","DiagFltFun <- filtrationDiag(filtration = FltFun, maxdimension = maxdimension,","object_name_linter"
"vignettes/article.Rnw",752,25,"style","Put spaces around all infix operators.","par(mfrow = c(1, 2), mai=c(0.8, 0.8, 0.3, 0.3))","infix_spaces_linter"
"vignettes/article.Rnw",753,29,"style","Commas should always have a space after.","plot(X, pch = 16, xlab = """",ylab = """")","commas_linter"
"vignettes/article.Rnw",775,1,"style","Variable and function name style should be snake_case or symbols.","Diag1 <- ripsDiag(Circle1, maxdimension = 1, maxscale = 5)","object_name_linter"
"vignettes/article.Rnw",776,1,"style","Variable and function name style should be snake_case or symbols.","Diag2 <- ripsDiag(Circle2, maxdimension = 1, maxscale = 5)","object_name_linter"
"vignettes/article.Rnw",854,1,"style","Variable and function name style should be snake_case or symbols.","PlotTriangles <- function(left, right) {","object_name_linter"
"vignettes/article.Rnw",856,3,"style","Variable and function name style should be snake_case or symbols.","  X <- (left + right) / 2","object_name_linter"
"vignettes/article.Rnw",857,3,"style","Variable and function name style should be snake_case or symbols.","  Y <- (right - left) / 2","object_name_linter"
"vignettes/article.Rnw",865,1,"style","Use spaces to indent, not tabs.","	mtext(""(Birth + Death) / 2"", side = 1, line = 2.5, cex = 1)","no_tab_linter"
"vignettes/article.Rnw",866,1,"style","Use spaces to indent, not tabs.","	mtext(""(Death - Birth) / 2"", side = 2, line = 2.5, cex = 1)","no_tab_linter"
"vignettes/article.Rnw",867,1,"style","Use spaces to indent, not tabs.","	#polygon(c(0, 0, ylimit[2]), c(0, ylimit[2], ylimit[2]),","no_tab_linter"
"vignettes/article.Rnw",874,3,"style","Variable and function name style should be snake_case or symbols.","  B <- max(X + Y)","object_name_linter"
"vignettes/article.Rnw",876,3,"warning","local variable ‘maxfun’ assigned but may not be used","  maxfun <- rep(0, length(grid))","object_usage_linter"
"vignettes/article.Rnw",878,6,"style","Place a space before left parenthesis, except in a function call.","  for(i in seq_len(n)) {","spaces_left_parentheses_linter"
"vignettes/article.Rnw",881,3,"warning","local variable ‘land’ assigned but may not be used","  land <- apply(tmp, 2, max)","object_usage_linter"
"vignettes/article.Rnw",882,4,"style","Commented code should be removed.","  #lines(grid, land, lwd = 2, col = 4)","commented_code_linter"
"vignettes/article.Rnw",883,1,"style","Use spaces to indent, not tabs.","	points(X, Y, type = ""p"", cex = 1, pch = 19, col = ""pink"")","no_tab_linter"
"vignettes/article.Rnw",892,27,"style","Trailing whitespace is superfluous.","PlotTriangles(left, right)    ","trailing_whitespace_linter"
"vignettes/article.Rnw",894,1,"style","Variable and function name style should be snake_case or symbols.","Diag1 <- cbind(rep(0, length(left)), left, right)","object_name_linter"
"vignettes/article.Rnw",896,1,"style","Variable and function name style should be snake_case or symbols.","Land1 <- landscape(Diag1, dimension = 0, KK = 1, tseq)","object_name_linter"
"vignettes/article.Rnw",897,1,"style","Variable and function name style should be snake_case or symbols.","Sil1 <- silhouette(Diag1, p = 1, dimension = 0, tseq)","object_name_linter"
"vignettes/article.Rnw",899,1,"style","Variable and function name style should be snake_case or symbols.","X <- (left + right) / 2","object_name_linter"
"vignettes/article.Rnw",900,1,"style","Variable and function name style should be snake_case or symbols.","Y <- (right - left) / 2","object_name_linter"
"vignettes/article.Rnw",939,1,"style","Variable and function name style should be snake_case or symbols.","Land <- landscape(DiagRips[[""diagram""]], dimension = 1, KK = 1, tseq)","object_name_linter"
"vignettes/article.Rnw",940,1,"style","Variable and function name style should be snake_case or symbols.","Sil <- silhouette(DiagRips[[""diagram""]], p = 1, dimension = 1, tseq)","object_name_linter"
"vignettes/article.Rnw",975,1,"style","Variable and function name style should be snake_case or symbols.","N <- 4000","object_name_linter"
"vignettes/article.Rnw",976,1,"style","Variable and function name style should be snake_case or symbols.","XX1 <- circleUnif(N / 2)","object_name_linter"
"vignettes/article.Rnw",977,1,"style","Variable and function name style should be snake_case or symbols.","XX2 <- circleUnif(N / 2, r = 2) + 3","object_name_linter"
"vignettes/article.Rnw",978,1,"style","Variable and function name style should be snake_case or symbols.","X <- rbind(XX1, XX2)","object_name_linter"
"vignettes/article.Rnw",990,1,"style","Variable and function name style should be snake_case or symbols.","Diags <- list()","object_name_linter"
"vignettes/article.Rnw",992,1,"style","Variable and function name style should be snake_case or symbols.","Lands <- matrix(0, nrow = n, ncol = length(tseq))","object_name_linter"
"vignettes/article.Rnw",1000,3,"style","Variable and function name style should be snake_case or symbols.","  subX <- X[sample(seq_len(N), m), ]","object_name_linter"
"vignettes/article.Rnw",1001,3,"style","Variable and function name style should be snake_case or symbols.","  Diags[[i]] <- ripsDiag(subX, maxdimension = 1, maxscale = 5)","object_name_linter"
"vignettes/article.Rnw",1002,3,"style","Variable and function name style should be snake_case or symbols.","  Lands[i, ] <- landscape(Diags[[i]][[""diagram""]], dimension = 1,","object_name_linter"
"vignettes/article.Rnw",1010,1,"style","Variable and function name style should be snake_case or symbols.","bootLand <- multipBootstrap(Lands, B = 100, alpha = 0.05,","object_name_linter"
"vignettes/article.Rnw",1080,1,"style","Variable and function name style should be snake_case or symbols.","XX1 <- circleUnif(600)","object_name_linter"
"vignettes/article.Rnw",1081,1,"style","Variable and function name style should be snake_case or symbols.","XX2 <- circleUnif(1000, r = 1.5) + 2.5","object_name_linter"
"vignettes/article.Rnw",1083,1,"style","Variable and function name style should be snake_case or symbols.","X <- rbind(XX1, XX2, noise)","object_name_linter"
"vignettes/article.Rnw",1086,1,"style","Variable and function name style should be snake_case or symbols.","Xlim <- c(-2, 5)","object_name_linter"
"vignettes/article.Rnw",1087,1,"style","Variable and function name style should be snake_case or symbols.","Ylim <- c(-2, 5)","object_name_linter"
"vignettes/article.Rnw",1094,1,"style","Variable and function name style should be snake_case or symbols.","parametersKDE <- seq(0.1, 0.6, by = 0.05)","object_name_linter"
"vignettes/article.Rnw",1096,1,"style","Variable and function name style should be snake_case or symbols.","B <- 50       # number of bootstrap iterations. Should be large.","object_name_linter"
"vignettes/article.Rnw",1103,1,"style","Variable and function name style should be snake_case or symbols.","maxKDE <- maxPersistence(kde, parametersKDE, X,","object_name_linter"
"vignettes/article.Rnw",1149,1,"style","Variable and function name style should be snake_case or symbols.","X1 <- cbind(rnorm(300, 1, .8), rnorm(300, 5, 0.8))","object_name_linter"
"vignettes/article.Rnw",1150,1,"style","Variable and function name style should be snake_case or symbols.","X2 <- cbind(rnorm(300, 3.5, .8), rnorm(300, 5, 0.8))","object_name_linter"
"vignettes/article.Rnw",1151,1,"style","Variable and function name style should be snake_case or symbols.","X3 <- cbind(rnorm(300, 6, 1), rnorm(300, 1, 1))","object_name_linter"
"vignettes/article.Rnw",1152,1,"style","Variable and function name style should be snake_case or symbols.","XX <- rbind(X1, X2, X3)","object_name_linter"
"vignettes/article.Rnw",1158,1,"style","Variable and function name style should be snake_case or symbols.","Tree <- clusterTree(XX, k = 100, density = ""knn"",","object_name_linter"
"vignettes/article.Rnw",1160,1,"style","Variable and function name style should be snake_case or symbols.","TreeKDE <- clusterTree(XX, k = 100, h = 0.3, density = ""kde"",","object_name_linter"
"vignettes/article.Rnw",1183,17,"style","Commas should always have a space after.","par(mfrow = c(2,3))","commas_linter"
"vignettes/article.Rnw",1184,18,"style","Commas should always have a space after.","par(mai = c(0.25,0.35,0.3,0.3))","commas_linter"
"vignettes/article.Rnw",1184,23,"style","Commas should always have a space after.","par(mai = c(0.25,0.35,0.3,0.3))","commas_linter"
"vignettes/article.Rnw",1184,27,"style","Commas should always have a space after.","par(mai = c(0.25,0.35,0.3,0.3))","commas_linter"
"vignettes/article.Rnw",1195,1,"style","Use spaces to indent, not tabs.","	points(matrix(XX[Tree[[""DataPoints""]][[i]], ], ncol = 2), col = i,","no_tab_linter"
