"filename","line_number","column_number","type","message","line","linter"
"R/check_correctness.R",78,28,"style","There should be a space between right parenthesis and an opening curly brace.","#  if(length(test_list) > 0){","paren_brace_linter"
"R/check_correctness.R",115,33,"style","There should be a space between right parenthesis and an opening curly brace.","#  } else if(!is.null(tt_parsed)){","paren_brace_linter"
"R/count_lints.R",44,5,"style","Opening curly braces should never go on their own line and should always be followed by a new line.","    {","open_curly_linter"
"R/lang_2_tree.R",99,29,"style","There should be a space between right parenthesis and an opening curly brace.","    # if(is.null(call_name1)){","paren_brace_linter"
"R/populate_soln_env.R",141,47,"style","There should be a space between right parenthesis and an opening curly brace.","    # if("".scalars_to_keep"" %in% names(e_soln)){","paren_brace_linter"
"R/utils.R",201,37,"style","There should be a space between right parenthesis and an opening curly brace.","  #else if (length(kept_chunks) == 1){","paren_brace_linter"
"R/zzz.R",3,1,"style","Variable and function name style should be snake_case.",".onLoad <- function(libname, pkgname) {","object_name_linter"
"R/zzz.R",9,1,"style","Variable and function name style should be snake_case.",".onUnload <- function(libpath) {","object_name_linter"
"R/zzz.R",15,1,"style","Variable and function name style should be snake_case.",".onDetach <- function(libpath) {","object_name_linter"
"tests/testthat/test-02-th_constructors.R",22,43,"style","Place a space before left parenthesis, except in a function call.","slot_dollar_mix <- quote(y <- l$ll$mmm@the(x = 3))","spaces_left_parentheses_linter"
