"filename","line_number","column_number","type","message","line","linter"
"R/callbacks.R",753,1,"style","Variable and function name style should be snake_case.","format.eval.string <- function(iter, eval_res, eval_err = NULL) {","object_name_linter"
"R/xgb.Booster.R",471,1,"style","Variable and function name style should be snake_case.","predict.xgb.Booster.handle <- function(object, ...) {","object_name_linter"
"R/xgb.cv.R",278,1,"style","Variable and function name style should be snake_case.","print.xgb.cv.synchronous <- function(x, verbose = FALSE, ...) {","object_name_linter"
"R/xgb.DMatrix.R",117,1,"style","Variable and function name style should be snake_case.","dim.xgb.DMatrix <- function(x) {","object_name_linter"
"R/xgb.DMatrix.R",146,1,"style","Variable and function name style should be snake_case.","dimnames.xgb.DMatrix <- function(x) {","object_name_linter"
"R/xgb.DMatrix.R",152,1,"style","Variable and function name style should be snake_case.","`dimnames<-.xgb.DMatrix` <- function(x, value) {","object_name_linter"
"R/xgb.DMatrix.R",204,1,"style","Variable and function name style should be snake_case.","getinfo.xgb.DMatrix <- function(object, name, ...) {","object_name_linter"
"R/xgb.DMatrix.R",329,1,"style","Variable and function name style should be snake_case.","slice.xgb.DMatrix <- function(object, idxset, ...) {","object_name_linter"
"R/xgb.DMatrix.R",355,1,"style","Variable and function name style should be snake_case.","`[.xgb.DMatrix` <- function(object, idxset, colset = NULL) {","object_name_linter"
"R/xgb.DMatrix.R",378,1,"style","Variable and function name style should be snake_case.","print.xgb.DMatrix <- function(x, verbose = FALSE, ...) {","object_name_linter"
"R/xgb.ggplot.R",21,23,"style","Variable and function name style should be snake_case.","  importance_matrix[, Cluster := as.character(clusters$cluster)]","object_name_linter"
"R/xgb.model.dt.tree.R",101,16,"style","Variable and function name style should be snake_case.","  td[position, Tree := 1L]","object_name_linter"
"R/xgb.model.dt.tree.R",102,8,"style","Variable and function name style should be snake_case.","  td[, Tree := cumsum(ifelse(is.na(Tree), 0L, Tree)) - 1L]","object_name_linter"
"R/xgb.model.dt.tree.R",111,8,"style","Variable and function name style should be snake_case.","  td[, Node := as.integer(sub(""^([0-9]+):.*"", ""\\1"", t))]","object_name_linter"
"R/xgb.model.dt.tree.R",112,25,"style","Variable and function name style should be snake_case.","  if (!use_int_id) td[, ID := add.tree.id(Node, Tree)]","object_name_linter"
"R/xgb.model.dt.tree.R",113,8,"style","Variable and function name style should be snake_case.","  td[, isLeaf := grepl(""leaf"", t, fixed = TRUE)]","object_name_linter"
"R/xgb.model.dt.tree.R",143,25,"style","Variable and function name style should be snake_case.","    td[isLeaf == FALSE, Feature := feature_names[as.numeric(Feature) + 1]]","object_name_linter"
"R/xgb.model.dt.tree.R",171,8,"style","Variable and function name style should be snake_case.","  td[, isLeaf := NULL]","object_name_linter"
"R/xgb.plot.deepness.R",130,25,"style","Variable and function name style should be snake_case.","  dt_edges[is.na(Leaf), Leaf := FALSE]","object_name_linter"
"R/xgb.plot.importance.R",95,25,"style","Variable and function name style should be snake_case.","    importance_matrix[, Importance := Importance / max(abs(Importance))]","object_name_linter"
"R/xgb.plot.multi.trees.R",71,35,"style","Variable and function name style should be snake_case.","  tree.matrix[ID %in% root.nodes, abs.node.position := root.nodes]","object_name_linter"
"R/xgb.plot.multi.trees.R",86,28,"style","Variable and function name style should be snake_case.","  tree.matrix[!is.na(Yes), Yes := paste0(abs.node.position, ""_0"")]","object_name_linter"
"R/xgb.plot.multi.trees.R",87,27,"style","Variable and function name style should be snake_case.","  tree.matrix[!is.na(No), No := paste0(abs.node.position, ""_1"")]","object_name_linter"
"R/xgb.plot.multi.trees.R",116,14,"style","Variable and function name style should be snake_case.","  edges.dt[, N := NULL]","object_name_linter"
"tests/testthat/test_callbacks.R",262,11,"style","Variable and function name style should be snake_case.","  titanic$Pclass <-  as.factor(titanic$Pclass)","object_name_linter"
"tests/testthat/test_helpers.R",17,6,"style","Variable and function name style should be snake_case.","df[, AgeDiscret := as.factor(round(Age / 10, 0))]","object_name_linter"
"tests/testthat/test_helpers.R",18,6,"style","Variable and function name style should be snake_case.","df[, AgeCat := as.factor(ifelse(Age > 30, ""Old"", ""Young""))]","object_name_linter"
"tests/testthat/test_helpers.R",19,6,"style","Variable and function name style should be snake_case.","df[, ID := NULL]","object_name_linter"
