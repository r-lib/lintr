"filename","line_number","column_number","type","message","line","linter"
"inst/test-cases/data-na.R",50,13,"style","Variable and function name style should be snake_case.","testData2[, Value := replace(Value, .GRP %% M + 1L, NA), by = Id]","object_name_linter"
"R/data.R",168,13,"style","Variable and function name style should be snake_case.","  alldata[, Mu.class := rowSums(Xc * t(clusterCoefs)[Class, ])]","object_name_linter"
"R/data.R",191,15,"style","Variable and function name style should be snake_case.","    alldata[, Mu.random := rowSums(Xr * idCoefs[Id, ])]","object_name_linter"
"R/data.R",193,15,"style","Variable and function name style should be snake_case.","    alldata[, Mu := Mu.fixed + Mu.class + Mu.random]","object_name_linter"
"R/data.R",195,15,"style","Variable and function name style should be snake_case.","    alldata[, Mu := Mu.fixed + Mu.class]","object_name_linter"
"R/data.R",205,13,"style","Variable and function name style should be snake_case.","  alldata[, Value := Mu + rnoise(.N, 0, noiseScales[Class])]","object_name_linter"
"R/data.R",215,13,"style","Variable and function name style should be snake_case.","  alldata[, Class := factor(clusterNames[Class], levels = clusterNames)]","object_name_linter"
"R/matrix.R",161,10,"style","Variable and function name style should be snake_case.","    dt[, .Fill := FALSE]","object_name_linter"
"R/matrix.R",166,10,"style","Variable and function name style should be snake_case.","    dt[, .Fill := NULL]","object_name_linter"
"R/methodStratify.R",216,11,"style","Variable and function name style should be snake_case.","    out[, Cluster := as.integer(Cluster) + 1L]","object_name_linter"
"R/model.R",948,15,"style","Variable and function name style should be snake_case.","    newdata[, Cluster := factor(Cluster, levels = clusterNames(object))]","object_name_linter"
"R/model.R",961,38,"style","Variable and function name style should be snake_case.","      lapply(function(cdata) cdata[, Cluster := NULL])","object_name_linter"
"R/model.R",1289,15,"style","Variable and function name style should be snake_case.","    rawdata[, Cluster := trajAssignments[make.idRowIndices(object)]]","object_name_linter"
"R/modelCustom.R",197,19,"style","Place a space before left parenthesis, except in a function call.","    object@predict(object, newdata, what, ...)","spaces_left_parentheses_linter"
"R/modelCustom.R",228,11,"style","Variable and function name style should be snake_case.","      .[, Cluster := factor(Cluster,","object_name_linter"
"R/modelLcmmGMM.R",22,37,"style","Variable and function name style should be snake_case.","  dataIndex[object@model$na.action, Include := FALSE]","object_name_linter"
"R/modelMixtoolsRM.R",57,11,"style","Variable and function name style should be snake_case.","      .[, Time := times[.Block]] %>%","object_name_linter"
"R/modelMixtoolsRM.R",59,11,"style","Variable and function name style should be snake_case.","      .[, .Component := NULL] %>%","object_name_linter"
"R/modelMixtoolsRM.R",60,11,"style","Variable and function name style should be snake_case.","      .[, .Block := NULL] %>%","object_name_linter"
"R/models.R",515,9,"style","Variable and function name style should be snake_case.","    .[, .ROW_INDEX := .I] %>%","object_name_linter"
"R/test.R",74,10,"style","Variable and function name style should be snake_case.","  data[, Id := as.character(Id)]","object_name_linter"
"R/test.R",75,10,"style","Variable and function name style should be snake_case.","  data[, Cluster := as.character(Cluster)]","object_name_linter"
"tests/testthat/setup-data.R",22,7,"style","Variable and function name style should be snake_case.","  .[, Constant := 1] %>%","object_name_linter"
"tests/testthat/setup-data.R",23,7,"style","Variable and function name style should be snake_case.","  .[, Cluster := Class]","object_name_linter"
"tests/testthat/test-akmedoids.R",24,12,"style","Variable and function name style should be snake_case.","trajData[, Cluster := LETTERS[as.integer(Id) %% 3 + 1]]","object_name_linter"
"tests/testthat/test-assert.R",197,32,"style","Variable and function name style should be snake_case.","    .[Traj == unique(Traj)[2], Value := NA]","object_name_linter"
"tests/testthat/test-cluslong.R",111,23,"style","Variable and function name style should be snake_case.","    .[sample(.N, 10), Traj := NA]","object_name_linter"
"tests/testthat/test-cluslong.R",118,9,"style","Variable and function name style should be snake_case.","    .[, Traj := factor(Traj)]","object_name_linter"
"tests/testthat/test-cluslong.R",128,9,"style","Variable and function name style should be snake_case.","    .[, Traj := factor(Traj, levels = rev(unique(Traj)))]","object_name_linter"
"tests/testthat/test-cluslong.R",138,9,"style","Variable and function name style should be snake_case.","    .[, Traj := factor(Traj, levels = seq(0, uniqueN(Traj) + 1))]","object_name_linter"
"tests/testthat/test-cluslong.R",147,18,"style","Variable and function name style should be snake_case.","    .[Traj == 1, Traj := NA]","object_name_linter"
"tests/testthat/test-cluslong.R",165,23,"style","Variable and function name style should be snake_case.","    .[sample(.N, 10), Value := NA]","object_name_linter"
"tests/testthat/test-cluslong.R",175,23,"style","Variable and function name style should be snake_case.","    .[sample(.N, 10), Value := Inf]","object_name_linter"
"tests/testthat/test-crimcv.R",32,7,"style","Variable and function name style should be snake_case.","  .[, Cluster := rep(LETTERS[1:3], each = 33 * ncol(subTO1adj))]","object_name_linter"
