"filename","line_number","column_number","type","message","line","linter"
"data-raw/devstuffs.R",11,79,"style","Only use double-quotes.","  person(""Lorenz A."", ""Kapsner"", email = ""lorenz.kapsner@gmail.com"", role = c('cre', 'aut', 'cph'),","single_quotes_linter"
"data-raw/devstuffs.R",11,81,"style","Lines should not be more than 80 characters.","  person(""Lorenz A."", ""Kapsner"", email = ""lorenz.kapsner@gmail.com"", role = c('cre', 'aut', 'cph'),","line_length_linter"
"data-raw/devstuffs.R",11,86,"style","Only use double-quotes.","  person(""Lorenz A."", ""Kapsner"", email = ""lorenz.kapsner@gmail.com"", role = c('cre', 'aut', 'cph'),","single_quotes_linter"
"data-raw/devstuffs.R",11,93,"style","Only use double-quotes.","  person(""Lorenz A."", ""Kapsner"", email = ""lorenz.kapsner@gmail.com"", role = c('cre', 'aut', 'cph'),","single_quotes_linter"
"data-raw/devstuffs.R",43,2,"style","Commented code should be removed.","#usethis::use_gpl3_license(name=""Lorenz Kapsner"")","commented_code_linter"
"data-raw/devstuffs.R",46,53,"style","Put spaces around all infix operators.","usethis::use_package(""R"", min_version = ""2.10"", type=""Depends"")","infix_spaces_linter"
"data-raw/devstuffs.R",49,81,"style","Lines should not be more than 80 characters.","# https://cran.r-project.org/web/packages/data.table/vignettes/datatable-importing.html","line_length_linter"
"data-raw/devstuffs.R",50,40,"style","Put spaces around all infix operators.","usethis::use_package(""data.table"", type=""Imports"")","infix_spaces_linter"
"data-raw/devstuffs.R",51,37,"style","Put spaces around all infix operators.","usethis::use_package(""ggplot2"", type=""Imports"")","infix_spaces_linter"
"data-raw/devstuffs.R",52,38,"style","Put spaces around all infix operators.","usethis::use_package(""magrittr"", type=""Imports"")","infix_spaces_linter"
"data-raw/devstuffs.R",53,37,"style","Put spaces around all infix operators.","usethis::use_package(""polynom"", type=""Imports"")","infix_spaces_linter"
"data-raw/devstuffs.R",54,34,"style","Put spaces around all infix operators.","usethis::use_package(""nls2"", type=""Imports"")","infix_spaces_linter"
"data-raw/devstuffs.R",55,35,"style","Put spaces around all infix operators.","usethis::use_package(""stats"", type=""Imports"")","infix_spaces_linter"
"data-raw/devstuffs.R",56,42,"style","Put spaces around all infix operators.","usethis::use_package(""future.apply"", type=""Imports"")","infix_spaces_linter"
"data-raw/devstuffs.R",66,36,"style","Put spaces around all infix operators.","usethis::use_package(""ggpubr"", type=""Suggests"")","infix_spaces_linter"
"data-raw/devstuffs.R",70,3,"style","Commented code should be removed.","# tag <- ""master""","commented_code_linter"
"data-raw/devstuffs.R",71,3,"style","Commented code should be removed.","# devtools::install_github(repo = ""r-lib/testthat"", ref = tag, upgrade = ""always"")","commented_code_linter"
"data-raw/devstuffs.R",71,81,"style","Lines should not be more than 80 characters.","# devtools::install_github(repo = ""r-lib/testthat"", ref = tag, upgrade = ""always"")","line_length_linter"
"data-raw/devstuffs.R",72,3,"style","Commented code should be removed.","# # https://cran.r-project.org/web/packages/devtools/vignettes/dependencies.html","commented_code_linter"
"data-raw/devstuffs.R",73,3,"style","Commented code should be removed.","# desc::desc_set_remotes(paste0(""github::r-lib/testthat@"", tag), file = usethis::proj_get())","commented_code_linter"
"data-raw/devstuffs.R",73,81,"style","Lines should not be more than 80 characters.","# desc::desc_set_remotes(paste0(""github::r-lib/testthat@"", tag), file = usethis::proj_get())","line_length_linter"
"data-raw/devstuffs.R",133,3,"style","Commented code should be removed.","# experimental = ""../19_PCR-bias/data/example_data/type1/example_data_type1_experimentaldata.csv""","commented_code_linter"
"data-raw/devstuffs.R",133,81,"style","Lines should not be more than 80 characters.","# experimental = ""../19_PCR-bias/data/example_data/type1/example_data_type1_experimentaldata.csv""","line_length_linter"
"data-raw/devstuffs.R",134,3,"style","Commented code should be removed.","# calibration = ""../19_PCR-bias/data/example_data/type1/example_data_type1_calibrationdata.csv""","commented_code_linter"
"data-raw/devstuffs.R",134,81,"style","Lines should not be more than 80 characters.","# calibration = ""../19_PCR-bias/data/example_data/type1/example_data_type1_calibrationdata.csv""","line_length_linter"
"data-raw/devstuffs.R",136,1,"style","Variable and function name style should be snake_case or symbols.","example.data_experimental <- data.table::fread(""./tests/testthat/testdata/exp_type_1.csv"")","object_name_linter"
"data-raw/devstuffs.R",136,81,"style","Lines should not be more than 80 characters.","example.data_experimental <- data.table::fread(""./tests/testthat/testdata/exp_type_1.csv"")","line_length_linter"
"data-raw/devstuffs.R",137,1,"style","Variable and function name style should be snake_case or symbols.","example.data_calibration <- data.table::fread(""./tests/testthat/testdata/cal_type_1.csv"")","object_name_linter"
"data-raw/devstuffs.R",137,81,"style","Lines should not be more than 80 characters.","example.data_calibration <- data.table::fread(""./tests/testthat/testdata/cal_type_1.csv"")","line_length_linter"
"data-raw/devstuffs.R",139,3,"style","Commented code should be removed.","# vec <- colnames(example.data_experimental)","commented_code_linter"
"data-raw/devstuffs.R",140,3,"style","Commented code should be removed.","# vec <- vec[2:length(vec)]","commented_code_linter"
"data-raw/devstuffs.R",142,5,"style","Commented code should be removed.","#   as.numeric(gsub(""\\,"", ""."", x))","commented_code_linter"
"data-raw/devstuffs.R",145,3,"style","Commented code should be removed.","# data.table::fwrite(example.data_experimental, ""./tests/testthat/testdata/exp_type_1.csv"")","commented_code_linter"
"data-raw/devstuffs.R",145,81,"style","Lines should not be more than 80 characters.","# data.table::fwrite(example.data_experimental, ""./tests/testthat/testdata/exp_type_1.csv"")","line_length_linter"
"data-raw/devstuffs.R",147,3,"style","Commented code should be removed.","# vec <- colnames(example.data_calibration)","commented_code_linter"
"data-raw/devstuffs.R",149,5,"style","Commented code should be removed.","#   as.numeric(gsub(""\\,"", ""."", x))","commented_code_linter"
"data-raw/devstuffs.R",152,3,"style","Commented code should be removed.","# data.table::fwrite(example.data_calibration, ""./tests/testthat/testdata/cal_type_1.csv"")","commented_code_linter"
"data-raw/devstuffs.R",152,81,"style","Lines should not be more than 80 characters.","# data.table::fwrite(example.data_calibration, ""./tests/testthat/testdata/cal_type_1.csv"")","line_length_linter"
"data-raw/devstuffs.R",154,1,"style","Variable and function name style should be snake_case or symbols.","example.data_experimental <- rBiasCorrection::clean_dt(example.data_experimental,","object_name_linter"
"data-raw/devstuffs.R",154,81,"style","Lines should not be more than 80 characters.","example.data_experimental <- rBiasCorrection::clean_dt(example.data_experimental,","line_length_linter"
"data-raw/devstuffs.R",158,1,"style","Variable and function name style should be snake_case or symbols.","example.data_calibration <- rBiasCorrection::clean_dt(example.data_calibration,","object_name_linter"
"data-raw/devstuffs.R",164,1,"style","Variable and function name style should be snake_case or symbols.","example._plot.df_agg <- rBiasCorrection:::create_agg_df(","object_name_linter"
"data-raw/devstuffs.R",171,31,"style","Use FALSE instead of the symbol F.","                  internal = F,","T_and_F_symbol_linter"
"data-raw/devstuffs.R",172,32,"style","Use FALSE instead of the symbol F.","                  overwrite = F)","T_and_F_symbol_linter"
"data-raw/devstuffs.R",175,3,"style","Commented code should be removed.","# BiasCorrection(experimental = ""../19_PCR-bias/data/example_data/type1/example_data_type1_experimentaldata.csv"", calibration = ""../19_PCR-bias/data/example_data/type1/example_data_type1_calibrationdata.csv"", samplelocusname = ""Test"")","commented_code_linter"
"data-raw/devstuffs.R",175,81,"style","Lines should not be more than 80 characters.","# BiasCorrection(experimental = ""../19_PCR-bias/data/example_data/type1/example_data_type1_experimentaldata.csv"", calibration = ""../19_PCR-bias/data/example_data/type1/example_data_type1_calibrationdata.csv"", samplelocusname = ""Test"")","line_length_linter"
"data-raw/devstuffs.R",176,2,"style","Commented code should be removed.","#covr::package_coverage()","commented_code_linter"
"data-raw/devstuffs.R",177,2,"style","Commented code should be removed.","#lintr::lint_package()","commented_code_linter"
"data-raw/devstuffs.R",178,2,"style","Commented code should be removed.","#styler::style_pkg()","commented_code_linter"
"R/better_model.R",106,55,"style","Use FALSE instead of the symbol F.","                                ""SSE_cubic""), with = F]","T_and_F_symbol_linter"
"R/better_model.R",113,80,"style","Use FALSE instead of the symbol F.","    x_dat <- statstable_post_hyperbolic[, c(""Name"", ""relative_error""), with = F]","T_and_F_symbol_linter"
"R/better_model.R",115,75,"style","Use FALSE instead of the symbol F.","    y_dat <- statstable_post_cubic[, c(""Name"", ""relative_error""), with = F]","T_and_F_symbol_linter"
"R/better_model.R",119,28,"style","Use TRUE instead of the symbol T.","                    all = T,","T_and_F_symbol_linter"
"R/biascorrection.R",178,49,"style","Use TRUE instead of the symbol T.","      data.table::fread(experimental, header = T),","T_and_F_symbol_linter"
"R/biascorrection.R",188,69,"style","Use TRUE instead of the symbol T.","    cal_type_1 <- clean_dt(data.table::fread(calibration, header = T),","T_and_F_symbol_linter"
"R/biascorrection.R",278,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"R/biascorrection.R",376,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"R/biascorrection.R",485,60,"style","Use FALSE instead of the symbol F.","      rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"R/biascorrection.R",490,60,"style","Use FALSE instead of the symbol F.","      rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"R/clean_dt.R",125,36,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (description == ""calibration"" & type == ""1"") {","vector_logic_linter"
"R/clean_dt.R",153,60,"style","Use TRUE instead of the symbol T.","  datatable <- datatable[rowSums(datatable[, -1], na.rm = T) != 0, ]","T_and_F_symbol_linter"
"R/clean_dt.R",161,34,"style","Use FALSE instead of the symbol F.","    datatable[, vec_cal, with = F], na.rm = T","T_and_F_symbol_linter"
"R/clean_dt.R",161,46,"style","Use TRUE instead of the symbol T.","    datatable[, vec_cal, with = F], na.rm = T","T_and_F_symbol_linter"
"R/clean_dt.R",173,43,"style","Use FALSE instead of the symbol F.","      !is.na(datatable[, vec[-1], with = F])","T_and_F_symbol_linter"
"R/clean_dt.R",193,68,"style","Use TRUE instead of the symbol T.","      datatable <- datatable[order(get(""CpG_count""), decreasing = T)]","T_and_F_symbol_linter"
"R/create_agg_df.R",20,59,"style","Use FALSE instead of the symbol F.","  df <- datatable[, c(""true_methylation"", index), with = F]","T_and_F_symbol_linter"
"R/create_agg_df.R",32,41,"style","Use TRUE instead of the symbol T.","      ""CpG"" = mean(get(""CpG""), na.rm = T),","T_and_F_symbol_linter"
"R/create_agg_df.R",33,45,"style","Use TRUE instead of the symbol T.","      ""sd"" = stats::sd(get(""CpG""), na.rm = T)","T_and_F_symbol_linter"
"R/create_agg_df.R",50,54,"style","Use FALSE instead of the symbol F.","    df <- datatable[, c(""sample_id"", index), with = F]","T_and_F_symbol_linter"
"R/create_agg_df.R",56,43,"style","Use TRUE instead of the symbol T.","        ""CpG"" = mean(get(""CpG""), na.rm = T),","T_and_F_symbol_linter"
"R/create_agg_df.R",57,47,"style","Use TRUE instead of the symbol T.","        ""sd"" = stats::sd(get(""CpG""), na.rm = T)","T_and_F_symbol_linter"
"R/create_agg_df.R",62,53,"style","Use FALSE instead of the symbol F.","    df <- datatable[, c(""locus_id"", index), with = F]","T_and_F_symbol_linter"
"R/create_agg_df.R",67,43,"style","Use TRUE instead of the symbol T.","        ""CpG"" = mean(get(""CpG""), na.rm = T),","T_and_F_symbol_linter"
"R/create_agg_df.R",68,47,"style","Use TRUE instead of the symbol T.","        ""sd"" = stats::sd(get(""CpG""), na.rm = T)","T_and_F_symbol_linter"
"R/create_exampleplot.R",90,16,"style","Use FALSE instead of the symbol F.","      parse = F","T_and_F_symbol_linter"
"R/createbarerrorplots.R",155,70,"style","Use FALSE instead of the symbol F.","  stats_pre <- statstable_pre[, c(""Name"", ""relative_error""), with = F]","T_and_F_symbol_linter"
"R/createbarerrorplots.R",156,72,"style","Use FALSE instead of the symbol F.","  stats_post <- statstable_post[, c(""Name"", ""relative_error""), with = F]","T_and_F_symbol_linter"
"R/createbarerrorplots.R",170,13,"style","Use FALSE instead of the symbol F.","    sort = F,","T_and_F_symbol_linter"
"R/cubic.R",129,7,"warning","local variable ‘ret’ assigned but may not be used","      ret <- nls2::nls2(CpG ~ cubic_eq_minmax(","object_usage_linter"
"R/cubic.R",171,62,"style","Use TRUE instead of the symbol T.","  sse <- as.numeric(dat[, sum(get(""squared_error""), na.rm = T)])","T_and_F_symbol_linter"
"R/cubic.R",177,66,"style","Use TRUE instead of the symbol T.","  tss <- as.numeric(dat[, sum(get(""squared_dist_mean""), na.rm = T)])","T_and_F_symbol_linter"
"R/hyperbolic.R",118,7,"warning","local variable ‘ret’ assigned but may not be used","      ret <- nls2::nls2(CpG ~ hyperbolic_eq(","object_usage_linter"
"R/hyperbolic.R",231,7,"warning","local variable ‘ret’ assigned but may not be used","      ret <- nls2::nls2(CpG ~ hyperbolic_eq_minmax(","object_usage_linter"
"R/hyperbolic.R",271,62,"style","Use TRUE instead of the symbol T.","  sse <- as.numeric(dat[, sum(get(""squared_error""), na.rm = T)])","T_and_F_symbol_linter"
"R/hyperbolic.R",277,66,"style","Use TRUE instead of the symbol T.","  tss <- as.numeric(dat[, sum(get(""squared_dist_mean""), na.rm = T)])","T_and_F_symbol_linter"
"R/hyperbolic.R",282,60,"style","Use TRUE instead of the symbol T.","                    , mean(get(""relative_error""), na.rm = T)],","T_and_F_symbol_linter"
"R/solving_equations.R",208,34,"warning","Conditional expressions require scalar logical operators (&& and ||)","            if (find_x[[k]] >= 0 & find_x[[k]] <= 100) {","vector_logic_linter"
"R/solving_equations.R",377,25,"warning","Conditional expressions require scalar logical operators (&& and ||)","        if (h_solv >= 0 & h_solv <= 100) {","vector_logic_linter"
"R/solving_equations.R",392,26,"warning","Conditional expressions require scalar logical operators (&& and ||)","          if (h_solv < 0 & h_solv > -10) {","vector_logic_linter"
"R/solving_equations.R",402,35,"warning","Conditional expressions require scalar logical operators (&& and ||)","          } else if (h_solv > 100 & h_solv < 110) {","vector_logic_linter"
"R/utils.R",118,32,"style","Use TRUE instead of the symbol T.","  unlink(plotdir, recursive = T)","T_and_F_symbol_linter"
"R/utils.R",120,31,"style","Use TRUE instead of the symbol T.","  unlink(csvdir, recursive = T)","T_and_F_symbol_linter"
"R/utils.R",149,52,"style","Use TRUE instead of the symbol T.","  write(message_out, file = logfilename, append = T)","T_and_F_symbol_linter"
"R/utils.R",178,42,"style","Use FALSE instead of the symbol F.","                            row.names = F,","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_FALSE_re.R",71,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_FALSE_re.R",106,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_FALSE.R",194,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_FALSE.R",276,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_TRUE_re.R",71,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_TRUE_re.R",106,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_TRUE.R",188,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-algorithm_minmax_TRUE.R",265,58,"style","Use FALSE instead of the symbol F.","    rv$choices_list <- rv$reg_stats[, c(""Name""), with = F","T_and_F_symbol_linter"
"tests/testthat/test-clean_dt.R",27,74,"style","Use TRUE instead of the symbol T.","    exp_type_1 <- fread(""./testdata/exp_type_1_empty_col.csv"", header = T)","T_and_F_symbol_linter"
"tests/testthat/test-clean_dt.R",75,74,"style","Use TRUE instead of the symbol T.","    exp_type_2 <- fread(""./testdata/exp_type_2_empty_col.csv"", header = T)","T_and_F_symbol_linter"
"vignettes/rBiasCorrection_howto.Rmd",55,77,"style","Use FALSE instead of the symbol F.","temp_file <- rBiasCorrection::example.data_experimental$dat[, cols, with = F]","T_and_F_symbol_linter"
"vignettes/rBiasCorrection_howto.Rmd",58,76,"style","Use FALSE instead of the symbol F.","temp_file <- rBiasCorrection::example.data_calibration$dat[, cols, with = F]","T_and_F_symbol_linter"
"vignettes/rBiasCorrection_howto.Rmd",165,81,"style","Lines should not be more than 80 characters.","filename <- list.files(csvdir)[grepl(""regression_stats_[[:digit:]]"", list.files(csvdir))]","line_length_linter"
"vignettes/rBiasCorrection_howto.Rmd",167,25,"style","Commas should always have a space after.","knitr::kable(reg_stats[,1:9])","commas_linter"
"vignettes/rBiasCorrection_howto.Rmd",168,25,"style","Commas should always have a space after.","knitr::kable(reg_stats[,11:16])","commas_linter"
