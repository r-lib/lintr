"filename","line_number","column_number","type","message","line","linter"
"inst/benchmarks/bench-cutOff.R",18,10,"style","Variable and function name style should be snake_case or symbols.","rownames(testDataFrame) <- paste0(""row_"",  1:100000)","object_name_linter"
"inst/benchmarks/bench-discretise.R",16,25,"style","Put spaces around all infix operators.","system.time(Discretize(y~x))","infix_spaces_linter"
"inst/benchmarks/bench-discretise.R",19,55,"style","Put spaces around all infix operators.","all(fs_discretize(x, y) + 1 == as.numeric(Discretize(y~x)[, 1]))","infix_spaces_linter"
"inst/benchmarks/bench-discretise.R",21,44,"style","Put spaces around all infix operators.","microbenchmark::microbenchmark(Discretize(y~x), fs_discretize(x, y))","infix_spaces_linter"
"R/discretize_transform.R",71,14,"style","Variable and function name style should be snake_case or symbols.","  attr(data, ""fsSplitPointsList"") <- splitPoints","object_name_linter"
"R/discretize_transform.R",99,7,"style","Any function spanning multiple lines should use curly braces.","      function(x, y)","brace_linter"
"R/discretize.R",136,17,"style","Variable and function name style should be snake_case or symbols.","      attr(res, ""SplitValues"") <- control$breaks","object_name_linter"
"R/discretize.R",155,7,"style","Variable and function name style should be snake_case or symbols.","      splitPointsList[[col]] <- splitVals","object_name_linter"
"R/discretize.R",164,7,"style","Variable and function name style should be snake_case or symbols.","      splitPointsList[[col]] <- NA","object_name_linter"
"R/discretize.R",174,14,"style","Variable and function name style should be snake_case or symbols.","  attr(data, ""fsSplitPointsList"") <- c(","object_name_linter"
"R/utils.R",154,5,"style","Variable and function name style should be snake_case or symbols.","    toSub[withBrackets] <- gsub(pattern = ""]]"", replacement = """",","object_name_linter"
"R/utils.R",156,5,"style","Variable and function name style should be snake_case or symbols.","    toSub[withBrackets] <- strsplit(x = toSub[withBrackets], split = ""[["",","object_name_linter"
"R/utils.R",158,5,"style","Variable and function name style should be snake_case or symbols.","    toSub[withBrackets] <- lapply(toSub[withBrackets], get_colname)","object_name_linter"
"R/utils.R",159,5,"style","Variable and function name style should be snake_case or symbols.","    toSub[-withBrackets] <- gsub(pattern = "".*\\$"", replacement = """",","object_name_linter"
"tests/testthat/test-cutoff.R",9,14,"style","Variable and function name style should be snake_case or symbols.","    rownames(testDataFrame) <- testDataFrame[[1]]","object_name_linter"
"tests/testthat/test-discretize.R",264,28,"style","Put spaces around all infix operators.","  expect_error(discretize(y~., dt, discIntegers = FALSE))","infix_spaces_linter"
"tests/testthat/test-na.R",11,5,"style","Variable and function name style should be snake_case or symbols.","    dtIris[1, 1] <- NA","object_name_linter"
"tests/testthat/test-na.R",12,5,"style","Variable and function name style should be snake_case or symbols.","    dtIris[2, 2] <- NA","object_name_linter"
"tests/testthat/test-na.R",13,5,"style","Variable and function name style should be snake_case or symbols.","    dtIris[3, 5] <- NA","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",18,1,"style","Variable and function name style should be snake_case or symbols.","is.pkg <- all(c(""RTCGA.rnaseq"", ""microbenchmark"", ""RWeka"", ""pkgdown"") %in% rownames(installed.packages()))","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",19,3,"style","Place a space before left parenthesis, except in a function call.","if(!is.pkg) {","spaces_left_parentheses_linter"
"vignettes/benchmarks_discretize.Rmd",23,3,"style","Place a space before left parenthesis, except in a function call.","if(is.pkg && !pkgdown::in_pkgdown()) {","spaces_left_parentheses_linter"
"vignettes/benchmarks_discretize.Rmd",24,3,"style","Variable and function name style should be snake_case or symbols.","  is.pkg <- FALSE","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",28,20,"style","Trailing whitespace is superfluous.","    paste(sep = """", ","trailing_whitespace_linter"
"vignettes/benchmarks_discretize.Rmd",39,1,"style","Variable and function name style should be snake_case or symbols.","fig.path <- if(pkgdown::in_pkgdown()) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",39,15,"style","Place a space before left parenthesis, except in a function call.","fig.path <- if(pkgdown::in_pkgdown()) {","spaces_left_parentheses_linter"
"vignettes/benchmarks_discretize.Rmd",47,19,"style","Trailing whitespace is superfluous.","    fig.width = 8, ","trailing_whitespace_linter"
"vignettes/benchmarks_discretize.Rmd",102,1,"style","Variable and function name style should be snake_case or symbols.","BRCA.rnaseq <- RTCGA.rnaseq::BRCA.rnaseq","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",103,1,"style","Variable and function name style should be snake_case or symbols.","BRCA.rnaseq$bcr_patient_barcode <- ","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",103,35,"style","Trailing whitespace is superfluous.","BRCA.rnaseq$bcr_patient_barcode <- ","trailing_whitespace_linter"
"vignettes/benchmarks_discretize.Rmd",105,7,"style","Variable and function name style should be snake_case or symbols.","names(BRCA.rnaseq) <- gsub(pattern = ""?"", replacement = ""q"",","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",107,7,"style","Variable and function name style should be snake_case or symbols.","names(BRCA.rnaseq) <- gsub(pattern = ""[[:punct:]]"", replacement = ""_"",","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",122,22,"style","Variable and function name style should be snake_case or symbols.","names_by <- function(nameBy, vecBy) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",122,30,"style","Variable and function name style should be snake_case or symbols.","names_by <- function(nameBy, vecBy) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",127,22,"style","Trailing whitespace is superfluous.","                  }), ","trailing_whitespace_linter"
"vignettes/benchmarks_discretize.Rmd",131,28,"style","Variable and function name style should be snake_case or symbols.","get_times <- function(fun, vecRows, vecCols, nTimes) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",131,37,"style","Variable and function name style should be snake_case or symbols.","get_times <- function(fun, vecRows, vecCols, nTimes) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",131,46,"style","Variable and function name style should be snake_case or symbols.","get_times <- function(fun, vecRows, vecCols, nTimes) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",132,3,"style","Variable and function name style should be snake_case or symbols.","  forRows <- pblapply(vecRows, function(nRows) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",132,41,"style","Variable and function name style should be snake_case or symbols.","  forRows <- pblapply(vecRows, function(nRows) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",133,5,"style","Variable and function name style should be snake_case or symbols.","    forCols <- pblapply(vecCols + 1, function(nCols) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",133,47,"style","Variable and function name style should be snake_case or symbols.","    forCols <- pblapply(vecCols + 1, function(nCols) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",138,5,"style","Variable and function name style should be snake_case or symbols.","    colsNames <- names_by(nameBy = ""columns_"", vecBy = vecCols)","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",141,3,"style","Variable and function name style should be snake_case or symbols.","  rowsNames <- names_by(nameBy = ""rows_"", vecBy = vecRows)","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",167,18,"style","Variable and function name style should be snake_case or symbols.","        function(setOfCols) {","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",195,3,"style","Variable and function name style should be snake_case or symbols.","  yUnit <- gsub(pattern = ""time"",","object_name_linter"
"vignettes/benchmarks_discretize.Rmd",198,1,"style","Trailing whitespace is superfluous.","  ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",38,18,"style","Only use double-quotes.","install.packages('FSelectorRcpp') # stable release version on CRAN","single_quotes_linter"
"vignettes/get_started.Rmd",39,26,"style","Only use double-quotes.","devtools::install_github('mi2-warsaw/FSelectorRcpp') # dev version","single_quotes_linter"
"vignettes/get_started.Rmd",70,8,"style","Trailing whitespace is superfluous.","  ) %>%                          ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",73,8,"style","Trailing whitespace is superfluous.","  ) %>%                         ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",74,67,"style","Trailing whitespace is superfluous.","  to_formula(                   # Create a new formula object with ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",76,22,"style","Trailing whitespace is superfluous.","    class = ""Species""           ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",80,17,"style","Trailing whitespace is superfluous.","    data = iris,                ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",81,24,"style","Trailing whitespace is superfluous.","    family = ""binomial""         ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",83,1,"style","Trailing whitespace is superfluous.","  ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",89,1,"style","Variable and function name style should be snake_case or symbols.","evaluator_R2_lm <-    # Create a scorer function.","object_name_linter"
"vignettes/get_started.Rmd",93,16,"style","Trailing whitespace is superfluous.","    dependent = ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",98,78,"style","Trailing whitespace is superfluous.","        to_formula(   # This is the score to use to choose between considered ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",107,15,"style","Trailing whitespace is superfluous.","  attributes = ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",109,87,"style","Trailing whitespace is superfluous.","  fun = evaluator_R2_lm, # And it calculates the score of a subset that depends on the ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",111,68,"style","Trailing whitespace is superfluous.","  mode = ""exhaustive"",   # exhaustive - means to check all possible ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",112,59,"style","Trailing whitespace is superfluous.","  sizes =                # attributes' subset combinations ","trailing_whitespace_linter"
"vignettes/get_started.Rmd",113,5,"warning","1:length(...) is likely to be wrong in the empty edge case. Use seq_along() instead.","    1:length(attributes) # of sizes passed in sizes.","seq_linter"
"vignettes/integer-variables.Rmd",63,1,"style","Trailing whitespace is superfluous.","  ","trailing_whitespace_linter"
"vignettes/integer-variables.Rmd",70,35,"style","Commas should always have a space after.","can_discretize(as.integer(c(rep(1,10), rep(2, 10))))","commas_linter"
"vignettes/integer-variables.Rmd",78,26,"style","Commas should always have a space after.","  z = as.integer(c(rep(1,10), rep(2, 10)))","commas_linter"
