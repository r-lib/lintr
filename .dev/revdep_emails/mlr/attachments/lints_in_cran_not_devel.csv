"filename","line_number","column_number","type","message","line","linter"
"R/analyzeFeatSelResult.R",49,6,"style","Variable and function name style should be snake_case or CamelCase.","  df$n.feats = rowSums(df[, features, drop = FALSE])","object_name_linter"
"R/BaggingWrapper.R",50,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$bw.iters = bw.iters","object_name_linter"
"R/BaggingWrapper.R",54,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$bw.replace = bw.replace","object_name_linter"
"R/BaggingWrapper.R",58,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$bw.size = bw.size","object_name_linter"
"R/BaggingWrapper.R",62,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$bw.feats = bw.feats","object_name_linter"
"R/BaseEnsemble_operators.R",69,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$base.learners = lapply(lrn$base.learners, setPredictType, predict.type = predict.type)","object_name_linter"
"R/BaseEnsemble.R",66,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$base.learners = setNames(base.learners, ids)","object_name_linter"
"R/BaseEnsemble.R",67,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$par.set.bls = par.set.bls","object_name_linter"
"R/BaseEnsemble.R",68,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$par.set.ens = par.set","object_name_linter"
"R/BaseWrapper_operators.R",2,1,"style","Variable and function name style should be snake_case or CamelCase.","getParamSet.BaseWrapper = function(x) {","object_name_linter"
"R/BaseWrapper.R",41,11,"style","Variable and function name style should be snake_case or CamelCase.","  learner$fix.factors.prediction = FALSE","object_name_linter"
"R/BaseWrapper.R",43,11,"style","Variable and function name style should be snake_case or CamelCase.","  learner$model.subclass = model.subclass","object_name_linter"
"R/BenchmarkResultOrderLevels.R",11,8,"style","Variable and function name style should be snake_case or CamelCase.","    df$task.id = factor(df$task.id, order.tsks)","object_name_linter"
"R/BenchmarkResultOrderLevels.R",26,8,"style","Variable and function name style should be snake_case or CamelCase.","    df$learner.id = factor(df$learner.id, order.lrns)","object_name_linter"
"R/calculateConfusionMatrix.R",118,12,"style","Variable and function name style should be snake_case or CamelCase.","    result$relative.row = result.rel.row","object_name_linter"
"R/calculateConfusionMatrix.R",119,12,"style","Variable and function name style should be snake_case or CamelCase.","    result$relative.col = result.rel.col","object_name_linter"
"R/calculateConfusionMatrix.R",120,12,"style","Variable and function name style should be snake_case or CamelCase.","    result$relative.error = result$result[k + 1, k + 1] / n.pred","object_name_linter"
"R/ClassifTask.R",36,8,"style","Variable and function name style should be snake_case or CamelCase.","  task$task.desc = makeClassifTaskDesc(id, data, target, weights, blocking, positive, coordinates)","object_name_linter"
"R/ClusterTask.R",16,8,"style","Variable and function name style should be snake_case or CamelCase.","  task$task.desc = makeClusterTaskDesc(id, data, weights, blocking, coordinates)","object_name_linter"
"R/CostSensTask.R",45,8,"style","Variable and function name style should be snake_case or CamelCase.","  task$task.desc = makeCostSensTaskDesc(id, data, target, blocking, costs, coordinates)","object_name_linter"
"R/CostSensWeightedPairsWrapper.R",61,15,"style","Variable and function name style should be snake_case or CamelCase.","        feats$..y.. = y","object_name_linter"
"R/createSpatialResamplingPlots.R",153,5,"style","Variable and function name style should be snake_case or CamelCase.","    length.n.resamp = length(resample)","object_name_linter"
"R/createSpatialResamplingPlots.R",160,3,"style","Variable and function name style should be snake_case or CamelCase.","  plot.list.out.all = lapply(resample, function(r) {","object_name_linter"
"R/createSpatialResamplingPlots.R",171,5,"style","Variable and function name style should be snake_case or CamelCase.","    plot.list.out = imap(plot.list, function(.x, .y) {","object_name_linter"
"R/downsample.R",37,7,"style","Variable and function name style should be snake_case or CamelCase.","  obj$train.inds = lapply(obj$train.inds, function(x) sample(x, size = length(x) * perc))","object_name_linter"
"R/DownsampleWrapper.R",26,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$dw.perc = dw.perc","object_name_linter"
"R/DownsampleWrapper.R",30,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$dw.stratify = dw.stratify","object_name_linter"
"R/DownsampleWrapper.R",55,5,"style","Variable and function name style should be snake_case or CamelCase.","  m$train.task = .task","object_name_linter"
"R/extractFDAFeatures.R",89,8,"style","Variable and function name style should be snake_case or CamelCase.","  desc$extractFDAFeat = Map(function(x) {","object_name_linter"
"R/extractFDAFeatures.R",102,8,"style","Variable and function name style should be snake_case or CamelCase.","  desc$fd.cols = names(desc$extractFDAFeat)","object_name_linter"
"R/extractFDAFeatures.R",115,8,"style","Variable and function name style should be snake_case or CamelCase.","  desc$extractFDAFeat = extracts","object_name_linter"
"R/FeatSelWrapper.R",71,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$opt.result = or","object_name_linter"
"R/FilterWrapper.R",168,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$more.args = ddd","object_name_linter"
"R/getHyperPars.R",43,26,"style","Variable and function name style should be snake_case or CamelCase.","    learner$par.set$pars$fw.base.methods = NULL","object_name_linter"
"R/getHyperPars.R",44,26,"style","Variable and function name style should be snake_case or CamelCase.","    learner$par.set$pars$fw.method = NULL","object_name_linter"
"R/getHyperPars.R",45,22,"style","Variable and function name style should be snake_case or CamelCase.","    learner$par.vals$fw.method = NULL","object_name_linter"
"R/getHyperPars.R",46,22,"style","Variable and function name style should be snake_case or CamelCase.","    learner$par.vals$fw.base.methods = NULL","object_name_linter"
"R/getHyperPars.R",49,39,"style","Variable and function name style should be snake_case or CamelCase.","    learner$next.learner$par.set$pars$fw.base.methods = NULL","object_name_linter"
"R/getHyperPars.R",50,39,"style","Variable and function name style should be snake_case or CamelCase.","    learner$next.learner$par.set$pars$fw.method = NULL","object_name_linter"
"R/getHyperPars.R",51,35,"style","Variable and function name style should be snake_case or CamelCase.","    learner$next.learner$par.vals$fw.method = NULL","object_name_linter"
"R/getHyperPars.R",52,35,"style","Variable and function name style should be snake_case or CamelCase.","    learner$next.learner$par.vals$fw.base.methods = NULL","object_name_linter"
"R/getMultilabelBinaryPerformances.R",39,20,"style","Variable and function name style should be snake_case or CamelCase.","        predi$data$prob.TRUE = probs[, label]","object_name_linter"
"R/getParamSet.R",13,1,"style","Variable and function name style should be snake_case or CamelCase.","getParamSet.Learner = function(x) {","object_name_linter"
"R/getParamSet.R",18,1,"style","Variable and function name style should be snake_case or CamelCase.","getParamSet.character = function(x) {","object_name_linter"
"R/Impute.R",179,8,"style","Variable and function name style should be snake_case or CamelCase.","  desc$recode.factor.levels = recode.factor.levels","object_name_linter"
"R/Impute.R",180,8,"style","Variable and function name style should be snake_case or CamelCase.","  desc$impute.new.levels = impute.new.levels","object_name_linter"
"R/logFunOpt.R",9,5,"style","Variable and function name style should be snake_case or CamelCase.","    start.time = Sys.time()","object_name_linter"
"R/logFunOpt.R",13,5,"style","Variable and function name style should be snake_case or CamelCase.","    end.time = Sys.time()","object_name_linter"
"R/logFunOpt.R",27,5,"style","Variable and function name style should be snake_case or CamelCase.","    start.time = Sys.time()","object_name_linter"
"R/logFunOpt.R",35,5,"style","Variable and function name style should be snake_case or CamelCase.","    end.time = Sys.time()","object_name_linter"
"R/makeLearner.R",173,6,"style","Variable and function name style should be snake_case or CamelCase.","  wl$fix.factors.prediction = fix.factors.prediction","object_name_linter"
"R/Measure_operators.R",22,11,"style","Variable and function name style should be snake_case or CamelCase.","  measure$extra.args = insert(measure$extra.args, insert(par.vals, args))","object_name_linter"
"R/ModelMultiplexer.R",93,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$par.set = c(lrn$par.set, ps)","object_name_linter"
"R/ModelMultiplexer.R",94,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$par.set.ens = ps","object_name_linter"
"R/ModelMultiplexer.R",95,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$fix.factors.prediction = TRUE","object_name_linter"
"R/MultilabelNestedStackingWrapper.R",37,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$cv.folds = cv.folds","object_name_linter"
"R/MultilabelStackingWrapper.R",30,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$cv.folds = cv.folds","object_name_linter"
"R/MultilabelTask.R",34,8,"style","Variable and function name style should be snake_case or CamelCase.","  task$task.desc = makeMultilabelTaskDesc(id, data, target, weights, blocking, coordinates)","object_name_linter"
"R/OptWrapper.R",8,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$opt.pars = par.set","object_name_linter"
"R/OptWrapper.R",9,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$bit.names = bit.names","object_name_linter"
"R/OptWrapper.R",10,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$bits.to.features = bits.to.features","object_name_linter"
"R/OptWrapper.R",11,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$opt.pars = par.set","object_name_linter"
"R/OptWrapper.R",13,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$show.info = show.info","object_name_linter"
"R/OverBaggingWrapper.R",48,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$obw.iters = obw.iters","object_name_linter"
"R/OverBaggingWrapper.R",52,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$obw.rate = obw.rate","object_name_linter"
"R/OverBaggingWrapper.R",56,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$obw.maxcl = obw.maxcl","object_name_linter"
"R/OverBaggingWrapper.R",60,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$obw.cl = obw.cl","object_name_linter"
"R/OverUndersampleWrapper.R",36,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$usw.rate = usw.rate","object_name_linter"
"R/OverUndersampleWrapper.R",40,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$usw.cl = usw.cl","object_name_linter"
"R/OverUndersampleWrapper.R",58,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$osw.rate = osw.rate","object_name_linter"
"R/OverUndersampleWrapper.R",62,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$osw.cl = osw.cl","object_name_linter"
"R/OverUndersampleWrapper.R",86,5,"style","Variable and function name style should be snake_case or CamelCase.","  m$train.task = .task","object_name_linter"
"R/OverUndersampleWrapper.R",103,5,"style","Variable and function name style should be snake_case or CamelCase.","  m$train.task = .task","object_name_linter"
"R/plotBMRRanksAsBarChart.R",39,6,"style","Variable and function name style should be snake_case or CamelCase.","  df$learner.id = factor(rownames(df))","object_name_linter"
"R/plotCritDifferences.R",83,6,"style","Variable and function name style should be snake_case or CamelCase.","  df$short.name = getBMRLearnerShortNames(bmr)","object_name_linter"
"R/plotLearnerPrediction.R",182,14,"style","Variable and function name style should be snake_case or CamelCase.","        grid$.prob.pred.class = prob","object_name_linter"
"R/predict.R",101,5,"style","Variable and function name style should be snake_case or CamelCase.","    time.predict = NA_real_","object_name_linter"
"R/predict.R",131,5,"style","Variable and function name style should be snake_case or CamelCase.","    time.predict = measureTime(fun1({","object_name_linter"
"R/predict.R",142,7,"style","Variable and function name style should be snake_case or CamelCase.","      time.predict = NA_real_","object_name_linter"
"R/Prediction.R",142,8,"style","Variable and function name style should be snake_case or CamelCase.","  data$truth.time = truth[, 1L]","object_name_linter"
"R/Prediction.R",143,8,"style","Variable and function name style should be snake_case or CamelCase.","  data$truth.event = truth[, 2L]","object_name_linter"
"R/RegrTask.R",27,8,"style","Variable and function name style should be snake_case or CamelCase.","  task$task.desc = makeRegrTaskDesc(id, data, target, weights, blocking, coordinates)","object_name_linter"
"R/RemoveConstantFeaturesWrapper.R",18,10,"style","Variable and function name style should be snake_case or CamelCase.","    args$dont.rm = union(args$dont.rm, target)","object_name_linter"
"R/ResampleDesc.R",123,5,"style","Variable and function name style should be snake_case or CamelCase.","  d$stratify.cols = stratify.cols","object_name_linter"
"R/ResampleDesc.R",125,5,"style","Variable and function name style should be snake_case or CamelCase.","  d$blocking.cv = blocking.cv","object_name_linter"
"R/ResampleInstance.R",92,10,"style","Variable and function name style should be snake_case or CamelCase.","    inst$train.inds = lapply(inst$train.inds, function(i) sample(which(blocking %in% levs[i])))","object_name_linter"
"R/ResampleInstance.R",94,10,"style","Variable and function name style should be snake_case or CamelCase.","    inst$test.inds = lapply(inst$train.inds, function(x) setdiff(ti, x))","object_name_linter"
"R/ResampleInstance.R",136,10,"style","Variable and function name style should be snake_case or CamelCase.","    inst$train.inds = Reduce(function(i1, i2) Map(c, i1, i2), train.inds)","object_name_linter"
"R/ResampleInstance.R",137,10,"style","Variable and function name style should be snake_case or CamelCase.","    inst$test.inds = Reduce(function(i1, i2) Map(c, i1, i2), test.inds)","object_name_linter"
"R/ResampleInstances.R",50,5,"style","Variable and function name style should be snake_case or CamelCase.","    length.test.inds = unlist(lapply(test.inds, function(x) length(x)))","object_name_linter"
"R/ResampleResult_operators.R",149,11,"style","Variable and function name style should be snake_case or CamelCase.","      res$measures.train = cbind(res$measures.train, perf$train[, missing.measures, drop = FALSE])","object_name_linter"
"R/ResampleResult_operators.R",154,11,"style","Variable and function name style should be snake_case or CamelCase.","      res$measures.test = cbind(res$measures.test, perf$test[, missing.measures, drop = FALSE])","object_name_linter"
"R/RLearner_classif_h2odeeplearning.R",252,7,"style","Variable and function name style should be snake_case or CamelCase.","    d$.mlr.weights = .weights","object_name_linter"
"R/RLearner_classif_h2oglm.R",47,7,"style","Variable and function name style should be snake_case or CamelCase.","    d$.mlr.weights = .weights","object_name_linter"
"R/RLearner_regr_h2odeeplearning.R",253,7,"style","Variable and function name style should be snake_case or CamelCase.","    d$.mlr.weights = .weights","object_name_linter"
"R/RLearner_regr_h2oglm.R",45,7,"style","Variable and function name style should be snake_case or CamelCase.","    d$.mlr.weights = .weights","object_name_linter"
"R/RLearner_regr_km.R",54,10,"style","Variable and function name style should be snake_case or CamelCase.","    args$nugget.stability = NULL","object_name_linter"
"R/RLearner.R",92,11,"style","Variable and function name style should be snake_case or CamelCase.","  learner$short.name = short.name","object_name_linter"
"R/RLearner.R",95,11,"style","Variable and function name style should be snake_case or CamelCase.","  learner$help.list = makeParamHelpList(callees, package, par.set)","object_name_linter"
"R/RLearner.R",113,11,"style","Variable and function name style should be snake_case or CamelCase.","      lrn$class.weights.param = class.weights.param","object_name_linter"
"R/SMOTEWrapper.R",42,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$sw.rate = sw.rate","object_name_linter"
"R/SMOTEWrapper.R",46,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$sw.nn = sw.nn","object_name_linter"
"R/SMOTEWrapper.R",49,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$sw.standardize = sw.standardize","object_name_linter"
"R/SMOTEWrapper.R",52,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$sw.alt.logic = sw.alt.logic","object_name_linter"
"R/StackedLearner.R",153,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$fix.factors.prediction = TRUE","object_name_linter"
"R/StackedLearner.R",154,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$use.feat = use.feat","object_name_linter"
"R/StackedLearner.R",157,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$super.learner = super.learner","object_name_linter"
"R/SurvTask.R",48,8,"style","Variable and function name style should be snake_case or CamelCase.","  task$task.desc = makeSurvTaskDesc(id, data, target, weights, blocking, coordinates)","object_name_linter"
"R/Task_operators.R",460,8,"style","Variable and function name style should be snake_case or CamelCase.","  task$task.desc = switch(td$type,","object_name_linter"
"R/train.R",81,5,"style","Variable and function name style should be snake_case or CamelCase.","    time.train = 0","object_name_linter"
"R/train.R",105,5,"style","Variable and function name style should be snake_case or CamelCase.","    time.train = measureTime(fun1({","object_name_linter"
"R/TuneControlIrace.R",45,18,"style","Variable and function name style should be snake_case or CamelCase.","    x$extra.args$maxExperiments = asCount(x$extra.args$maxExperiments)","object_name_linter"
"R/TuneControlIrace.R",55,18,"style","Variable and function name style should be snake_case or CamelCase.","    x$extra.args$maxExperiments = x$budget","object_name_linter"
"R/TuneControlMBO.R",58,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$mbo.control = mbo.control","object_name_linter"
"R/TuneControlMBO.R",60,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$mbo.design = mbo.design","object_name_linter"
"R/tuneIrace.R",26,22,"style","Variable and function name style should be snake_case or CamelCase.","  control$extra.args$n.instances = NULL","object_name_linter"
"R/tuneIrace.R",28,22,"style","Variable and function name style should be snake_case or CamelCase.","  control$extra.args$show.irace.output = NULL","object_name_linter"
"R/TuneMultiCritControlMBO.R",37,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$mbo.control = mbo.control","object_name_linter"
"R/TuneMultiCritControlMBO.R",39,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$mbo.design = mbo.design","object_name_linter"
"R/TuneWrapper.R",72,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$opt.result = or","object_name_linter"
"R/utils_opt.R",11,13,"style","Variable and function name style should be snake_case or CamelCase.","    control$impute.val = vnapply(measures, getDefVal)","object_name_linter"
"R/utils.R",35,1,"style","Variable and function name style should be snake_case or CamelCase.","print.mlr.dump = function(x, ...) {","object_name_linter"
"R/WeightedClassesWrapper.R",92,8,"style","Variable and function name style should be snake_case or CamelCase.","    pv$wcw.weight = wcw.weight","object_name_linter"
"R/WeightedClassesWrapper.R",100,5,"style","Variable and function name style should be snake_case or CamelCase.","  x$wcw.param = wcw.param","object_name_linter"
"R/zzz.R",15,1,"style","Variable and function name style should be snake_case or CamelCase.",".onLoad = function(libname, pkgname) {","object_name_linter"
"R/zzz.R",20,1,"style","Variable and function name style should be snake_case or CamelCase.",".onAttach = function(libname, pkgname) {","object_name_linter"
"R/zzz.R",34,5,"style","Variable and function name style should be snake_case or CamelCase.","mlr$learner.properties = list(","object_name_linter"
"tests/testthat/helper_lint.R",279,13,"style","Variable and function name style should be snake_case or CamelCase.","    linters$T.and.F.symbol = lintr::T_and_F_symbol_linter","object_name_linter"
"tests/testthat/helper_lint.R",282,13,"style","Variable and function name style should be snake_case or CamelCase.","    linters$semicolon.terminator = lintr::semicolon_terminator_linter","object_name_linter"
"tests/testthat/helper_lint.R",288,13,"style","Variable and function name style should be snake_case or CamelCase.","    linters$unneeded.concatenation = lintr::unneeded_concatenation_linter","object_name_linter"
"tests/testthat/test_base_BaseWrapper.R",34,41,"style","Place a space before left parenthesis, except in a function call.","      makeDiscreteParam(""C"", values = 2^(-2:2)),","spaces_left_parentheses_linter"
"tests/testthat/test_base_BaseWrapper.R",35,45,"style","Place a space before left parenthesis, except in a function call.","      makeDiscreteParam(""sigma"", values = 2^(-2:2))","spaces_left_parentheses_linter"
"tests/testthat/test_base_BaseWrapper.R",63,43,"style","Place a space before left parenthesis, except in a function call.","        makeDiscreteParam(""C"", values = 2^(-2:2)),","spaces_left_parentheses_linter"
"tests/testthat/test_base_BaseWrapper.R",64,47,"style","Place a space before left parenthesis, except in a function call.","        makeDiscreteParam(""sigma"", values = 2^(-2:2))","spaces_left_parentheses_linter"
"tests/testthat/test_base_generateHyperParsEffect.R",35,55,"style","Place a space before left parenthesis, except in a function call.","  ps = makeParamSet(makeDiscreteParam(""C"", values = 2^(-2:2)))","spaces_left_parentheses_linter"
"tests/testthat/test_base_measures.R",202,3,"style","Variable and function name style should be snake_case or CamelCase.","  time.surv = c(5, 10, 5, 10)","object_name_linter"
"tests/testthat/test_base_MulticlassWrapper.R",46,6,"style","Variable and function name style should be snake_case or CamelCase.","  df$Sepal.Length = factor(df$Sepal.Length)","object_name_linter"
"tests/testthat/test_base_plotCritDifferences.R",33,5,"style","Opening curly braces should never go on their own line and should always be followed by a new line.","    {","open_curly_linter"
"tests/testthat/test_base_selectFeatures.R",17,8,"style","Variable and function name style should be snake_case or CamelCase.","  ctrl$impute.val = 10","object_name_linter"
"tests/testthat/test_base_tuning.R",34,8,"style","Variable and function name style should be snake_case or CamelCase.","  ctrl$impute.val = 10","object_name_linter"
"tests/testthat/test_base_tuning.R",192,7,"style","Variable and function name style should be snake_case or CamelCase.","  lrn$par.set = c(lrn$par.set, long.learner.params)","object_name_linter"
"tests/testthat/test_classif_ksvm.R",26,10,"style","Variable and function name style should be snake_case or CamelCase.","    pars$prob.model = TRUE","object_name_linter"
"tests/testthat/test_classif_pamr.R",20,14,"style","Variable and function name style should be snake_case or CamelCase.","      parset$threshold.predict = NULL","object_name_linter"
"tests/testthat/test_regr_frbs.R",20,10,"style","Variable and function name style should be snake_case or CamelCase.","    pars$data.train = regr.num.train","object_name_linter"
"tests/testthat/test_regr_mob.R",33,12,"style","Variable and function name style should be snake_case or CamelCase.","    parset$term.feats = parset$part.feats = NULL","object_name_linter"
"tests/testthat/test_regr_mob.R",33,32,"style","Variable and function name style should be snake_case or CamelCase.","    parset$term.feats = parset$part.feats = NULL","object_name_linter"
"tests/testthat/test_tune_tuneDesign.R",6,3,"style","Variable and function name style should be snake_case or CamelCase.","  sigma.seq = 2^seq(-2, 2, length.out = reso)","object_name_linter"
"tests/testthat/test_tune_tuneGrid.R",6,3,"style","Variable and function name style should be snake_case or CamelCase.","  sigma.seq = 2^seq(-2, 2, length.out = reso)","object_name_linter"
"tests/testthat/test_tune_tuneGrid.R",7,3,"style","Variable and function name style should be snake_case or CamelCase.","  sigma.seq.2 = 2^seq(-2, 2, length.out = reso * 2)","object_name_linter"
"tests/testthat/test_tune_tuneGrid.R",41,7,"style","Variable and function name style should be snake_case or CamelCase.","  op1$exec.time = op2$exec.time = NULL","object_name_linter"
"tests/testthat/test_tune_tuneGrid.R",41,23,"style","Variable and function name style should be snake_case or CamelCase.","  op1$exec.time = op2$exec.time = NULL","object_name_linter"
