"filename","line_number","column_number","type","message","line","linter"
"R/catalogue.R",84,28,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (is.null(column_name) & !is.null(column_value)) {","vector_logic_linter"
"R/catalogue.R",87,29,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.null(column_name) & is.null(column_value)) {","vector_logic_linter"
"R/catalogue.R",90,29,"warning","Conditional expressions require scalar logical operators (&& and ||)","  if (!is.null(column_name) & !is.null(column_value)) {","vector_logic_linter"
"R/catalogue.R",99,23,"warning","Conditional expressions require scalar logical operators (&& and ||)","      if (condition_2 | condition_3 | condition_4) {","vector_logic_linter"
"R/catalogue.R",99,37,"warning","Conditional expressions require scalar logical operators (&& and ||)","      if (condition_2 | condition_3 | condition_4) {","vector_logic_linter"
"R/catalogue.R",101,11,"warning","local variable ‘threshold’ assigned but may not be used","          threshold <- as.numeric(as.character(substr(column_value, 3,","object_usage_linter"
"R/catalogue.R",108,14,"style","There should be a space before an opening curly brace.","        }else{","brace_linter"
"R/catalogue.R",118,12,"style","There should be a space before an opening curly brace.","      }else{","brace_linter"
"R/catalogue.R",123,10,"style","There should be a space before an opening curly brace.","    }else{","brace_linter"
"R/get_ts.R",71,8,"style","There should be a space before an opening curly brace.","  }else{","brace_linter"
"R/get_ts.R",78,12,"style","There should be a space before an opening curly brace.","      }else{","brace_linter"
"R/get_ts.R",79,77,"warning","Conditional expressions require scalar logical operators (&& and ||)","        if (type %in% c(""pot-stage"", ""pot-flow"", ""amax-stage"", ""amax-flow"") &","vector_logic_linter"
"R/get_ts.R",83,14,"style","There should be a space before an opening curly brace.","        }else{","brace_linter"
"R/get_ts.R",89,10,"style","There should be a space before an opening curly brace.","    }else{","brace_linter"
"R/get_ts.R",94,42,"warning","Conditional expressions require scalar logical operators (&& and ||)","        if (""SOCKcluster"" %in% class(cl) | ""cluster"" %in% class(cl)) {","vector_logic_linter"
"R/get_ts.R",103,14,"style","There should be a space before an opening curly brace.","        }else{","brace_linter"
"R/get_ts.R",107,12,"style","There should be a space before an opening curly brace.","      }else{","brace_linter"
"R/internals.R",90,8,"style","There should be a space before an opening curly brace.","  }else{","brace_linter"
"R/internals.R",100,73,"warning","Conditional expressions require scalar logical operators (&& and ||)","    if (type %in% c(""pot-stage"", ""pot-flow"", ""amax-stage"", ""amax-flow"") &","vector_logic_linter"
"R/internals.R",143,8,"style","There should be a space before an opening curly brace.","  }else{","brace_linter"
"R/osg_parse.R",67,26,"style","Put spaces around all infix operators.","    padz <- function(x, n=max(nchar(x))) gsub("" "", ""0"", formatC(x, width = -n))","infix_spaces_linter"
"R/plot_rain_flow.R",44,55,"style","Use TRUE instead of the symbol T.","  proportion <- ceiling((max(converted_flow, na.rm = T) -","T_and_F_symbol_linter"
"R/plot_rain_flow.R",45,57,"style","Use TRUE instead of the symbol T.","                           min(converted_flow, na.rm = T)) / 3)","T_and_F_symbol_linter"
"R/plot_rain_flow.R",54,35,"style","Use TRUE instead of the symbol T.","  graphics::par(bty = ""n"", new = T)","T_and_F_symbol_linter"
"R/plot_rain_flow.R",57,49,"style","Use FALSE instead of the symbol F.","                 yaxt = ""n"", xaxt = ""n"", ann = F, # do not plot x and y axis","T_and_F_symbol_linter"
"R/plot_rain_flow.R",69,35,"style","Use FALSE instead of the symbol F.","  graphics::par(bty = ""o"", new = F)","T_and_F_symbol_linter"
"R/seasonal_averages.R",28,8,"style","There should be a space before an opening curly brace.","  }else{","brace_linter"
"tests/testthat.R",7,6,"style","There should be a space before an opening curly brace.","}else{","brace_linter"
"vignettes/rnrfa-vignette.Rmd",32,81,"style","Lines should not be more than 80 characters.","install.packages(c(""cowplot"", ""httr"", ""xts"", ""ggmap"", ""ggplot2"", ""sp"", ""rgdal"", ""parallel"", ""tibble""))","line_length_linter"
"vignettes/rnrfa-vignette.Rmd",70,1,"style","Variable and function name style should be snake_case or symbols.","allIDs <- station_ids()","object_name_linter"
"vignettes/rnrfa-vignette.Rmd",79,1,"style","Variable and function name style should be snake_case or symbols.","allStations <- catalogue()","object_name_linter"
"vignettes/rnrfa-vignette.Rmd",142,22,"style","Put spaces around all infix operators.","catalogue(column_name=""river"", column_value=""Wye"")","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",142,44,"style","Put spaces around all infix operators.","catalogue(column_name=""river"", column_value=""Wye"")","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",145,28,"style","Put spaces around all infix operators.","catalogue(bbox, column_name=""river"", column_value=""Wye"")","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",145,50,"style","Put spaces around all infix operators.","catalogue(bbox, column_name=""river"", column_value=""Wye"")","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",148,28,"style","Put spaces around all infix operators.","catalogue(bbox, column_name=""catchment-area"", column_value="">1"")","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",148,59,"style","Put spaces around all infix operators.","catalogue(bbox, column_name=""catchment-area"", column_value="">1"")","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",154,1,"style","Trailing whitespace is superfluous.","                                  ","trailing_whitespace_linter"
"vignettes/rnrfa-vignette.Rmd",156,22,"style","Put spaces around all infix operators.","catalogue(column_name=""id"", column_value=c(3001,3002,3003))","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",156,41,"style","Put spaces around all infix operators.","catalogue(column_name=""id"", column_value=c(3001,3002,3003))","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",156,49,"style","Commas should always have a space after.","catalogue(column_name=""id"", column_value=c(3001,3002,3003))","commas_linter"
"vignettes/rnrfa-vignette.Rmd",156,54,"style","Commas should always have a space after.","catalogue(column_name=""id"", column_value=c(3001,3002,3003))","commas_linter"
"vignettes/rnrfa-vignette.Rmd",161,1,"style","Variable and function name style should be snake_case or symbols.","someStations <- catalogue(bbox,","object_name_linter"
"vignettes/rnrfa-vignette.Rmd",163,50,"style","Commas should always have a space after.","                          column_value = c(54022,54090,54091,54092,54097),","commas_linter"
"vignettes/rnrfa-vignette.Rmd",163,56,"style","Commas should always have a space after.","                          column_value = c(54022,54090,54091,54092,54097),","commas_linter"
"vignettes/rnrfa-vignette.Rmd",163,62,"style","Commas should always have a space after.","                          column_value = c(54022,54090,54091,54092,54097),","commas_linter"
"vignettes/rnrfa-vignette.Rmd",163,68,"style","Commas should always have a space after.","                          column_value = c(54022,54090,54091,54092,54097),","commas_linter"
"vignettes/rnrfa-vignette.Rmd",214,21,"style","Put spaces around all infix operators.","plot(info$data, main=paste(""Monthly rainfall data for the"",","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",215,50,"style","Commas should always have a space after.","                           info$meta$stationName,""catchment""), ","commas_linter"
"vignettes/rnrfa-vignette.Rmd",215,63,"style","Trailing whitespace is superfluous.","                           info$meta$stationName,""catchment""), ","trailing_whitespace_linter"
"vignettes/rnrfa-vignette.Rmd",216,10,"style","Put spaces around all infix operators.","     xlab="""", ylab=info$meta$units)","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",216,19,"style","Put spaces around all infix operators.","     xlab="""", ylab=info$meta$units)","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",228,21,"style","Put spaces around all infix operators.","plot(info$data, main=paste0(""Daily flow data for the "",","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",239,17,"style","Commas should always have a space after.","s <- cmr(c(3002,3003), metadata = TRUE)","commas_linter"
"vignettes/rnrfa-vignette.Rmd",242,18,"style","Trailing whitespace is superfluous.","plot(s[[1]]$data, ","trailing_whitespace_linter"
"vignettes/rnrfa-vignette.Rmd",244,23,"style","Put spaces around all infix operators.","lines(s[[2]]$data, col=""green"")","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",261,45,"style","`%>%` should always have a space before it and a new line after it, unless the full pipeline fits on one line.","leaflet(data = someStations) %>% addTiles() %>%","pipe_continuation_linter"
"vignettes/rnrfa-vignette.Rmd",262,68,"style","Commas should always have a space after.","  addMarkers(~longitude, ~latitude, popup = ~as.character(paste(id,name)))","commas_linter"
"vignettes/rnrfa-vignette.Rmd",279,1,"style","Variable and function name style should be snake_case or symbols.","someStations <- catalogue(bbox)","object_name_linter"
"vignettes/rnrfa-vignette.Rmd",294,1,"style","Variable and function name style should be snake_case or symbols.","someStations$meangdf <- unlist(lapply(s2, mean))","object_name_linter"
"vignettes/rnrfa-vignette.Rmd",301,49,"style","Commas should always have a space after.","  xlab(expression(paste(""Catchment area [Km^2]"",sep=""""))) +","commas_linter"
"vignettes/rnrfa-vignette.Rmd",301,52,"style","Put spaces around all infix operators.","  xlab(expression(paste(""Catchment area [Km^2]"",sep=""""))) +","infix_spaces_linter"
"vignettes/rnrfa-vignette.Rmd",302,45,"style","Commas should always have a space after.","  ylab(expression(paste(""Mean flow [m^3/s]"",sep="""")))","commas_linter"
"vignettes/rnrfa-vignette.Rmd",302,48,"style","Put spaces around all infix operators.","  ylab(expression(paste(""Mean flow [m^3/s]"",sep="""")))","infix_spaces_linter"
