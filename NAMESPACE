# Generated by roxygen2: do not edit by hand


if (getRversion() >= "4.0.0") {
  importFrom(tools, R_user_dir)
} else {
  importFrom(backports, R_user_dir)
}
S3method("[",lints)
S3method(as.data.frame,lints)
S3method(format,lint)
S3method(format,lints)
S3method(names,lints)
S3method(print,lint)
S3method(print,lints)
S3method(split,lints)
S3method(summary,lints)
export(Lint)
export(Linter)
export(T_and_F_symbol_linter)
export(absolute_path_linter)
export(all_linters)
export(all_undesirable_functions)
export(all_undesirable_operators)
export(any_duplicated_linter)
export(any_is_na_linter)
export(assignment_linter)
export(available_linters)
export(available_tags)
export(backport_linter)
export(boolean_arithmetic_linter)
export(brace_linter)
export(checkstyle_output)
export(class_equals_linter)
export(clear_cache)
export(closed_curly_linter)
export(commas_linter)
export(commented_code_linter)
export(condition_message_linter)
export(conjunct_test_linter)
export(consecutive_assertion_linter)
export(consecutive_stopifnot_linter)
export(cyclocomp_linter)
export(default_linters)
export(default_settings)
export(default_undesirable_functions)
export(default_undesirable_operators)
export(duplicate_argument_linter)
export(empty_assignment_linter)
export(equals_na_linter)
export(expect_comparison_linter)
export(expect_identical_linter)
export(expect_length_linter)
export(expect_lint)
export(expect_lint_free)
export(expect_named_linter)
export(expect_not_linter)
export(expect_null_linter)
export(expect_s3_class_linter)
export(expect_s4_class_linter)
export(expect_true_false_linter)
export(expect_type_linter)
export(extraction_operator_linter)
export(fixed_regex_linter)
export(for_loop_index_linter)
export(function_argument_linter)
export(function_left_parentheses_linter)
export(function_return_linter)
export(get_r_string)
export(get_source_expressions)
export(ids_with_token)
export(ifelse_censor_linter)
export(implicit_assignment_linter)
export(implicit_integer_linter)
export(indentation_linter)
export(infix_spaces_linter)
export(inner_combine_linter)
export(is_lint_level)
export(is_numeric_linter)
export(lengths_linter)
export(line_length_linter)
export(lint)
export(lint_dir)
export(lint_package)
export(linters_with_defaults)
export(linters_with_tags)
export(literal_coercion_linter)
export(matrix_apply_linter)
export(missing_argument_linter)
export(missing_package_linter)
export(modify_defaults)
export(namespace_linter)
export(nested_ifelse_linter)
export(no_tab_linter)
export(nonportable_path_linter)
export(numeric_leading_zero_linter)
export(object_length_linter)
export(object_name_linter)
export(object_usage_linter)
export(open_curly_linter)
export(outer_negation_linter)
export(package_hooks_linter)
export(paren_body_linter)
export(paren_brace_linter)
export(paste_linter)
export(pipe_call_linter)
export(pipe_continuation_linter)
export(quotes_linter)
export(redundant_equals_linter)
export(redundant_ifelse_linter)
export(regex_subset_linter)
export(routine_registration_linter)
export(sarif_output)
export(semicolon_linter)
export(semicolon_terminator_linter)
export(seq_linter)
export(single_quotes_linter)
export(sort_linter)
export(spaces_inside_linter)
export(spaces_left_parentheses_linter)
export(sprintf_linter)
export(string_boundary_linter)
export(strings_as_factors_linter)
export(system_file_linter)
export(todo_comment_linter)
export(trailing_blank_lines_linter)
export(trailing_whitespace_linter)
export(undesirable_function_linter)
export(undesirable_operator_linter)
export(unnecessary_concatenation_linter)
export(unnecessary_lambda_linter)
export(unnecessary_nested_if_linter)
export(unnecessary_placeholder_linter)
export(unneeded_concatenation_linter)
export(unreachable_code_linter)
export(unused_import_linter)
export(use_lintr)
export(vector_logic_linter)
export(whitespace_linter)
export(with_defaults)
export(with_id)
export(xml_nodes_to_lints)
export(yoda_test_linter)
importFrom(cyclocomp,cyclocomp)
importFrom(rex,character_class)
importFrom(rex,re_matches)
importFrom(rex,re_substitutes)
importFrom(rex,regex)
importFrom(rex,rex)
importFrom(stats,na.omit)
importFrom(utils,capture.output)
importFrom(utils,getParseData)
importFrom(utils,head)
importFrom(utils,relist)
importFrom(utils,tail)
importFrom(xml2,as_list)
importFrom(xml2,xml_find_all)
