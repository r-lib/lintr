% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/return_linter.R
\name{return_linter}
\alias{return_linter}
\title{Return linter}
\usage{
return_linter(
  return_style = c("implicit", "explicit"),
  additional_allowed_func = NULL,
  additional_side_effect_func = NULL
)
}
\arguments{
\item{return_style}{Character string naming the return style. \code{"implicit"},
the default, enforeces the Tidyverse guide recommendation to leave terminal
returns implicit. \code{"explicit"} style requires that \code{return()} always be
explicitly supplied.}

\item{additional_allowed_func}{Names of additional functions that are
accepted as return if \code{return_style = "explicit"}.}

\item{additional_side_effect_func}{Names of additional functions that are
not checked for an explicit retun if \code{return_style = "explicit"}.}
}
\description{
This linter checks functions' \code{\link[=return]{return()}} expressions.
}
\examples{
# will produce lints
code <- "function(x) {\n  return(x + 1)\n}"
writeLines(code)
lint(
  text = code,
  linters = return_linter()
)

code <- "function(x) {\n  x + 1\n}"
writeLines(code)
lint(
  text = code,
  linters = return_linter(return_style = "explicit")
)

# okay
code <- "function(x) {\n  x + 1\n}"
writeLines(code)
lint(
  text = code,
  linters = return_linter()
)

code <- "function(x) {\n  return(x + 1)\n}"
writeLines(code)
lint(
  text = code,
  linters = return_linter(return_style = "explicit")
)


}
\seealso{
\itemize{
\item \link{linters} for a complete list of linters available in lintr.
\item \url{https://style.tidyverse.org/functions.html?q=return#return}
}
}
\section{Tags}{
\link[=configurable_linters]{configurable}, \link[=default_linters]{default}, \link[=style_linters]{style}
}
